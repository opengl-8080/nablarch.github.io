


<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->
<head>
  <meta charset="utf-8">
  <meta http-equiv='content-language' content='ja'>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>7.6.1. MOM Messaging &mdash; ∇Nablarch  5u19 documentation</title>
  

  
  
  
  

  

  
  
    

  

  
  
    <link rel="stylesheet" href="../../../../_static/custom.css" type="text/css" />
  

  

  
  <link rel="canonical" href="https://nablarch.github.io/docs/LATEST/doc/application_framework/application_framework/libraries/system_messaging/mom_system_messaging.html" />
  
    <link rel="top" title="∇Nablarch  5u19 documentation" href="../../../../index.html"/>
        <link rel="up" title="7.6. Intersystem Messaging" href="../system_messaging.html"/>
        <link rel="next" title="7.6.2. HTTP Messaging" href="http_system_messaging.html"/>
        <link rel="prev" title="7.6. Intersystem Messaging" href="../system_messaging.html"/>
 

  
  <script src="../../../../_static/js/modernizr.min.js"></script>

</head>

<body class="wy-body-for-nav" role="document">

   
  <div class="wy-grid-for-nav">

    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search">
          
  
  <a href="../../../../index.html" id="sidebar-title" class="icon"> ∇Nablarch 
  

  
    <div id="sidebar-version">Version: 5u19</div>
  </a>

  <div role="search">
    <form id="google-search-form" class="wy-form" method="get" action="https://www.google.co.jp/search">
      <input type="text" name="text" placeholder="Search docs on google" id="text"/>
      <input type="hidden" name="q" id="q"/>
    </form>
  </div>
    
    

        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
  
  
    <ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../../../about_nablarch/index.html">What is the Nablarch?</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../about_nablarch/concept.html">Nablarch Concept</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../about_nablarch/concept.html#robustness">Robustness</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../about_nablarch/concept.html#testability">Testability</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../about_nablarch/concept.html#ready-to-use">Ready-to-Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../about_nablarch/mvn_module.html">Module List of Nablarch</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../about_nablarch/license.html">Information on Nablarch License</a></li>
</ul>
</li>
<li class="toctree-l1 current"><a class="reference internal" href="../../../index.html">Nablarch Application Framework</a><ul class="current">
<li class="toctree-l2 current"><a class="reference internal" href="../../index.html">Application Framework</a><ul class="current">
<li class="toctree-l3"><a class="reference internal" href="../../nablarch/index.html">1. What is Nablarch Application Framework?</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../web/index.html">2. Web Application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../web_service/index.html">3. Web Service</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../batch/index.html">4. Batch Application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../messaging/index.html">5. Messaging</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../handlers/index.html">6. Standard Handler Provided by Nablarch</a></li>
<li class="toctree-l3 current"><a class="reference internal" href="../index.html">7. Libraries Provided by Nablarch</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../blank_project/index.html">8. Blank Project</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../setting_guide/index.html">9. Nablarch Application Framework Configuration Guide</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../configuration/index.html">10. Default Configuration List</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../cloud_native/index.html">11. Nablarch Cloud Native Support</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../adaptors/index.html">Adaptor</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/log_adaptor.html">log Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/router_adaptor.html">Routing Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/webspheremq_adaptor.html">IBM WebSphere MQ Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/jaxrs_adaptor.html">JAX-RS Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/doma_adaptor.html">Doma Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/jsr310_adaptor.html">JSR310(Date and Time API)Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/mail_sender_freemarker_adaptor.html">E-mail FreeMarker Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/mail_sender_thymeleaf_adaptor.html">E-mail Thymeleaf Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/mail_sender_velocity_adaptor.html">E-mail Velocity Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/web_thymeleaf_adaptor.html">Web Application Thymeleaf Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/lettuce_adaptor.html">Lettuce Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/slf4j_adaptor.html">SLF4J Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/micrometer_adaptor.html">Micrometer Adapter</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../example/index.html">Example</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../example/index.html#procedure-to-build-the-environment">Procedure to build the environment</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../example/index.html#application-execution-procedure">Application execution procedure</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../extension_components/index.html">Nablarch extension component</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/report/index.html">1. Form library</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/workflow/doc/index.html">2. Workflow library</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/workflow/tool/index.html">3. Workflow definition data generation tool</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/etl/index.html">4. ETL</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/etl/etl_maven_plugin.html">5. ETL Maven plugin</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../development_tools/index.html">Nablarch development tools</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html">1. Efficient Java Static Checks</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html#conduct-syntax-check">1.1. Conduct syntax check</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html#unify-the-format">1.2. Unify the format</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html#check-if-unauthorized-apis-are-being-used">1.3. Check if unauthorized APIs are being used</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/ui_dev/index.html">2. Front-end UI development platform for advanced users</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/testing_framework/index.html">3. Testing framework</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/testing_framework/guide/development_guide/05_UnitTestGuide/index.html">3.1. How to Execute Unit Tests</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/testing_framework/guide/development_guide/06_TestFWGuide/index.html">3.2. How to Use the Automated Test Framework</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/testing_framework/guide/development_guide/08_TestTools/index.html">3.3. Tools Used in the Programming Phase</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/toolbox/index.html">4. Useful Tools When Developing Applications</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/toolbox/JspStaticAnalysis/index.html">4.1. JSP Static Analysis Tool</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/toolbox/SqlExecutor/SqlExecutor.html">4.2. Nablarch SQL Executor</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/toolbox/JspVerifier/JspVerifier.html">4.3. Job Screen JSP Validation Tool</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../examples/index.html">Nablarch Implementation Examples</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/01/index.html">Sample Password Encryption Function Using Database</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/0101_PBKDF2PasswordEncryptor.html">Sample Password Encryption Function Using PBKDF2</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/02/index.html">Extended Validation Functions</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#email-address-validation">Email address validation</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#validation-of-japan-telephone-numbers">Validation of Japan telephone numbers</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#code-value-validation">Code value validation</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/03/index.html">Display a List of Search Results</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#how-to-use">How to Use</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchinfo-class">ListSearchInfo class</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchresult-tag">listSearchResult tag</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#sort-search-results">Sort search results</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#how-to-implement-displaying-a-list-of-all-search-results-on-a-single-screen">How to implement displaying a list of all search results on a single screen</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#how-to-implement-the-initial-display-of-search-results-with-the-default-search-conditions">How to implement the initial display of search results with the default search conditions</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#default-settings-for-the-search-result-list-display-function">Default settings for the search result list display function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#how-to-import-a-sample-implementation-tag-file-into-the-business-application">How to import a sample implementation (tag file) into the business application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#tag-reference">Tag Reference</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/04/index.html">Extended Formatter Functions</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/04/0401_ExtendedDataFormatter.html">Data Formatter Expansion</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/04/0402_ExtendedFieldType.html">Field Type Expansion in the Data Formatter Function</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/05/index.html">Sample File Management Function Using Database</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#functions">Functions</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/06/index.html">CAPTCHA Function Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/06_Captcha_guide.html">How to Incorporate the CAPTCHA Function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/07/index.html">Sample UserAgent Information Acquisition Function</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#description-of-configuration">Description of configuration</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#use-case">Use case</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/08/index.html">Sample of HTML Email Send Function</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#request">Request</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#implementation-examples">Implementation examples</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/09/index.html">How to Use a Sample to Send a Digitally Signed Email Using Bouncycastle</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#environment-preparation">Environment preparation</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#structure-of-digitally-signed-email-send-function">Structure of digitally signed email send function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#preparation-of-configuration-file">Preparation of configuration file</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#execution">Execution</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/10/index.html">How to Use the Log Aggregation Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/10/index.html#list-of-samples-provided">List of samples provided</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/11/index.html">Messaging Platform Test Simulator Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#uses">Uses</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#features">Features</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#request">Request</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#how-to-use">How to use</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#expansion-example">Expansion example</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../nablarch_api/index.html">Nablarch API</a></li>
</ul>

  

        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" role="navigation" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../../../../index.html">∇Nablarch </a>
        
      </nav>


      
      <div class="wy-nav-content">
        <div class="rst-content">
          

 



<div role="navigation" aria-label="breadcrumbs navigation">
  <ul class="wy-breadcrumbs">
    <li><a href="../../../../index.html">Docs</a> &raquo;</li>
      
          <li><a href="../../../index.html">Nablarch Application Framework</a> &raquo;</li>
      
          <li><a href="../../index.html">Application Framework</a> &raquo;</li>
      
          <li><a href="../index.html">7. Libraries Provided by Nablarch</a> &raquo;</li>
      
          <li><a href="../system_messaging.html">7.6. Intersystem Messaging</a> &raquo;</li>
      
    <li>7.6.1. MOM Messaging</li>
    <li class="wy-breadcrumbs-aside">
      <a href="https://github.com/nablarch" class="fa fa-github">GitHub</a>
    </li>
    <li class="wy-breadcrumbs-aside">
        <a href="https://nablarch.github.io/docs/LATEST/doc/index.html" class="ja">日本語</a>
    </li>
  </ul>
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  <div class="section" id="mom-messaging">
<span id="mom-system-messaging"></span><h1>7.6.1. MOM Messaging<a class="headerlink" href="#mom-messaging" title="Permalink to this headline">¶</a></h1>
<div class="contents local topic" id="table-of-contents">
<p class="topic-title first">Table of contents</p>
<ul class="simple">
<li><a class="reference internal" href="#function-overview" id="id1">Function overview</a><ul>
<li><a class="reference internal" href="#compatible-with-various-moms" id="id2">Compatible with various MOMs</a></li>
</ul>
</li>
<li><a class="reference internal" href="#module-list" id="id3">Module list</a></li>
<li><a class="reference internal" href="#how-to-use" id="id4">How to use</a><ul>
<li><a class="reference internal" href="#configure-settings-to-use-mom-messaging" id="id5">Configure settings to use MOM messaging</a></li>
<li><a class="reference internal" href="#send-message-with-asynchronous-response-sending-asynchronous-message" id="id6">Send message with asynchronous response (Sending asynchronous message)</a></li>
<li><a class="reference internal" href="#send-message-with-synchronous-response-sending-synchronous-message" id="id7">Send message with synchronous response (Sending synchronous message)</a></li>
<li><a class="reference internal" href="#receive-message-with-asynchronous-response-receiving-asynchronous-message" id="id8">Receive message with asynchronous response (Receiving asynchronous message)</a></li>
<li><a class="reference internal" href="#receive-message-with-synchronous-response-receiving-synchronous-message" id="id9">Receive message with synchronous response (Receiving synchronous message)</a></li>
</ul>
</li>
<li><a class="reference internal" href="#expansion-example" id="id10">Expansion example</a><ul>
<li><a class="reference internal" href="#change-the-reading-and-writing-of-the-framework-control-header" id="id11">Change the reading and writing of the framework control header</a></li>
</ul>
</li>
<li><a class="reference internal" href="#data-model-of-sent-and-received-messages" id="id12">Data model of sent and received messages</a></li>
</ul>
</div>
<p>Provides a function to send and receive messages using MOM.
In this chapter, the message queue used for MOM messaging is referred to as MQ.</p>
<p>The data model shown in <a class="reference internal" href="#mom-system-messaging-data-model"><span>Data model of sent and received messages</span></a> is assumed for MOM messaging.
Also, <a class="reference internal" href="../data_io/data_format.html#data-format"><span>General Data Format</span></a> is used for the message format.</p>
<div class="admonition important">
<p class="first admonition-title">Important</p>
<p>In the <a class="reference internal" href="#mom-system-messaging-data-model"><span>Data model of sent and received messages</span></a>,
the <a class="reference internal" href="#mom-system-messaging-fw-header"><span>framework control header</span></a> is an item specified independently by Nablarch,
and it is assumed to be included in the <a class="reference internal" href="#mom-system-messaging-message-body"><span>message body</span></a>.</p>
<p>There is no problem if the message format can be designed in the project,
but the requirement may not be met
if the message format is already specified by the external system.</p>
<p class="last">Such cases must be supported by adding the implementation in the project
by referring to <a class="reference internal" href="#mom-system-messaging-change-fw-header"><span>Change the reading and writing of the framework control header</span></a>.</p>
</div>
<p>The assumed execution control platform differs for MOM messaging depending on the type of send and receive.</p>
<table border="1" class="colwidths-given white-space-normal docutils">
<colgroup>
<col width="50%" />
<col width="50%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Type of send and receive</th>
<th class="head">Execution control platform</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td><a class="reference internal" href="#mom-system-messaging-async-message-send"><span>Sending asynchronous message</span></a></td>
<td><a class="reference internal" href="../../batch/nablarch_batch/index.html#nablarch-batch"><span>Nablarch Batch Application</span></a></td>
</tr>
<tr class="row-odd"><td><a class="reference internal" href="#mom-system-messaging-sync-message-send"><span>Sending synchronous message</span></a></td>
<td>Does not depend on the execution control platform</td>
</tr>
<tr class="row-even"><td><a class="reference internal" href="#mom-system-messaging-async-message-receive"><span>Receiving asynchronous message</span></a></td>
<td><a class="reference internal" href="../../messaging/mom/index.html#mom-messaging"><span>Messaging with MOM</span></a></td>
</tr>
<tr class="row-odd"><td><a class="reference internal" href="#mom-system-messaging-sync-message-receive"><span>Receiving synchronous message</span></a></td>
<td><a class="reference internal" href="../../messaging/mom/index.html#mom-messaging"><span>Messaging with MOM</span></a></td>
</tr>
</tbody>
</table>
<div class="section" id="function-overview">
<h2><a class="toc-backref" href="#id1">7.6.1.1. Function overview</a><a class="headerlink" href="#function-overview" title="Permalink to this headline">¶</a></h2>
<div class="section" id="compatible-with-various-moms">
<h3><a class="toc-backref" href="#id2">7.6.1.1.1. Compatible with various MOMs</a><a class="headerlink" href="#compatible-with-various-moms" title="Permalink to this headline">¶</a></h3>
<p>Since MOM messaging various MOMs,
the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/MessagingProvider.html" title="nablarch.fw.messaging.MessagingProvider">MessagingProvider</a> interface is provided.
MQ connection that depends on MOM and message send/receive are performed by the class that implements this interface.
Therefore, this function can be used in various MOMs
by creating a class that implements the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/MessagingProvider.html" title="nablarch.fw.messaging.MessagingProvider">MessagingProvider</a> interface.</p>
<p>MOM messaging is compatible with JMS
and offers <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/provider/JmsMessagingProvider.html" title="nablarch.fw.messaging.provider.JmsMessagingProvider">JmsMessagingProvider</a>.
For details, refer to the linked Javadoc.</p>
<p>It also supports WebSphere MQ,
which is widely used as a MOM. For details, see <a class="reference internal" href="../../../adaptors/webspheremq_adaptor.html#webspheremq-adaptor"><span>IBM WebSphere MQ Adapter</span></a>.</p>
</div>
</div>
<div class="section" id="module-list">
<h2><a class="toc-backref" href="#id3">7.6.1.2. Module list</a><a class="headerlink" href="#module-list" title="Permalink to this headline">¶</a></h2>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>com.nablarch.framework<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>nablarch-fw-messaging<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
<span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>com.nablarch.framework<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>nablarch-fw-messaging-mom<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</pre></div>
</div>
</div>
<div class="section" id="how-to-use">
<h2><a class="toc-backref" href="#id4">7.6.1.3. How to use</a><a class="headerlink" href="#how-to-use" title="Permalink to this headline">¶</a></h2>
<div class="section" id="configure-settings-to-use-mom-messaging">
<span id="mom-system-messaging-settings"></span><h3><a class="toc-backref" href="#id5">7.6.1.3.1. Configure settings to use MOM messaging</a><a class="headerlink" href="#configure-settings-to-use-mom-messaging" title="Permalink to this headline">¶</a></h3>
<p>In MOM messaging, add the following classes to the component definition.</p>
<ul class="simple">
<li>Implementation class <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/MessagingProvider.html" title="nablarch.fw.messaging.MessagingProvider">MessagingProvider</a> (MQ connection, MQ send to/receive from)</li>
<li><a class="reference internal" href="../../handlers/mom_messaging/messaging_context_handler.html#messaging-context-handler"><span>Messaging Context Management Handler</span></a> (MQ connection management)</li>
</ul>
<p>A configuration example is shown below.</p>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="c">&lt;!-- Implementation class of MessagingProvider --&gt;</span>
<span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;messagingProvider&quot;</span>
           <span class="na">class=</span><span class="s">&quot;nablarch.fw.messaging.provider.JmsMessagingProvider&quot;</span><span class="nt">&gt;</span>
  <span class="c">&lt;!-- See Javadoc for configuration items--&gt;</span>
<span class="nt">&lt;/component&gt;</span>

<span class="c">&lt;!-- Messaging context management handler --&gt;</span>
<span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;messagingContextHandler&quot;</span>
           <span class="na">class=</span><span class="s">&quot;nablarch.fw.messaging.handler.MessagingContextHandler&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;messagingProvider&quot;</span> <span class="na">ref=</span><span class="s">&quot;messagingProvider&quot;</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
<p>In the case of messages are received, it is necessary to set the data reader.
Add the following class to the component definition.</p>
<ul class="simple">
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/reader/MessageReader.html" title="nablarch.fw.messaging.reader.MessageReader">MessageReader</a> (reads messages from MQ)</li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/reader/FwHeaderReader.html" title="nablarch.fw.messaging.reader.FwHeaderReader">FwHeaderReader</a> (reads the framework control header from the message)</li>
</ul>
<p>A configuration example is shown below.</p>
<dl class="docutils">
<dt>Point</dt>
<dd><ul class="first last simple">
<li>Specify <code class="docutils literal"><span class="pre">dataReader</span></code> in the component name of the data reader.</li>
<li>Specify <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/reader/MessageReader.html" title="nablarch.fw.messaging.reader.MessageReader">MessageReader</a>
in the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/reader/FwHeaderReader.html#setMessageReader-nablarch.fw.DataReader-" title="nablarch.fw.messaging.reader.FwHeaderReader.setMessageReader(nablarch.fw.DataReader)">messageReader</a>
property
of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/reader/FwHeaderReader.html" title="nablarch.fw.messaging.reader.FwHeaderReader">FwHeaderReader</a>.</li>
</ul>
</dd>
</dl>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="c">&lt;!-- FwHeaderReader --&gt;</span>
<span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;dataReader&quot;</span>
           <span class="na">class=</span><span class="s">&quot;nablarch.fw.messaging.reader.FwHeaderReader&quot;</span><span class="nt">&gt;</span>
  <span class="c">&lt;!-- MessageReader --&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;messageReader&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;component</span> <span class="na">class =</span> <span class="s">&quot;nablarch.fw.messaging.reader.MessageReader&quot;</span><span class="nt">&gt;</span>
      <span class="c">&lt;!-- See Javadoc for configuration items--&gt;</span>
    <span class="nt">&lt;/component&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
</div>
<div class="section" id="send-message-with-asynchronous-response-sending-asynchronous-message">
<span id="mom-system-messaging-async-message-send"></span><h3><a class="toc-backref" href="#id6">7.6.1.3.2. Send message with asynchronous response (Sending asynchronous message)</a><a class="headerlink" href="#send-message-with-asynchronous-response-sending-asynchronous-message" title="Permalink to this headline">¶</a></h3>
<p>Send a message to an external system.</p>
<a class="reference internal image-reference" href="../../../../_images/mom_system_messaging-async_message_send.png"><img alt="../../../../_images/mom_system_messaging-async_message_send.png" src="../../../../_images/mom_system_messaging-async_message_send.png" /></a>
<dl class="docutils">
<dt>Contents of Common protocol header <a class="reference internal" href="#mom-system-messaging-common-protocol-header"><span>Common protocol header</span></a> configured in send message</dt>
<dd><p class="first">Basically, only the send address header needs to be set.</p>
<blockquote class="last">
<div><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Message ID:</th><td class="field-body">Configuration not required (numbered after sending)</td>
</tr>
<tr class="field-even field"><th class="field-name" colspan="2">Correlation message ID:</th></tr>
<tr class="field-even field"><td>&nbsp;</td><td class="field-body">Configuration not required</td>
</tr>
<tr class="field-odd field"><th class="field-name">Send address:</th><td class="field-body">Logical name of the send address</td>
</tr>
<tr class="field-even field"><th class="field-name" colspan="2">Reply to address:</th></tr>
<tr class="field-even field"><td>&nbsp;</td><td class="field-body">Configuration not required</td>
</tr>
<tr class="field-odd field"><th class="field-name" colspan="2">Expiry interval:</th></tr>
<tr class="field-odd field"><td>&nbsp;</td><td class="field-body">Any</td>
</tr>
</tbody>
</table>
</div></blockquote>
</dd>
</dl>
<p>Sending asynchronous message provides
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/AsyncMessageSendAction.html" title="nablarch.fw.messaging.action.AsyncMessageSendAction">AsyncMessageSendAction</a>
as a common action to acquire the data to be sent from the table (called a temporary table) held by the send message data,
and create and send messages.
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/AsyncMessageSendAction.html" title="nablarch.fw.messaging.action.AsyncMessageSendAction">AsyncMessageSendAction</a> is an action class
that works with <a class="reference internal" href="../../batch/nablarch_batch/index.html#nablarch-batch"><span>Nablarch Batch Application</span></a>.</p>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">Registration of the send message in the temporary table is assumed to be done
using <a class="reference internal" href="../database_management.html#database-management"><span>Database Access</span></a> with <a class="reference internal" href="../../web/index.html#web-application"><span>Web Application</span></a> or <a class="reference internal" href="../../batch/index.html#batch-application"><span>Batch Application</span></a>.</p>
</div>
<p>Only the following deliverables are required to be created using
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/AsyncMessageSendAction.html" title="nablarch.fw.messaging.action.AsyncMessageSendAction">AsyncMessageSendAction</a>
and the message send process can be implemented very easily.</p>
<ul class="simple">
<li>Temporary table that holds the data of send message</li>
<li>Format definition file that represents the message layout</li>
<li>SQL file (defines three types of SQL statements)</li>
</ul>
<blockquote>
<div><ul class="simple">
<li>SELECT statement for acquiring data with not sent status</li>
<li>UPDATE statement to update the status of the relevant data to processed when the message is sent successfully</li>
<li>UPDATE statement for updating the status of the relevant data to send failure when the message send fails</li>
</ul>
</div></blockquote>
<ul class="simple">
<li>Form class for status update</li>
</ul>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">The only properties required for the form class are those that correspond to the table items required for status update.
As a result, by defining a common table layout of the temporary table for the project,
a single form class can be used in all sending asynchronous message.</p>
</div>
<p>Below is an implementation example based on
<a class="reference internal" href="../../../example/index.html#example-application-mom-system-messaging-async-message-send"><span>Example application</span></a> to send project information.</p>
<dl class="docutils">
<dt>Implementation examples</dt>
<dd><p class="first"></p>
<dl class="last docutils">
<dt>Temporary table that holds the data of send message</dt>
<dd><dl class="first last docutils">
<dt>Point</dt>
<dd><ul class="first last simple">
<li>The primary key is the column that stores the ID that uniquely identifies the message.</li>
<li>The attribute information of the table defines the columns corresponding to each item of the message to be sent.</li>
<li>Define common items (update user ID, update date, etc.) according to each project architecture.</li>
</ul>
</dd>
<dt>INS_PROJECT_SEND_MESSAGE</dt>
<dd><table border="1" class="first last docutils">
<colgroup>
<col width="59%" />
<col width="41%" />
</colgroup>
<tbody valign="top">
<tr class="row-odd"><td>Send message serial number (PK)</td>
<td>SEND_MESSAGE_SEQUENCE</td>
</tr>
<tr class="row-even"><td>Project name</td>
<td>PROJECT_NAME</td>
</tr>
<tr class="row-odd"><td>Project type</td>
<td>PROJECT_TYPE</td>
</tr>
<tr class="row-even"><td>Project classification</td>
<td>PROJECT_CLASS</td>
</tr>
<tr class="row-odd"><td>: (Omitted)</td>
<td>&nbsp;</td>
</tr>
<tr class="row-even"><td>Status</td>
<td>STATUS</td>
</tr>
<tr class="row-odd"><td>Update user ID</td>
<td>UPDATED_USER_ID</td>
</tr>
<tr class="row-even"><td>Update date and time</td>
<td>UPDATED_DATE</td>
</tr>
</tbody>
</table>
</dd>
</dl>
</dd>
<dt>Format definition file</dt>
<dd><dl class="first last docutils">
<dt>Point</dt>
<dd><ul class="first last simple">
<li>The file name is <code class="docutils literal"><span class="pre">&lt;Request</span> <span class="pre">ID</span> <span class="pre">of</span> <span class="pre">send</span> <span class="pre">message&gt;_SEND.fmt</span></code>.</li>
</ul>
</dd>
<dt>ProjectInsertMessage_SEND.fmt</dt>
<dd><div class="first last highlight-bash"><div class="highlight"><pre><span></span>file-type:        <span class="s2">&quot;Fixed&quot;</span> <span class="c1"># Fixed-length</span>
text-encoding:    <span class="s2">&quot;MS932&quot;</span> <span class="c1"># Character encoding of string type field</span>
record-length:    <span class="m">2120</span>    <span class="c1"># Length of each record</span>

<span class="o">[</span>userData<span class="o">]</span>
Item definition omitted
</pre></div>
</div>
</dd>
</dl>
</dd>
<dt>SQL file</dt>
<dd><dl class="first last docutils">
<dt>Point</dt>
<dd><ul class="first simple">
<li>The file name is <code class="docutils literal"><span class="pre">&lt;Request</span> <span class="pre">ID</span> <span class="pre">of</span> <span class="pre">send</span> <span class="pre">message&gt;.sql</span></code>.</li>
<li>SQL_ID is as follows.</li>
</ul>
<blockquote class="last">
<div><ul class="simple">
<li><code class="docutils literal"><span class="pre">SELECT_SEND_DATA</span></code>: SELECT statement for acquiring data with not sent status</li>
<li><code class="docutils literal"><span class="pre">UPDATE_NORMAL_END</span></code>: UPDATE statement to update the status to processed</li>
<li><code class="docutils literal"><span class="pre">UPDATE_ABNORMAL_END</span></code>: UPDATE statement to update the status to send failure</li>
</ul>
</div></blockquote>
</dd>
<dt>ProjectInsertMessage.sql</dt>
<dd><div class="first last highlight-bash"><div class="highlight"><pre><span></span><span class="nv">SELECT_SEND_DATA</span> <span class="o">=</span>
SELECT
    Omitted
FROM
    INS_PROJECT_SEND_MESSAGE
WHERE
    <span class="nv">STATUS</span> <span class="o">=</span> <span class="s1">&#39;0&#39;</span>
ORDER BY
    SEND_MESSAGE_SEQUENCE

<span class="nv">UPDATE_NORMAL_END</span> <span class="o">=</span>
UPDATE
    INS_PROJECT_SEND_MESSAGE
SET
    <span class="nv">STATUS</span> <span class="o">=</span> <span class="s1">&#39;1&#39;</span>,
    <span class="nv">UPDATED_USER_ID</span> <span class="o">=</span> :updatedUserId,
    <span class="nv">UPDATED_DATE</span> <span class="o">=</span> :updatedDate
WHERE
    <span class="nv">SEND_MESSAGE_SEQUENCE</span> <span class="o">=</span> :sendMessageSequence

<span class="nv">UPDATE_ABNORMAL_END</span> <span class="o">=</span>
UPDATE
    INS_PROJECT_SEND_MESSAGE
SET
    <span class="nv">STATUS</span> <span class="o">=</span> <span class="s1">&#39;9&#39;</span>,
    <span class="nv">UPDATED_USER_ID</span> <span class="o">=</span> :updatedUserId,
    <span class="nv">UPDATED_DATE</span> <span class="o">=</span> :updatedDate
WHERE
    <span class="nv">SEND_MESSAGE_SEQUENCE</span> <span class="o">=</span> :sendMessageSequence
</pre></div>
</div>
</dd>
</dl>
</dd>
<dt>Form class for status update</dt>
<dd><dl class="first last docutils">
<dt>Point</dt>
<dd><ul class="first last simple">
<li>Since this form class is for status update only,
all the attributes of the temporary table are not required to be retained as properties.</li>
</ul>
</dd>
<dt>SendMessagingForm.java</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SendMessagingForm</span> <span class="o">{</span>

    <span class="cm">/** Send message serial number */</span>
    <span class="kd">private</span> <span class="n">String</span> <span class="n">sendMessageSequence</span><span class="o">;</span>

    <span class="cm">/** Update user ID */</span>
    <span class="nd">@UserId</span>
    <span class="kd">private</span> <span class="n">String</span> <span class="n">updatedUserId</span><span class="o">;</span>

    <span class="cm">/** Update date and time */</span>
    <span class="nd">@CurrentDateTime</span>
    <span class="kd">private</span> <span class="n">java</span><span class="o">.</span><span class="na">sql</span><span class="o">.</span><span class="na">Timestamp</span> <span class="n">updatedDate</span><span class="o">;</span>

    <span class="c1">// Constructor and accessor are omitted</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
</dl>
</dd>
<dt>Configuration of AsyncMessageSendAction</dt>
<dd><dl class="first last docutils">
<dt>Point</dt>
<dd><ul class="first last simple">
<li>When <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/AsyncMessageSendAction.html" title="nablarch.fw.messaging.action.AsyncMessageSendAction">AsyncMessageSendAction</a> is used,
configuration of queue name of send destination and storage directory of format definition file are required.
Configured by adding
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/AsyncMessageSendActionSettings.html" title="nablarch.fw.messaging.action.AsyncMessageSendActionSettings">AsyncMessageSendActionSettings</a>
to the component definition.
For the configuration items, refer to the Javadoc link.</li>
</ul>
</dd>
<dt>messaging-async-send-component-configuration.xml</dt>
<dd><div class="first last highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;asyncMessageSendActionSettings&quot;</span>
           <span class="na">class=</span><span class="s">&quot;nablarch.fw.messaging.action.AsyncMessageSendActionSettings&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;formatDir&quot;</span> <span class="na">value=</span><span class="s">&quot;format&quot;</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;headerFormatName&quot;</span> <span class="na">value=</span><span class="s">&quot;header&quot;</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;queueName&quot;</span> <span class="na">value=</span><span class="s">&quot;TEST.REQUEST&quot;</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;sqlFilePackage&quot;</span> <span class="na">value=</span><span class="s">&quot;com.nablarch.example.sql&quot;</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;formClassName&quot;</span>
            <span class="na">value=</span><span class="s">&quot;com.nablarch.example.form.SendMessagingForm&quot;</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;headerItemList&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;list&gt;</span>
      <span class="nt">&lt;value&gt;</span>sendMessageSequence<span class="nt">&lt;/value&gt;</span>
    <span class="nt">&lt;/list&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
</dd>
</dl>
</dd>
<dt>Applying AsyncMessageSendAction</dt>
<dd><dl class="first last docutils">
<dt>Point</dt>
<dd><ul class="first last simple">
<li>To make <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/AsyncMessageSendAction.html" title="nablarch.fw.messaging.action.AsyncMessageSendAction">AsyncMessageSendAction</a>
work with <a class="reference internal" href="../../batch/nablarch_batch/index.html#nablarch-batch"><span>Nablarch Batch Application</span></a>,
specify <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/AsyncMessageSendAction.html" title="nablarch.fw.messaging.action.AsyncMessageSendAction">AsyncMessageSendAction</a> in the component definition
of <a class="reference internal" href="../../handlers/common/request_path_java_package_mapping.html#request-path-java-package-mapping"><span>Request Dispatch Handler</span></a>.</li>
</ul>
</dd>
<dt>messaging-async-send-component-configuration.xml</dt>
<dd><div class="first last highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.fw.handler.RequestPathJavaPackageMapping&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;basePackage&quot;</span>
            <span class="na">value=</span><span class="s">&quot;com.nablarch.example.action.ExampleAsyncMessageSendAction&quot;</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;immediate&quot;</span> <span class="na">value=</span><span class="s">&quot;false&quot;</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
</dd>
</dl>
</dd>
</dl>
</dd>
</dl>
</div>
<div class="section" id="send-message-with-synchronous-response-sending-synchronous-message">
<span id="mom-system-messaging-sync-message-send"></span><h3><a class="toc-backref" href="#id7">7.6.1.3.3. Send message with synchronous response (Sending synchronous message)</a><a class="headerlink" href="#send-message-with-synchronous-response-sending-synchronous-message" title="Permalink to this headline">¶</a></h3>
<p>Send a message to an external system and wait for the reply. Block until a response message is received or the wait timeout expires.</p>
<a class="reference internal image-reference" href="../../../../_images/mom_system_messaging-sync_message_send.png"><img alt="../../../../_images/mom_system_messaging-sync_message_send.png" src="../../../../_images/mom_system_messaging-sync_message_send.png" /></a>
<p>Since a response message is received unlike <a class="reference internal" href="#mom-system-messaging-async-message-send"><span>Send message with asynchronous response (Sending asynchronous message)</span></a>,
it can be guaranteed to some extent that the process worked correctly at the destination.
However, if a response is not received within the specified time due to some problem and a timeout occurs, it is necessary to perform error processing (for example, message retry or failure notification).</p>
<dl class="docutils">
<dt>Contents of <a class="reference internal" href="#mom-system-messaging-common-protocol-header"><span>Common protocol header</span></a> configured in send message</dt>
<dd><p class="first">In addition to the send address header, it is necessary to set the reply to address header, which is the send address for the response.</p>
<blockquote class="last">
<div><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Message ID:</th><td class="field-body">Configuration not required (numbered after sending)</td>
</tr>
<tr class="field-even field"><th class="field-name" colspan="2">Correlation message ID:</th></tr>
<tr class="field-even field"><td>&nbsp;</td><td class="field-body">Configuration not required</td>
</tr>
<tr class="field-odd field"><th class="field-name">Send address:</th><td class="field-body">Logical name of the send address</td>
</tr>
<tr class="field-even field"><th class="field-name" colspan="2">Reply to address:</th></tr>
<tr class="field-even field"><td>&nbsp;</td><td class="field-body">Logical name of reply to address</td>
</tr>
<tr class="field-odd field"><th class="field-name" colspan="2">Expiry interval:</th></tr>
<tr class="field-odd field"><td>&nbsp;</td><td class="field-body">Any</td>
</tr>
</tbody>
</table>
</div></blockquote>
</dd>
<dt>Content of <a class="reference internal" href="#mom-system-messaging-common-protocol-header"><span>Common protocol header</span></a> of response message created by the external system</dt>
<dd><p class="first">After the send process is completed, the application waits until a message with the same correlation message ID
as that of the send message is received at the reply to address. Therefore, the external system must configure the correlation message ID in the response message.</p>
<blockquote class="last">
<div><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Message ID:</th><td class="field-body">Configuration not required (numbered after sending)</td>
</tr>
<tr class="field-even field"><th class="field-name" colspan="2">Correlation message ID:</th></tr>
<tr class="field-even field"><td>&nbsp;</td><td class="field-body">Value of message ID header of send message</td>
</tr>
<tr class="field-odd field"><th class="field-name">Send address:</th><td class="field-body">Reply to address header of send message</td>
</tr>
<tr class="field-even field"><th class="field-name" colspan="2">Reply to address:</th></tr>
<tr class="field-even field"><td>&nbsp;</td><td class="field-body">Configuration not required</td>
</tr>
<tr class="field-odd field"><th class="field-name" colspan="2">Expiry interval:</th></tr>
<tr class="field-odd field"><td>&nbsp;</td><td class="field-body">Any</td>
</tr>
</tbody>
</table>
</div></blockquote>
</dd>
</dl>
<p>Sending synchronous message provides
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/MessageSender.html" title="nablarch.fw.messaging.MessageSender">MessageSender</a> as a utility class that wraps routine processing.
Only the following deliverables are required to be created using
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/MessageSender.html" title="nablarch.fw.messaging.MessageSender">MessageSender</a>
and the send synchronous response message can be created very easily.</p>
<ul class="simple">
<li>Format definition file used to send and receive</li>
<li>Send/receive process with <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/MessageSender.html" title="nablarch.fw.messaging.MessageSender">MessageSender</a></li>
</ul>
<p>The following is an implementation example of sending project information
by batch action from the data stored in the table based on
<a class="reference internal" href="../../../example/index.html#example-application-mom-system-messaging-sync-message-send"><span>Example application</span></a>.
Since the section to read data from the table is not related to sending of messages, the implementation example is omitted.</p>
<dl class="docutils">
<dt>Implementation examples</dt>
<dd><p class="first"></p>
<dl class="last docutils">
<dt>Format definition file used to send and receive</dt>
<dd><dl class="first last docutils">
<dt>Point</dt>
<dd><ul class="first simple">
<li>The file name is as follows.</li>
</ul>
<blockquote>
<div><ul class="simple">
<li>To send: <code class="docutils literal"><span class="pre">&lt;Message</span> <span class="pre">request</span> <span class="pre">ID&gt;_SEND.fmt</span></code></li>
<li>To receive: <code class="docutils literal"><span class="pre">&lt;Message</span> <span class="pre">request</span> <span class="pre">ID&gt;_RECEIVE.fmt</span></code></li>
</ul>
</div></blockquote>
<ul class="last simple">
<li>The record type name is fixed to <code class="docutils literal"><span class="pre">data</span></code>.</li>
</ul>
</dd>
<dt>ProjectInsertMessage_SEND.fmt</dt>
<dd><div class="first last highlight-bash"><div class="highlight"><pre><span></span>file-type:        <span class="s2">&quot;Fixed&quot;</span> <span class="c1"># Fixed-length</span>
text-encoding:    <span class="s2">&quot;MS932&quot;</span> <span class="c1"># Character encoding of string type field</span>
record-length:    <span class="m">2120</span>    <span class="c1"># Length of each record</span>
record-separator: <span class="s2">&quot;\r\n&quot;</span>  <span class="c1"># Carriage return and Line feed</span>

<span class="o">[</span>data<span class="o">]</span>
Item definition omitted
</pre></div>
</div>
</dd>
<dt>ProjectInsertMessage_RECEIVE.fmt</dt>
<dd><div class="first last highlight-bash"><div class="highlight"><pre><span></span>file-type:        <span class="s2">&quot;Fixed&quot;</span> <span class="c1"># Fixed-length</span>
text-encoding:    <span class="s2">&quot;MS932&quot;</span> <span class="c1"># Character encoding of string type field</span>
record-length:    <span class="m">130</span>     <span class="c1"># Length of each record</span>
record-separator: <span class="s2">&quot;\r\n&quot;</span>  <span class="c1"># Carriage return and Line feed</span>

<span class="o">[</span>data<span class="o">]</span>
Item definition omitted
</pre></div>
</div>
</dd>
</dl>
</dd>
<dt>Send/receive process using MessageSender</dt>
<dd><dl class="first last docutils">
<dt>Point</dt>
<dd><ul class="first last simple">
<li>Create the request message with <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/SyncMessage.html" title="nablarch.fw.messaging.SyncMessage">SyncMessage</a>.</li>
<li>To send a message,
use
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/MessageSender.html#sendSync-nablarch.fw.messaging.SyncMessage-" title="nablarch.fw.messaging.MessageSender.sendSync(nablarch.fw.messaging.SyncMessage)">MessageSender#sendSync</a>.
For How to Use, refer to the linked Javadoc.</li>
</ul>
</dd>
<dt>SendProjectInsertMessageAction.java</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="n">Result</span> <span class="nf">handle</span><span class="o">(</span><span class="n">SqlRow</span> <span class="n">inputData</span><span class="o">,</span> <span class="n">ExecutionContext</span> <span class="n">ctx</span><span class="o">)</span> <span class="o">{</span>

    <span class="c1">// Business process using input data is omitted</span>

    <span class="n">SyncMessage</span> <span class="n">responseMessage</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
    <span class="k">try</span> <span class="o">{</span>
        <span class="n">responseMessage</span> <span class="o">=</span> <span class="n">MessageSender</span><span class="o">.</span><span class="na">sendSync</span><span class="o">(</span>
            <span class="k">new</span> <span class="n">SyncMessage</span><span class="o">(</span><span class="s">&quot;ProjectInsertMessage&quot;</span><span class="o">).</span><span class="na">addDataRecord</span><span class="o">(</span><span class="n">inputData</span><span class="o">));</span>
    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">MessagingException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// Send error</span>
        <span class="k">throw</span> <span class="k">new</span> <span class="n">TransactionAbnormalEnd</span><span class="o">(</span><span class="mi">100</span><span class="o">,</span> <span class="n">e</span><span class="o">,</span> <span class="s">&quot;error.sendServer.fail&quot;</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">responseDataRecord</span> <span class="o">=</span> <span class="n">responseMessage</span><span class="o">.</span><span class="na">getDataRecord</span><span class="o">();</span>

    <span class="c1">// Business process using response data is omitted</span>

    <span class="k">return</span> <span class="k">new</span> <span class="n">Success</span><span class="o">();</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
</dl>
</dd>
<dt>Configuration of MessageSender</dt>
<dd><dl class="first last docutils">
<dt>Point</dt>
<dd><ul class="first last simple">
<li>When <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/MessageSender.html" title="nablarch.fw.messaging.MessageSender">MessageSender</a> is used,
configuration of queue name of send and receive destination and storage directory of format definition file are required.
Configured by <a class="reference internal" href="../repository.html#repository-environment-configuration"><span>Set the dependent value</span></a>.
For configuration items,
see
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/MessageSenderSettings.html#MessageSenderSettings-java.lang.String-" title="nablarch.fw.messaging.MessageSenderSettings.MessageSenderSettings(java.lang.String)">MessageSenderSettings</a>.</li>
</ul>
</dd>
<dt>messaging.config</dt>
<dd><div class="first last highlight-properties"><div class="highlight"><pre><span></span><span class="na">messageSender.DEFAULT.messagingProviderName</span><span class="o">=</span><span class="s">defaultMessagingProvider</span>
<span class="na">messageSender.DEFAULT.destination</span><span class="o">=</span><span class="s">TEST.REQUEST</span>
<span class="na">messageSender.DEFAULT.replyTo</span><span class="o">=</span><span class="s">TEST.RESPONSE</span>
<span class="na">messageSender.DEFAULT.retryCount</span><span class="o">=</span><span class="s">10</span>
<span class="na">messageSender.DEFAULT.formatDir</span><span class="o">=</span><span class="s">format</span>
<span class="na">messageSender.DEFAULT.headerFormatName</span><span class="o">=</span><span class="s">HEADER</span>
<span class="na">messageSender.DEFAULT.messageConvertorName</span><span class="o">=</span><span class="s">defaultSyncMessageConvertor</span>
</pre></div>
</div>
</dd>
</dl>
</dd>
</dl>
</dd>
</dl>
</div>
<div class="section" id="receive-message-with-asynchronous-response-receiving-asynchronous-message">
<span id="mom-system-messaging-async-message-receive"></span><h3><a class="toc-backref" href="#id8">7.6.1.3.4. Receive message with asynchronous response (Receiving asynchronous message)</a><a class="headerlink" href="#receive-message-with-asynchronous-response-receiving-asynchronous-message" title="Permalink to this headline">¶</a></h3>
<p>Receive a message that is sent to a specific destination. Block until a message is received or the wait timeout expires.</p>
<a class="reference internal image-reference" href="../../../../_images/mom_system_messaging-async_message_receive.png"><img alt="../../../../_images/mom_system_messaging-async_message_receive.png" src="../../../../_images/mom_system_messaging-async_message_receive.png" /></a>
<dl class="docutils">
<dt>Content of common protocol header <a class="reference internal" href="#mom-system-messaging-common-protocol-header"><span>Common protocol header</span></a> of received message created by the external system</dt>
<dd><table class="first last docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Message ID:</th><td class="field-body">Configuration not required (numbered after sending)</td>
</tr>
<tr class="field-even field"><th class="field-name" colspan="2">Correlation message ID:</th></tr>
<tr class="field-even field"><td>&nbsp;</td><td class="field-body">Configuration not required</td>
</tr>
<tr class="field-odd field"><th class="field-name">Send address:</th><td class="field-body">Logical name of the address</td>
</tr>
<tr class="field-even field"><th class="field-name" colspan="2">Reply to address:</th></tr>
<tr class="field-even field"><td>&nbsp;</td><td class="field-body">Configuration not required</td>
</tr>
<tr class="field-odd field"><th class="field-name" colspan="2">Expiry interval:</th></tr>
<tr class="field-odd field"><td>&nbsp;</td><td class="field-body">Any</td>
</tr>
</tbody>
</table>
</dd>
</dl>
<p>Receiving asynchronous message provides
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/AsyncMessageReceiveAction.html" title="nablarch.fw.messaging.action.AsyncMessageReceiveAction">AsyncMessageReceiveAction</a>
as a common action to save the received message in the temporary table (message receive table).
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/AsyncMessageReceiveAction.html" title="nablarch.fw.messaging.action.AsyncMessageReceiveAction">AsyncMessageReceiveAction</a>
is an action class that works with <a class="reference internal" href="../../messaging/mom/index.html#mom-messaging"><span>Messaging with MOM</span></a>.</p>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">Assumption is that the data stored in the temporary table will be imported to this table in the system
using the <a class="reference internal" href="../../batch/index.html#batch-application"><span>Batch Application</span></a>.</p>
</div>
<p>Only the following deliverables are required to be created using <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/AsyncMessageReceiveAction.html" title="nablarch.fw.messaging.action.AsyncMessageReceiveAction">AsyncMessageReceiveAction</a>
and the messages can be saved in the table very easily.</p>
<ul class="simple">
<li>Temporary table to register the messages</li>
<li>Format definition file that represents the message layout</li>
<li>INSERT statement (SQL file) for registering a message</li>
<li>Form class used to register a message</li>
</ul>
<p>Below is an implementation example based on
<a class="reference internal" href="../../../example/index.html#example-application-mom-system-messaging-async-message-receive"><span>Example application</span></a> to receive project information.</p>
<dl class="docutils">
<dt>Implementation examples</dt>
<dd><p class="first"></p>
<dl class="last docutils">
<dt>Temporary table to register the messages</dt>
<dd><dl class="first last docutils">
<dt>Point</dt>
<dd><ul class="first last simple">
<li>Received messages are saved in a dedicated temporary table for each message type.</li>
<li>The primary key is the column that stores the ID that uniquely identifies the message.
The value to be stored in this column is numbered by the framework using <a class="reference internal" href="../database/generator.html#generator"><span>Surrogate Key Numbering</span></a>.</li>
<li>The attribute information of the table defines the columns corresponding to each item of the message to be received.</li>
<li>Define common items (registration user ID, registration date and time, etc.) according to each project architecture.</li>
</ul>
</dd>
<dt>INS_PROJECT_RECEIVE_MESSAGE</dt>
<dd><table border="1" class="first last docutils">
<colgroup>
<col width="60%" />
<col width="40%" />
</colgroup>
<tbody valign="top">
<tr class="row-odd"><td>Receive message serial number (PK)</td>
<td>RECEIVED_MESSAGE_SEQUENCE</td>
</tr>
<tr class="row-even"><td>Project name</td>
<td>PROJECT_NAME</td>
</tr>
<tr class="row-odd"><td>Project type</td>
<td>PROJECT_TYPE</td>
</tr>
<tr class="row-even"><td>Project classification</td>
<td>PROJECT_CLASS</td>
</tr>
<tr class="row-odd"><td>: (Omitted)</td>
<td>&nbsp;</td>
</tr>
<tr class="row-even"><td>Status</td>
<td>STATUS</td>
</tr>
<tr class="row-odd"><td>Registered user ID</td>
<td>INSERT_USER_ID</td>
</tr>
<tr class="row-even"><td>Registration date and time</td>
<td>INSERT_DATE</td>
</tr>
</tbody>
</table>
</dd>
</dl>
</dd>
<dt>Format definition file</dt>
<dd><dl class="first last docutils">
<dt>Point</dt>
<dd><ul class="first last simple">
<li>The file name is <code class="docutils literal"><span class="pre">&lt;Request</span> <span class="pre">ID</span> <span class="pre">of</span> <span class="pre">received</span> <span class="pre">message&gt;_RECEIVE.fmt</span></code>.</li>
</ul>
</dd>
<dt>ProjectInsertMessage_RECEIVE.fmt</dt>
<dd><div class="first last highlight-bash"><div class="highlight"><pre><span></span>file-type:        <span class="s2">&quot;Fixed&quot;</span> <span class="c1"># Fixed-length</span>
text-encoding:    <span class="s2">&quot;MS932&quot;</span> <span class="c1"># Character encoding of string type field</span>
record-length:    <span class="m">2120</span>    <span class="c1"># Length of each record</span>

<span class="o">[</span>userData<span class="o">]</span>
Item definition omitted
</pre></div>
</div>
</dd>
</dl>
</dd>
<dt>SQL file</dt>
<dd><dl class="first last docutils">
<dt>Point</dt>
<dd><ul class="first last simple">
<li>The file name is <code class="docutils literal"><span class="pre">&lt;Request</span> <span class="pre">ID</span> <span class="pre">of</span> <span class="pre">received</span> <span class="pre">message&gt;.sql</span></code>.</li>
<li>SQL_ID is <code class="docutils literal"><span class="pre">INSERT_MESSAGE</span></code>.</li>
</ul>
</dd>
<dt>ProjectInsertMessage.sql</dt>
<dd><div class="first last highlight-bash"><div class="highlight"><pre><span></span><span class="nv">INSERT_MESSAGE</span> <span class="o">=</span>
INSERT INTO INS_PROJECT_RECEIVE_MESSAGE <span class="o">(</span>
    RECEIVED_MESSAGE_SEQUENCE,
    PROJECT_NAME,
    PROJECT_TYPE,
    PROJECT_CLASS,
    Below omitted
</pre></div>
</div>
</dd>
</dl>
</dd>
<dt>Form class used to register a message</dt>
<dd><dl class="first last docutils">
<dt>Point</dt>
<dd><ul class="first last simple">
<li>The file name is <code class="docutils literal"><span class="pre">&lt;Request</span> <span class="pre">ID</span> <span class="pre">of</span> <span class="pre">received</span> <span class="pre">message&gt;Form</span></code>.</li>
<li>Define a constructor with two arguments: <a class="reference external" href="http://docs.oracle.com/javase/8/docs/api/java/lang/String.html" title="java.lang.String">String</a>, <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/RequestMessage.html" title="nablarch.fw.messaging.RequestMessage">RequestMessage</a>.
The meaning of each parameter is as follows.<ul>
<li><a class="reference external" href="http://docs.oracle.com/javase/8/docs/api/java/lang/String.html" title="java.lang.String">String</a> -&gt; Received message serial number</li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/RequestMessage.html" title="nablarch.fw.messaging.RequestMessage">RequestMessage</a> -&gt; Received message</li>
</ul>
</li>
</ul>
</dd>
<dt>ProjectInsertMessageForm.java</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProjectInsertMessageForm</span> <span class="o">{</span>

    <span class="cm">/** Received message serial number */</span>
    <span class="kd">private</span> <span class="n">String</span> <span class="n">receivedMessageSequence</span><span class="o">;</span>

    <span class="cm">/** Project name */</span>
    <span class="kd">private</span> <span class="n">String</span> <span class="n">projectName</span><span class="o">;</span>

    <span class="c1">// Other fields are omitted</span>

    <span class="kd">public</span> <span class="nf">ProjectInsertMessageForm</span><span class="o">(</span>
            <span class="n">String</span> <span class="n">receivedMessageSequence</span><span class="o">,</span> <span class="n">RequestMessage</span> <span class="n">message</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">receivedMessageSequence</span> <span class="o">=</span> <span class="n">receivedMessageSequence</span><span class="o">;</span>

        <span class="n">DataRecord</span> <span class="n">data</span> <span class="o">=</span> <span class="n">message</span><span class="o">.</span><span class="na">getRecordOf</span><span class="o">(</span><span class="s">&quot;userData&quot;</span><span class="o">);</span>

        <span class="n">projectName</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">&quot;projectName&quot;</span><span class="o">);</span>

        <span class="c1">// Subsequent process is omitted</span>
    <span class="o">}</span>

    <span class="c1">// Accessor is omitted</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
</dl>
</dd>
<dt>Configuration of AsyncMessageReceiveAction</dt>
<dd><dl class="first last docutils">
<dt>Point</dt>
<dd><ul class="first last simple">
<li>When <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/AsyncMessageReceiveAction.html" title="nablarch.fw.messaging.action.AsyncMessageReceiveAction">AsyncMessageReceiveAction</a>
is used, configuration of format definition file and SQL file location, etc. are required.
Configured by adding
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/AsyncMessageReceiveActionSettings.html" title="nablarch.fw.messaging.action.AsyncMessageReceiveActionSettings">AsyncMessageReceiveActionSettings</a>
to the component definition.
For the configuration items, refer to the Javadoc link.</li>
</ul>
</dd>
<dt>messaging-async-receive-component-configuration.xml</dt>
<dd><div class="first last highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;asyncMessageReceiveActionSettings&quot;</span>
           <span class="na">class=</span><span class="s">&quot;nablarch.fw.messaging.action.AsyncMessageReceiveActionSettings&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;formClassPackage&quot;</span> <span class="na">value=</span><span class="s">&quot;com.nablarch.example.form&quot;</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;receivedSequenceFormatter&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.common.idgenerator.formatter.LpadFormatter&quot;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;length&quot;</span> <span class="na">value=</span><span class="s">&quot;10&quot;</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;paddingChar&quot;</span> <span class="na">value=</span><span class="s">&quot;0&quot;</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/component&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;receivedSequenceGenerator&quot;</span> <span class="na">ref=</span><span class="s">&quot;idGenerator&quot;</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;targetGenerateId&quot;</span> <span class="na">value=</span><span class="s">&quot;9991&quot;</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;sqlFilePackage&quot;</span> <span class="na">value=</span><span class="s">&quot;com.nablarch.example.sql&quot;</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
</dd>
</dl>
</dd>
<dt>Applying AsyncMessageReceiveAction</dt>
<dd><dl class="first last docutils">
<dt>Point</dt>
<dd><ul class="first last simple">
<li>To make <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/AsyncMessageReceiveAction.html" title="nablarch.fw.messaging.action.AsyncMessageReceiveAction">AsyncMessageReceiveAction</a>
work with <a class="reference internal" href="../../messaging/mom/index.html#mom-messaging"><span>Messaging with MOM</span></a>,
specify <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/AsyncMessageReceiveAction.html" title="nablarch.fw.messaging.action.AsyncMessageReceiveAction">AsyncMessageReceiveAction</a> in the component definition
of <a class="reference internal" href="../../handlers/common/request_path_java_package_mapping.html#request-path-java-package-mapping"><span>Request Dispatch Handler</span></a>.</li>
</ul>
</dd>
<dt>messaging-async-receive-component-configuration.xml</dt>
<dd><div class="first last highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.fw.handler.RequestPathJavaPackageMapping&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;basePackage&quot;</span>
            <span class="na">value=</span><span class="s">&quot;nablarch.fw.messaging.action.AsyncMessageReceiveAction&quot;</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;immediate&quot;</span> <span class="na">value=</span><span class="s">&quot;false&quot;</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
</dd>
</dl>
</dd>
</dl>
</dd>
</dl>
</div>
<div class="section" id="receive-message-with-synchronous-response-receiving-synchronous-message">
<span id="mom-system-messaging-sync-message-receive"></span><h3><a class="toc-backref" href="#id9">7.6.1.3.5. Receive message with synchronous response (Receiving synchronous message)</a><a class="headerlink" href="#receive-message-with-synchronous-response-receiving-synchronous-message" title="Permalink to this headline">¶</a></h3>
<p>It receives a message sent to a specific destination from a communication destination, and sends a response message to the reply to address configured in the message.
At this time, the value of the message ID header of the received message is configured in the correlation message ID header of the response message.</p>
<a class="reference internal image-reference" href="../../../../_images/mom_system_messaging-sync_message_receive.png"><img alt="../../../../_images/mom_system_messaging-sync_message_receive.png" src="../../../../_images/mom_system_messaging-sync_message_receive.png" /></a>
<p>Contents of <a class="reference internal" href="#mom-system-messaging-common-protocol-header"><span>Common protocol header</span></a> configured in send message</p>
<blockquote>
<div><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Message ID:</th><td class="field-body">Configuration not required (numbered after sending)</td>
</tr>
<tr class="field-even field"><th class="field-name" colspan="2">Correlation message ID:</th></tr>
<tr class="field-even field"><td>&nbsp;</td><td class="field-body">Value of message ID header of received message</td>
</tr>
<tr class="field-odd field"><th class="field-name">Send address:</th><td class="field-body">Value of the reply to address header of received message</td>
</tr>
<tr class="field-even field"><th class="field-name" colspan="2">Reply to address:</th></tr>
<tr class="field-even field"><td>&nbsp;</td><td class="field-body">Configuration not required</td>
</tr>
<tr class="field-odd field"><th class="field-name" colspan="2">Expiry interval:</th></tr>
<tr class="field-odd field"><td>&nbsp;</td><td class="field-body">Any</td>
</tr>
</tbody>
</table>
</div></blockquote>
<p>Receiving synchronous message provides <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/MessagingAction.html" title="nablarch.fw.messaging.action.MessagingAction">MessagingAction</a> as a template class
that performs routine processing.
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/MessagingAction.html" title="nablarch.fw.messaging.action.MessagingAction">MessagingAction</a> is an action class
that works with <a class="reference internal" href="../../messaging/mom/index.html#mom-messaging"><span>Messaging with MOM</span></a>.</p>
<p>Only the following deliverables are required to be created by using
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/MessagingAction.html" title="nablarch.fw.messaging.action.MessagingAction">MessagingAction</a>.</p>
<ul class="simple">
<li>Format definition file that represents the message layout</li>
<li>Process when a message is received and when an error occurs (action class)</li>
</ul>
<p>Below is an implementation example based on <a class="reference internal" href="../../../example/index.html#example-application-mom-system-messaging-sync-message-receive"><span>Example application</span></a>
to receive project information.</p>
<dl class="docutils">
<dt>Implementation examples</dt>
<dd><p class="first"></p>
<dl class="last docutils">
<dt>Format definition file</dt>
<dd><dl class="first last docutils">
<dt>Point</dt>
<dd><ul class="first simple">
<li>The file name is as follows.</li>
</ul>
<blockquote class="last">
<div><ul class="simple">
<li>To receive: <code class="docutils literal"><span class="pre">&lt;Message</span> <span class="pre">request</span> <span class="pre">ID&gt;_RECEIVE.fmt</span></code></li>
<li>To send: <code class="docutils literal"><span class="pre">&lt;Message</span> <span class="pre">request</span> <span class="pre">ID&gt;_SEND.fmt</span></code></li>
</ul>
</div></blockquote>
</dd>
<dt>ProjectInsertMessage_RECEIVE.fmt</dt>
<dd><div class="first last highlight-bash"><div class="highlight"><pre><span></span>file-type:        <span class="s2">&quot;Fixed&quot;</span> <span class="c1"># Fixed-length</span>
text-encoding:    <span class="s2">&quot;MS932&quot;</span> <span class="c1"># Character encoding of string type field</span>
record-length:    <span class="m">2120</span>    <span class="c1"># Length of each record</span>
record-separator: <span class="s2">&quot;\r\n&quot;</span>  <span class="c1"># Carriage return and Line feed</span>

<span class="o">[</span>data<span class="o">]</span>
Item definition omitted
</pre></div>
</div>
</dd>
<dt>ProjectInsertMessage_SEND.fmt</dt>
<dd><div class="first last highlight-bash"><div class="highlight"><pre><span></span>file-type:        <span class="s2">&quot;Fixed&quot;</span> <span class="c1"># Fixed-length</span>
text-encoding:    <span class="s2">&quot;MS932&quot;</span> <span class="c1"># Character encoding of string type field</span>
record-length:    <span class="m">130</span>     <span class="c1"># Length of each record</span>
record-separator: <span class="s2">&quot;\r\n&quot;</span>  <span class="c1"># Carriage return and Line feed</span>

<span class="o">[</span>data<span class="o">]</span>
Item definition omitted
</pre></div>
</div>
</dd>
</dl>
</dd>
<dt>Process when a message is received and when an error occurs (action class)</dt>
<dd><dl class="first last docutils">
<dt>Point</dt>
<dd><ul class="first last">
<li><p class="first">Inherit <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/MessagingAction.html" title="nablarch.fw.messaging.action.MessagingAction">MessagingAction</a>
and override the following method.</p>
<blockquote>
<div><ul class="simple">
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/MessagingAction.html#onReceive-nablarch.fw.messaging.RequestMessage-nablarch.fw.ExecutionContext-" title="nablarch.fw.messaging.action.MessagingAction.onReceive(nablarch.fw.messaging.RequestMessage-nablarch.fw.ExecutionContext)">MessagingAction#onReceive</a></li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/MessagingAction.html#onError-java.lang.Throwable-nablarch.fw.messaging.RequestMessage-nablarch.fw.ExecutionContext-" title="nablarch.fw.messaging.action.MessagingAction.onError(java.lang.Throwable-nablarch.fw.messaging.RequestMessage-nablarch.fw.ExecutionContext)">MessagingAction#onError</a></li>
</ul>
</div></blockquote>
</li>
<li><p class="first">Create the response message with <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/RequestMessage.html#reply--" title="nablarch.fw.messaging.RequestMessage.reply()">RequestMessage#reply</a>.</p>
</li>
<li><p class="first">To retain the contents of request/response message, create a form class corresponding to each.</p>
</li>
</ul>
</dd>
<dt>ProjectInsertMessageAction.java</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProjectInsertMessageAction</span> <span class="kd">extends</span> <span class="n">MessagingAction</span> <span class="o">{</span>

    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="n">ResponseMessage</span> <span class="nf">onReceive</span><span class="o">(</span>
            <span class="n">RequestMessage</span> <span class="n">request</span><span class="o">,</span> <span class="n">ExecutionContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
         <span class="n">ProjectInsertMessageForm</span> <span class="n">projectInsertMessageForm</span>
            <span class="o">=</span> <span class="n">BeanUtil</span><span class="o">.</span><span class="na">createAndCopy</span><span class="o">(</span>
                <span class="n">ProjectInsertMessageForm</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">request</span><span class="o">.</span><span class="na">getParamMap</span><span class="o">());</span>

        <span class="c1">// Perform the validation process.ApplicationException is thrown when an error is detected.</span>
        <span class="n">ValidatorUtil</span><span class="o">.</span><span class="na">validate</span><span class="o">(</span><span class="n">projectInsertMessageForm</span><span class="o">);</span>

        <span class="n">ProjectTemp</span> <span class="n">projectTemp</span>
            <span class="o">=</span> <span class="n">BeanUtil</span><span class="o">.</span><span class="na">createAndCopy</span><span class="o">(</span>
                <span class="n">ProjectTemp</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">projectInsertMessageForm</span><span class="o">);</span>

        <span class="c1">// Data configuration is omitted</span>

        <span class="n">UniversalDao</span><span class="o">.</span><span class="na">insert</span><span class="o">(</span><span class="n">projectTemp</span><span class="o">);</span>

        <span class="c1">// Returns response data</span>
        <span class="n">ProjectInsertMessageResponseForm</span> <span class="n">resForm</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProjectInsertMessageResponseForm</span><span class="o">(</span><span class="s">&quot;success&quot;</span><span class="o">,</span> <span class="s">&quot;&quot;</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">request</span><span class="o">.</span><span class="na">reply</span><span class="o">().</span><span class="na">addRecord</span><span class="o">(</span><span class="n">resForm</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="n">ResponseMessage</span> <span class="nf">onError</span><span class="o">(</span>
            <span class="n">Throwable</span> <span class="n">e</span><span class="o">,</span> <span class="n">RequestMessage</span> <span class="n">request</span><span class="o">,</span> <span class="n">ExecutionContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>

        <span class="k">if</span> <span class="o">(</span><span class="n">e</span> <span class="k">instanceof</span> <span class="n">InvalidDataFormatException</span><span class="o">)</span> <span class="o">{</span>
            <span class="c1">//Invalid request message data record section layout</span>
            <span class="n">resForm</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProjectInsertMessageResponseForm</span><span class="o">(</span><span class="s">&quot;fatal&quot;</span><span class="o">,</span> <span class="s">&quot;invalid layout.&quot;</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">e</span> <span class="k">instanceof</span> <span class="n">ApplicationException</span><span class="o">)</span> <span class="o">{</span>
            <span class="c1">//Request message data record section item validation error</span>
            <span class="n">resForm</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProjectInsertMessageResponseForm</span><span class="o">(</span><span class="s">&quot;error.validation&quot;</span><span class="o">,</span> <span class="s">&quot;&quot;</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="n">resForm</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProjectInsertMessageResponseForm</span><span class="o">(</span><span class="s">&quot;fatal&quot;</span><span class="o">,</span> <span class="s">&quot;unexpected exception.&quot;</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">request</span><span class="o">.</span><span class="na">reply</span><span class="o">().</span><span class="na">addRecord</span><span class="o">(</span><span class="n">resForm</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
</dl>
</dd>
</dl>
</dd>
</dl>
</div>
</div>
<div class="section" id="expansion-example">
<h2><a class="toc-backref" href="#id10">7.6.1.4. Expansion example</a><a class="headerlink" href="#expansion-example" title="Permalink to this headline">¶</a></h2>
<div class="section" id="change-the-reading-and-writing-of-the-framework-control-header">
<span id="mom-system-messaging-change-fw-header"></span><h3><a class="toc-backref" href="#id11">7.6.1.4.1. Change the reading and writing of the framework control header</a><a class="headerlink" href="#change-the-reading-and-writing-of-the-framework-control-header" title="Permalink to this headline">¶</a></h3>
<p>In some cases, reading and writing of the framework control header may require to be changed
when the message format is already defined in the external system.
To support this, add the implementation in the project.
The following shows the support method for each type of send and receive.</p>
<dl class="docutils">
<dt>For sending asynchronous message</dt>
<dd><p class="first">Since writing of the framework control header is performed by the following method,
support is provided by overriding the following method.</p>
<ul class="last simple">
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/AsyncMessageSendAction.html#createHeaderRecordFormatter--" title="nablarch.fw.messaging.action.AsyncMessageSendAction.createHeaderRecordFormatter()">AsyncMessageSendAction#createHeaderRecordFormatter</a></li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/AsyncMessageSendAction.html#createHeaderRecord-nablarch.core.db.statement.SqlRow-" title="nablarch.fw.messaging.action.AsyncMessageSendAction.createHeaderRecord(nablarch.core.db.statement.SqlRow)">AsyncMessageSendAction#createHeaderRecord</a></li>
</ul>
</dd>
<dt>For sending synchronous message</dt>
<dd><p class="first"><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/MessageSender.html" title="nablarch.fw.messaging.MessageSender">MessageSender</a> delegates the conversion process to
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/SyncMessageConvertor.html" title="nablarch.fw.messaging.SyncMessageConvertor">SyncMessageConvertor</a> so the conversion process of sent and received messages can be changed,
and this class reads and writes the framework control headers.</p>
<p class="last">Therefore, create a class that inherits <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/SyncMessageConvertor.html" title="nablarch.fw.messaging.SyncMessageConvertor">SyncMessageConvertor</a>,
and specify in the configuration of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/MessageSender.html" title="nablarch.fw.messaging.MessageSender">MessageSender</a>.
See <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/MessageSenderSettings.html" title="nablarch.fw.messaging.MessageSenderSettings">MessageSenderSettings</a>
for the configuration of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/MessageSender.html" title="nablarch.fw.messaging.MessageSender">MessageSender</a>.</p>
</dd>
</dl>
<dl class="docutils" id="mom-system-messaging-change-fw-header-async-receive">
<dt>For receiving asynchronous message</dt>
<dd><p class="first">The framework control header is read by a class
that implements the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/FwHeaderDefinition.html" title="nablarch.fw.messaging.FwHeaderDefinition">FwHeaderDefinition</a> interface
configured in <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/reader/FwHeaderReader.html" title="nablarch.fw.messaging.reader.FwHeaderReader">FwHeaderReader</a>.
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/StandardFwHeaderDefinition.html" title="nablarch.fw.messaging.StandardFwHeaderDefinition">StandardFwHeaderDefinition</a> is used by default.</p>
<p class="last">Therefore, referring to <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/StandardFwHeaderDefinition.html" title="nablarch.fw.messaging.StandardFwHeaderDefinition">StandardFwHeaderDefinition</a>,
a class that implements the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/FwHeaderDefinition.html" title="nablarch.fw.messaging.FwHeaderDefinition">FwHeaderDefinition</a> interface can be created in the project
and specified as the
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/reader/FwHeaderReader.html#setFwHeaderDefinition-nablarch.fw.messaging.FwHeaderDefinition-" title="nablarch.fw.messaging.reader.FwHeaderReader.setFwHeaderDefinition(nablarch.fw.messaging.FwHeaderDefinition)">FwHeaderReader#fwHeaderDefinition</a>
property in the component definition.</p>
</dd>
<dt>For receiving synchronous message</dt>
<dd><p class="first">Reading the framework control header is the same as
<a class="reference internal" href="#mom-system-messaging-change-fw-header-async-receive"><span>receiving asynchronous message</span></a>.</p>
<p class="last">Even when writing framework control header,
creating the class with the implementation of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/FwHeaderDefinition.html" title="nablarch.fw.messaging.FwHeaderDefinition">FwHeaderDefinition</a> interface is the same,
but the class created with component definition can be specified in the
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/handler/MessageReplyHandler.html#setFwHeaderDefinition-nablarch.fw.messaging.FwHeaderDefinition-" title="nablarch.fw.messaging.handler.MessageReplyHandler.setFwHeaderDefinition(nablarch.fw.messaging.FwHeaderDefinition)">fwHeaderDefinition</a>
property of <a class="reference internal" href="../../handlers/mom_messaging/message_reply_handler.html#message-reply-handler"><span>Message Response Control Handler</span></a>.</p>
</dd>
</dl>
</div>
</div>
<div class="section" id="data-model-of-sent-and-received-messages">
<span id="mom-system-messaging-data-model"></span><h2><a class="toc-backref" href="#id12">7.6.1.5. Data model of sent and received messages</a><a class="headerlink" href="#data-model-of-sent-and-received-messages" title="Permalink to this headline">¶</a></h2>
<p>In MOM messaging, the contents of sent and received messages are expressed with the following data model.</p>
<a class="reference internal image-reference" href="../../../../_images/mom_system_messaging-data_model.png"><img alt="../../../../_images/mom_system_messaging-data_model.png" src="../../../../_images/mom_system_messaging-data_model.png" /></a>
<dl class="docutils" id="mom-system-messaging-protocol-header">
<dt>Protocol header</dt>
<dd>This header area mainly stores information used in message send and receive process of MOM.
The protocol header can be accessed with the Map interface.</dd>
</dl>
<dl class="docutils" id="mom-system-messaging-common-protocol-header">
<dt>Common protocol header</dt>
<dd><p class="first">The following headers among the protocol headers used by the framework can be accessed with a specific key name.
The key name is shown in parentheses.</p>
<dl class="docutils">
<dt>Message ID (MessageId)</dt>
<dd><p class="first">String assigned by MOM for each message</p>
<table class="last docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Sending:</th><td class="field-body">Value assigned by MOM</td>
</tr>
<tr class="field-even field"><th class="field-name">Receiving:</th><td class="field-body">The value issued by the sender MOM</td>
</tr>
</tbody>
</table>
</dd>
<dt>Correlation message ID (CorrelationId)</dt>
<dd><p class="first">Message ID of the message to which the message is related</p>
<table class="last docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name" colspan="2">Response message:</th></tr>
<tr class="field-odd field"><td>&nbsp;</td><td class="field-body">Message ID of request message</td>
</tr>
<tr class="field-even field"><th class="field-name">Resend request:</th><td class="field-body">Message ID of request message requesting the resend of response</td>
</tr>
</tbody>
</table>
</dd>
<dt>Send address (Destination)</dt>
<dd><p class="first">Logical name that represents the send address of the message</p>
<table class="last docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Sending:</th><td class="field-body">Logical name of the send queue</td>
</tr>
<tr class="field-even field"><th class="field-name">Receiving:</th><td class="field-body">Logical name of the receive queue</td>
</tr>
</tbody>
</table>
</dd>
<dt>Reply to address (ReplyTo)</dt>
<dd><p class="first">Logical name that represents the address used when sending a response to this message</p>
<table class="last docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Sending:</th><td class="field-body">Logical name of the receive response queue for synchronous responses.
Configuration not required if no response is required</td>
</tr>
<tr class="field-even field"><th class="field-name">Receiving:</th><td class="field-body">Logical name of the reply to address queue for synchronous responses.
Usually not configured if no response is required</td>
</tr>
</tbody>
</table>
</dd>
<dt>Expiry interval (TimeToLive)</dt>
<dd><p class="first">Expiry interval (msec) of message starting from the send process start point</p>
<table class="last docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Sending:</th><td class="field-body">Expiry interval of sent message</td>
</tr>
<tr class="field-even field"><th class="field-name">Receiving:</th><td class="field-body">Not set</td>
</tr>
</tbody>
</table>
</dd>
</dl>
<div class="last admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">Headers other than the common protocol header can be defined arbitrarily in each messaging provider.
Such headers are called <strong>individual protocol headers</strong>.
For example, in the case of JMS messaging provider, all JMS headers, JMS extension headers and optional attributes are handled as individual protocol headers.</p>
</div>
</dd>
</dl>
<dl class="docutils" id="mom-system-messaging-message-body">
<dt>Message body</dt>
<dd><p class="first">The data area of the message excluding the protocol header is called the message body.
As a general rule, <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/MessagingProvider.html" title="nablarch.fw.messaging.MessagingProvider">MessagingProvider</a>,
which depends on MON, uses only the protocol header area.
The other data areas are handled as unanalyzed simple binary data.</p>
<p class="last">The message body is analyzed by <a class="reference internal" href="../data_io/data_format.html#data-format"><span>General Data Format</span></a>.
This enables reading and writing the content of the message in Map format with the field name as a key.</p>
</dd>
</dl>
<dl class="docutils" id="mom-system-messaging-fw-header">
<dt>Framework control header</dt>
<dd><p class="first">Many of the functions provided by this framework are designed on the assumption that specific control items are defined in the message.
Such control items are called <code class="docutils literal"><span class="pre">framework</span> <span class="pre">control</span> <span class="pre">headers</span></code>.</p>
<p>The correspondence between the framework control header and the handler using it are as follows.</p>
<dl class="docutils">
<dt>Request ID</dt>
<dd><p class="first">ID to identify the business process that should be executed by the application that received this message.</p>
<p>Main handlers that use this header:</p>
<div class="last line-block">
<div class="line"><a class="reference internal" href="../../handlers/common/request_path_java_package_mapping.html#request-path-java-package-mapping"><span>Request Dispatch Handler</span></a></div>
<div class="line"><a class="reference internal" href="../../handlers/mom_messaging/message_resend_handler.html#message-resend-handler"><span>Resent Message Control Handler</span></a></div>
<div class="line"><a class="reference internal" href="../../handlers/common/permission_check_handler.html#permission-check-handler"><span>Permission Check Handler</span></a></div>
<div class="line"><a class="reference internal" href="../../handlers/common/ServiceAvailabilityCheckHandler.html#serviceavailabilitycheckhandler"><span>Service Availability Check Handler</span></a></div>
</div>
</dd>
<dt>User ID</dt>
<dd><p class="first">A character string that indicates the execution permission of this message</p>
<p>Main handlers that use this header:</p>
<div class="last line-block">
<div class="line"><a class="reference internal" href="../../handlers/common/permission_check_handler.html#permission-check-handler"><span>Permission Check Handler</span></a></div>
</div>
</dd>
<dt>Resend request flag</dt>
<dd><p class="first">Flag set when sending a resend request message</p>
<p>Main handlers that use this header:</p>
<div class="last line-block">
<div class="line"><a class="reference internal" href="../../handlers/mom_messaging/message_resend_handler.html#message-resend-handler"><span>Resent Message Control Handler</span></a></div>
</div>
</dd>
<dt>Status code</dt>
<dd><p class="first">Code value that represents the processing result for the request message</p>
<p>Main handlers that use this header:</p>
<div class="last line-block">
<div class="line"><a class="reference internal" href="../../handlers/mom_messaging/message_reply_handler.html#message-reply-handler"><span>Message Response Control Handler</span></a></div>
</div>
</dd>
</dl>
<p>The framework control header must be defined with the following field names
in the first data record of the message body by default.</p>
<blockquote>
<div><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Request ID:</th><td class="field-body">requestId</td>
</tr>
<tr class="field-even field"><th class="field-name">User ID:</th><td class="field-body">userId</td>
</tr>
<tr class="field-odd field"><th class="field-name" colspan="2">Resend request flag:</th></tr>
<tr class="field-odd field"><td>&nbsp;</td><td class="field-body">resendFlag</td>
</tr>
<tr class="field-even field"><th class="field-name">Status code:</th><td class="field-body">statusCode</td>
</tr>
</tbody>
</table>
</div></blockquote>
<p>The following is an example of a standard framework control header definition.</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="c1">#===================================================================</span>
<span class="c1"># Framework control header part (50 bytes)</span>
<span class="c1">#===================================================================</span>
<span class="o">[</span>NablarchHeader<span class="o">]</span>
<span class="m">1</span>   requestId   X<span class="o">(</span><span class="m">10</span><span class="o">)</span>       <span class="c1"># Request ID</span>
<span class="m">11</span>  userId      X<span class="o">(</span><span class="m">10</span><span class="o">)</span>       <span class="c1"># User ID</span>
<span class="m">21</span>  resendFlag  X<span class="o">(</span><span class="m">1</span><span class="o">)</span>  <span class="s2">&quot;0&quot;</span>   <span class="c1"># Resend request flag (0: Initial send 1: Resend request)</span>
<span class="m">22</span>  statusCode  X<span class="o">(</span><span class="m">4</span><span class="o">)</span>  <span class="s2">&quot;200&quot;</span> <span class="c1"># Status code</span>
<span class="m">26</span> ?filler      X<span class="o">(</span><span class="m">25</span><span class="o">)</span>       <span class="c1"># Reserve area</span>
<span class="c1">#====================================================================</span>
</pre></div>
</div>
<p>When items other than the framework control header are included in the format definition,
the items can be accessed as optional header items of framework control header
and used for the purpose of simple expansion of the framework control header for each project.</p>
<p class="last">It is highly recommended to provide a reserve area to add headers
that are required to manage optional items and framework functions that may be added in the future.</p>
</dd>
</dl>
</div>
</div>


           </div>
           <div class="articleComments">
            
           </div>
          </div>
          <footer>

    <hr/>

    <div role="contentinfo">
        <p>
            &copy; Copyright 2010-2021, TIS Inc.
        </p>
    </div>
    Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org">Read the Docs</a>.

</footer>

        </div>
      </div>

    </section>

  </div>
  


  

    <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'../../../../',
            VERSION:'5u19',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true,
            SOURCELINK_SUFFIX: ''
        };
    </script>
      <script type="text/javascript" src="../../../../_static/jquery.js"></script>
      <script type="text/javascript" src="../../../../_static/underscore.js"></script>
      <script type="text/javascript" src="../../../../_static/doctools.js"></script>
      <script type="text/javascript" src="../../../../_static/custom.js"></script>

  

  
  
    <script type="text/javascript" src="../../../../_static/js/theme.js"></script>
  

  
  
  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>
   

</body>
</html>