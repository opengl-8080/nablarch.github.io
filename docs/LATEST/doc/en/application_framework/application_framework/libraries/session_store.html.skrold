


<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->
<head>
  <meta charset="utf-8">
  <meta http-equiv='content-language' content='ja'>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>7.17. Session Store &mdash; ∇Nablarch  5u19 documentation</title>
  

  
  
  
  

  

  
  
    

  

  
  
    <link rel="stylesheet" href="../../../_static/custom.css" type="text/css" />
  

  

  
  <link rel="canonical" href="https://nablarch.github.io/docs/LATEST/doc/application_framework/application_framework/libraries/session_store.html" />
  
    <link rel="top" title="∇Nablarch  5u19 documentation" href="../../../index.html"/>
        <link rel="up" title="7. Libraries Provided by Nablarch" href="index.html"/>
        <link rel="next" title="7.17.4.2.1. Implementation Example with Registration Function" href="session_store/create_example.html"/>
        <link rel="prev" title="7.16. Service Availability Check" href="service_availability.html"/>
 

  
  <script src="../../../_static/js/modernizr.min.js"></script>

</head>

<body class="wy-body-for-nav" role="document">

   
  <div class="wy-grid-for-nav">

    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search">
          
  
  <a href="../../../index.html" id="sidebar-title" class="icon"> ∇Nablarch 
  

  
    <div id="sidebar-version">Version: 5u19</div>
  </a>

  <div role="search">
    <form id="google-search-form" class="wy-form" method="get" action="https://www.google.co.jp/search">
      <input type="text" name="text" placeholder="Search docs on google" id="text"/>
      <input type="hidden" name="q" id="q"/>
    </form>
  </div>
    
    

        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
  
  
    <ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../../about_nablarch/index.html">What is the Nablarch?</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../about_nablarch/concept.html">Nablarch Concept</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../about_nablarch/concept.html#robustness">Robustness</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../about_nablarch/concept.html#testability">Testability</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../about_nablarch/concept.html#ready-to-use">Ready-to-Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../about_nablarch/mvn_module.html">Module List of Nablarch</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../about_nablarch/license.html">Information on Nablarch License</a></li>
</ul>
</li>
<li class="toctree-l1 current"><a class="reference internal" href="../../index.html">Nablarch Application Framework</a><ul class="current">
<li class="toctree-l2 current"><a class="reference internal" href="../index.html">Application Framework</a><ul class="current">
<li class="toctree-l3"><a class="reference internal" href="../nablarch/index.html">1. What is Nablarch Application Framework?</a></li>
<li class="toctree-l3"><a class="reference internal" href="../web/index.html">2. Web Application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../web_service/index.html">3. Web Service</a></li>
<li class="toctree-l3"><a class="reference internal" href="../batch/index.html">4. Batch Application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../messaging/index.html">5. Messaging</a></li>
<li class="toctree-l3"><a class="reference internal" href="../handlers/index.html">6. Standard Handler Provided by Nablarch</a></li>
<li class="toctree-l3 current"><a class="reference internal" href="index.html">7. Libraries Provided by Nablarch</a></li>
<li class="toctree-l3"><a class="reference internal" href="../blank_project/index.html">8. Blank Project</a></li>
<li class="toctree-l3"><a class="reference internal" href="../setting_guide/index.html">9. Nablarch Application Framework Configuration Guide</a></li>
<li class="toctree-l3"><a class="reference internal" href="../configuration/index.html">10. Default Configuration List</a></li>
<li class="toctree-l3"><a class="reference internal" href="../cloud_native/index.html">11. Nablarch Cloud Native Support</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../adaptors/index.html">Adaptor</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/log_adaptor.html">log Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/router_adaptor.html">Routing Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/webspheremq_adaptor.html">IBM WebSphere MQ Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/jaxrs_adaptor.html">JAX-RS Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/doma_adaptor.html">Doma Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/jsr310_adaptor.html">JSR310(Date and Time API)Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/mail_sender_freemarker_adaptor.html">E-mail FreeMarker Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/mail_sender_thymeleaf_adaptor.html">E-mail Thymeleaf Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/mail_sender_velocity_adaptor.html">E-mail Velocity Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/web_thymeleaf_adaptor.html">Web Application Thymeleaf Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/lettuce_adaptor.html">Lettuce Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/slf4j_adaptor.html">SLF4J Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/micrometer_adaptor.html">Micrometer Adapter</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../example/index.html">Example</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../example/index.html#procedure-to-build-the-environment">Procedure to build the environment</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../example/index.html#application-execution-procedure">Application execution procedure</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../extension_components/index.html">Nablarch extension component</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../extension_components/report/index.html">1. Form library</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../extension_components/workflow/doc/index.html">2. Workflow library</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../extension_components/workflow/tool/index.html">3. Workflow definition data generation tool</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../extension_components/etl/index.html">4. ETL</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../extension_components/etl/etl_maven_plugin.html">5. ETL Maven plugin</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../development_tools/index.html">Nablarch development tools</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../development_tools/java_static_analysis/index.html">1. Efficient Java Static Checks</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/java_static_analysis/index.html#conduct-syntax-check">1.1. Conduct syntax check</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/java_static_analysis/index.html#unify-the-format">1.2. Unify the format</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/java_static_analysis/index.html#check-if-unauthorized-apis-are-being-used">1.3. Check if unauthorized APIs are being used</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../development_tools/ui_dev/index.html">2. Front-end UI development platform for advanced users</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../development_tools/testing_framework/index.html">3. Testing framework</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/testing_framework/guide/development_guide/05_UnitTestGuide/index.html">3.1. How to Execute Unit Tests</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/testing_framework/guide/development_guide/06_TestFWGuide/index.html">3.2. How to Use the Automated Test Framework</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/testing_framework/guide/development_guide/08_TestTools/index.html">3.3. Tools Used in the Programming Phase</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../development_tools/toolbox/index.html">4. Useful Tools When Developing Applications</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/toolbox/JspStaticAnalysis/index.html">4.1. JSP Static Analysis Tool</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/toolbox/SqlExecutor/SqlExecutor.html">4.2. Nablarch SQL Executor</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/toolbox/JspVerifier/JspVerifier.html">4.3. Job Screen JSP Validation Tool</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../examples/index.html">Nablarch Implementation Examples</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/01/index.html">Sample Password Encryption Function Using Database</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/01/0101_PBKDF2PasswordEncryptor.html">Sample Password Encryption Function Using PBKDF2</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/01/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/01/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/01/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/01/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/02/index.html">Extended Validation Functions</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/02/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/02/index.html#email-address-validation">Email address validation</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/02/index.html#validation-of-japan-telephone-numbers">Validation of Japan telephone numbers</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/02/index.html#code-value-validation">Code value validation</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/03/index.html">Display a List of Search Results</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#how-to-use">How to Use</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#listsearchinfo-class">ListSearchInfo class</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#listsearchresult-tag">listSearchResult tag</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#sort-search-results">Sort search results</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#how-to-implement-displaying-a-list-of-all-search-results-on-a-single-screen">How to implement displaying a list of all search results on a single screen</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#how-to-implement-the-initial-display-of-search-results-with-the-default-search-conditions">How to implement the initial display of search results with the default search conditions</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#default-settings-for-the-search-result-list-display-function">Default settings for the search result list display function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#how-to-import-a-sample-implementation-tag-file-into-the-business-application">How to import a sample implementation (tag file) into the business application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#tag-reference">Tag Reference</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/04/index.html">Extended Formatter Functions</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/04/0401_ExtendedDataFormatter.html">Data Formatter Expansion</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/04/0402_ExtendedFieldType.html">Field Type Expansion in the Data Formatter Function</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/05/index.html">Sample File Management Function Using Database</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/05/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/05/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/05/index.html#functions">Functions</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/05/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/05/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/06/index.html">CAPTCHA Function Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/06/06_Captcha_guide.html">How to Incorporate the CAPTCHA Function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/06/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/06/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/06/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/06/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/07/index.html">Sample UserAgent Information Acquisition Function</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/07/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/07/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/07/index.html#description-of-configuration">Description of configuration</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/07/index.html#use-case">Use case</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/08/index.html">Sample of HTML Email Send Function</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/08/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/08/index.html#request">Request</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/08/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/08/index.html#implementation-examples">Implementation examples</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/09/index.html">How to Use a Sample to Send a Digitally Signed Email Using Bouncycastle</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/09/index.html#environment-preparation">Environment preparation</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/09/index.html#structure-of-digitally-signed-email-send-function">Structure of digitally signed email send function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/09/index.html#preparation-of-configuration-file">Preparation of configuration file</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/09/index.html#execution">Execution</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/10/index.html">How to Use the Log Aggregation Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/10/index.html#list-of-samples-provided">List of samples provided</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/11/index.html">Messaging Platform Test Simulator Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/11/index.html#uses">Uses</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/11/index.html#features">Features</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/11/index.html#request">Request</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/11/index.html#how-to-use">How to use</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/11/index.html#expansion-example">Expansion example</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../nablarch_api/index.html">Nablarch API</a></li>
</ul>

  

        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" role="navigation" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../../../index.html">∇Nablarch </a>
        
      </nav>


      
      <div class="wy-nav-content">
        <div class="rst-content">
          

 



<div role="navigation" aria-label="breadcrumbs navigation">
  <ul class="wy-breadcrumbs">
    <li><a href="../../../index.html">Docs</a> &raquo;</li>
      
          <li><a href="../../index.html">Nablarch Application Framework</a> &raquo;</li>
      
          <li><a href="../index.html">Application Framework</a> &raquo;</li>
      
          <li><a href="index.html">7. Libraries Provided by Nablarch</a> &raquo;</li>
      
    <li>7.17. Session Store</li>
    <li class="wy-breadcrumbs-aside">
      <a href="https://github.com/nablarch" class="fa fa-github">GitHub</a>
    </li>
    <li class="wy-breadcrumbs-aside">
        <a href="https://nablarch.github.io/docs/LATEST/doc/index.html" class="ja">日本語</a>
    </li>
  </ul>
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  <div class="section" id="session-store">
<span id="id1"></span><h1>7.17. Session Store<a class="headerlink" href="#session-store" title="Permalink to this headline">¶</a></h1>
<div class="contents local topic" id="table-of-contents">
<p class="topic-title first">Table of contents</p>
<ul class="simple">
<li><a class="reference internal" href="#function-overview" id="id9">Function overview</a><ul>
<li><a class="reference internal" href="#save-destination-of-session-variables-can-be-selected" id="id10">Save destination of session variables can be selected</a></li>
<li><a class="reference internal" href="#serialization-mechanism-for-session-variable-can-be-selected" id="id11">Serialization mechanism for session variable can be selected</a></li>
</ul>
</li>
<li><a class="reference internal" href="#module-list" id="id12">Module list</a></li>
<li><a class="reference internal" href="#constraints" id="id13">Constraints</a><ul>
<li><a class="reference internal" href="#save-target-must-java-beans-object-that-can-be-serialized" id="id14">Save target must Java Beans object that can be serialized</a></li>
</ul>
</li>
<li><a class="reference internal" href="#how-to-use" id="id15">How to use</a><ul>
<li><a class="reference internal" href="#configure-for-using-session-store" id="id16">Configure for using session store</a></li>
<li><a class="reference internal" href="#hold-the-input-information-between-the-input-confirm-complete-screens" id="id17">Hold the input information between the input-confirm-complete screens</a></li>
<li><a class="reference internal" href="#holds-credentials" id="id18">Holds credentials</a></li>
<li><a class="reference internal" href="#refer-to-the-session-variable-value-from-jsp" id="id19">Refer to the session variable value from JSP</a></li>
<li><a class="reference internal" href="#customize-the-encryption-configuration-of-the-hidden-store" id="id20">Customize the encryption configuration of the HIDDEN store</a></li>
<li><a class="reference internal" href="#specify-the-transition-destination-screen-when-the-value-does-not-exist-in-the-session-variable" id="id21">Specify the transition destination screen when the value does not exist in the session variable</a></li>
</ul>
</li>
<li><a class="reference internal" href="#expansion-example" id="id22">Expansion example</a><ul>
<li><a class="reference internal" href="#add-the-save-destination-of-session-variables" id="id23">Add the save destination of session variables</a></li>
</ul>
</li>
<li><a class="reference internal" href="#features-and-selection-criteria-of-session-store" id="id24">Features and selection criteria of session store</a></li>
<li><a class="reference internal" href="#how-to-manage-the-expiration-date" id="id25">How to manage the expiration date</a></li>
</ul>
</div>
<p>Provides a function that abstracts the HTTP session.</p>
<p>This function issues session ID to identify the session,
and the session is tracked using the cookie (<code class="docutils literal"><span class="pre">NABLARCH_SID</span></code> (changeable)).
It provides a function called a session store for each session ID to read and write to a save destination.</p>
<p>The value read from and written to the session store for each session ID by this function is called a session variable.</p>
<p>Flow of a simple process is shown in the figure below.</p>
<img alt="../../../_images/session_store.png" src="../../../_images/session_store.png" />
<ol class="arabic simple">
<li>The request process of <a class="reference internal" href="../handlers/web/SessionStoreHandler.html#session-store-handler"><span>Session Variable Store Handler</span></a> loads the session variable from the session store based on the session ID obtained from the cookie.</li>
<li>Reads from/writes to session variable using <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/web/session/SessionUtil.html" title="nablarch.common.web.session.SessionUtil">SessionUtil</a> from business action.</li>
<li>The response process of <a class="reference internal" href="../handlers/web/SessionStoreHandler.html#session-store-handler"><span>Session Variable Store Handler</span></a> saves the session variables in the session store.</li>
<li>Configure session variable in request scope so that it can be referenced in JSP. (Do not configure if a value with the same name already exists in the request scope.)</li>
</ol>
<div class="admonition important">
<p class="first admonition-title">Important</p>
<p>When using this function, the following functions are deprecated because of duplication of applications.</p>
<ul class="last simple">
<li><a class="reference internal" href="tag.html#tag-hidden-encryption"><span>hidden encryption</span></a></li>
<li><a class="reference internal" href="../handlers/web/session_concurrent_access_handler.html#session-concurrent-access-handler"><span>Session Concurrent Access Handler</span></a></li>
<li>API to access the session scope of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/ExecutionContext.html" title="nablarch.fw.ExecutionContext">ExecutionContext</a>.</li>
</ul>
</div>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">The cookie ( <code class="docutils literal"><span class="pre">NABLARCH_SID</span></code> ) used in this function is completely different from the JSESSIONID used for tracking the HTTP session.</p>
</div>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">Starting from Nablarch 5u16, you can choose the location for storing the expiration date of the session store other than HTTP sessions.</p>
</div>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last"><a class="reference external" href="http://docs.oracle.com/javase/8/docs/api/java/util/UUID.html" title="java.util.UUID">UUID</a> is used for the session ID used in the cookie ( <code class="docutils literal"><span class="pre">NABLARCH_SID</span></code> ).</p>
</div>
<div class="section" id="function-overview">
<h2><a class="toc-backref" href="#id9">7.17.1. Function overview</a><a class="headerlink" href="#function-overview" title="Permalink to this headline">¶</a></h2>
<div class="section" id="save-destination-of-session-variables-can-be-selected">
<h3><a class="toc-backref" href="#id10">7.17.1.1. Save destination of session variables can be selected</a><a class="headerlink" href="#save-destination-of-session-variables-can-be-selected" title="Permalink to this headline">¶</a></h3>
<p>Save destination of the session variable can be selected according to the usage.</p>
<p>The following three types of stores are provided as standard.</p>
<ul class="simple">
<li><a class="reference internal" href="#session-store-db-store"><span>DB store</span></a></li>
<li><a class="reference internal" href="#session-store-hidden-store"><span>HIDDEN store</span></a></li>
<li><a class="reference internal" href="#session-store-http-session-store"><span>HTTP session store</span></a></li>
</ul>
<p>For the features and selection criteria of the session store, see <a class="reference internal" href="#session-store-future-of-store"><span>Features and selection criteria of session store</span></a>.</p>
<p>Also, Redis can be used as a store destination by using <a class="reference internal" href="../../adaptors/lettuce_adaptor/redisstore_lettuce_adaptor.html#redisstore-lettuce-adaptor"><span>Redis Store (Lettus) Adapter</span></a>.</p>
</div>
<div class="section" id="serialization-mechanism-for-session-variable-can-be-selected">
<span id="session-store-serialize"></span><h3><a class="toc-backref" href="#id11">7.17.1.2. Serialization mechanism for session variable can be selected</a><a class="headerlink" href="#serialization-mechanism-for-session-variable-can-be-selected" title="Permalink to this headline">¶</a></h3>
<p>The serialization mechanism when saving session variables in session store can be selected from the following.
For details of each function, refer to the linked Javadoc.</p>
<ul class="simple">
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/web/session/encoder/JavaSerializeStateEncoder.html" title="nablarch.common.web.session.encoder.JavaSerializeStateEncoder">serialization by Java standard serialize (default)</a></li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/web/session/encoder/JavaSerializeEncryptStateEncoder.html" title="nablarch.common.web.session.encoder.JavaSerializeEncryptStateEncoder">serialization and encryption by Java standard serialize</a></li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/web/session/encoder/JaxbStateEncoder.html" title="nablarch.common.web.session.encoder.JaxbStateEncoder">XML-based serialization with JAXB</a></li>
</ul>
</div>
</div>
<div class="section" id="module-list">
<h2><a class="toc-backref" href="#id12">7.17.2. Module list</a><a class="headerlink" href="#module-list" title="Permalink to this headline">¶</a></h2>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>com.nablarch.framework<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>nablarch-fw-web<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>

<span class="c">&lt;!-- Only when using DB store --&gt;</span>
<span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>com.nablarch.framework<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>nablarch-fw-web-dbstore<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</pre></div>
</div>
</div>
<div class="section" id="constraints">
<span id="session-store-constraint"></span><h2><a class="toc-backref" href="#id13">7.17.3. Constraints</a><a class="headerlink" href="#constraints" title="Permalink to this headline">¶</a></h2>
<div class="section" id="save-target-must-java-beans-object-that-can-be-serialized">
<h3><a class="toc-backref" href="#id14">7.17.3.1. Save target must Java Beans object that can be serialized</a><a class="headerlink" href="#save-target-must-java-beans-object-that-can-be-serialized" title="Permalink to this headline">¶</a></h3>
<p>Object to be saved in the session store must be a serializable Java Beans object.</p>
<p>The property type of the object must be a Java basic type or a Java Beans object that can be serialized.
Arrays and collections can also be used for properties.</p>
</div>
</div>
<div class="section" id="how-to-use">
<h2><a class="toc-backref" href="#id15">7.17.4. How to use</a><a class="headerlink" href="#how-to-use" title="Permalink to this headline">¶</a></h2>
<div class="section" id="configure-for-using-session-store">
<span id="session-store-use-config"></span><h3><a class="toc-backref" href="#id16">7.17.4.1. Configure for using session store</a><a class="headerlink" href="#configure-for-using-session-store" title="Permalink to this headline">¶</a></h3>
<p>To use session store, configure <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/web/session/SessionManager.html" title="nablarch.common.web.session.SessionManager">SessionManager</a> in the component
definition in addition to configuring <a class="reference internal" href="../handlers/web/SessionStoreHandler.html#session-store-handler"><span>Session Variable Store Handler</span></a>.</p>
<p>The following is a configuration example when all the save destinations provided as standard are used.</p>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="c">&lt;!-- Configure with the component name &quot;sessionManager&quot; --&gt;</span>
<span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;sessionManager&quot;</span> <span class="na">class=</span><span class="s">&quot;nablarch.common.web.session.SessionManager&quot;</span><span class="nt">&gt;</span>

  <span class="c">&lt;!--</span>
<span class="c">    Store name used by default if a save destination is not specified explicitly</span>
<span class="c">  --&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;defaultStoreName&quot;</span> <span class="na">value=</span><span class="s">&quot;db&quot;</span><span class="nt">/&gt;</span>

  <span class="c">&lt;!-- Add components according to the save destination used in the application --&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;availableStores&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;list&gt;</span>
      <span class="c">&lt;!-- HIDDEN store --&gt;</span>
      <span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.common.web.session.store.HiddenStore&quot;</span><span class="nt">&gt;</span>
        <span class="c">&lt;!-- See Javadoc for details of the configuration value --&gt;</span>
      <span class="nt">&lt;/component&gt;</span>

      <span class="c">&lt;!-- DB store --&gt;</span>
      <span class="nt">&lt;component-ref</span> <span class="na">name=</span><span class="s">&quot;dbStore&quot;</span> <span class="nt">/&gt;</span>

      <span class="c">&lt;!-- HTTP session store --&gt;</span>
      <span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.common.web.session.store.HttpSessionStore&quot;</span><span class="nt">&gt;</span>
        <span class="c">&lt;!-- See Javadoc for details of the configuration value --&gt;</span>
      <span class="nt">&lt;/component&gt;</span>
    <span class="nt">&lt;/list&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/component&gt;</span>

<span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;dbStore&quot;</span> <span class="na">class=</span><span class="s">&quot;nablarch.common.web.session.store.DbStore&quot;</span><span class="nt">&gt;</span>
  <span class="c">&lt;!-- See Javadoc for details of the configuration value --&gt;</span>
<span class="nt">&lt;/component&gt;</span>

<span class="c">&lt;!-- DB store initialization configuration --&gt;</span>
<span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;initializer&quot;</span>
    <span class="na">class=</span><span class="s">&quot;nablarch.core.repository.initialization.BasicApplicationInitializer&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;initializeList&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;list&gt;</span>
      <span class="c">&lt;!-- Other components are omitted --&gt;</span>
      <span class="nt">&lt;component-ref</span> <span class="na">name=</span><span class="s">&quot;dbStore&quot;</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/list&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
<p>When using DB store, a table must be created in the database to store the session variables.</p>
<p>The definition of the table to be created is shown below.</p>
<dl class="docutils">
<dt><cite>USER_SESSION</cite> table</dt>
<dd><table border="1" class="first last docutils">
<colgroup>
<col width="50%" />
<col width="50%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Column name</th>
<th class="head">Data type</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>SESSION_ID(PK)</td>
<td><cite>java.lang.String</cite></td>
</tr>
<tr class="row-odd"><td>SESSION_OBJECT</td>
<td><cite>byte[]</cite></td>
</tr>
<tr class="row-even"><td>EXPIRATION_DATETIME</td>
<td><cite>java.sql.Timestamp</cite></td>
</tr>
</tbody>
</table>
</dd>
</dl>
<p><cite>SESSION_ID</cite> should be defined as VARCHAR instead of CHAR as it may not work properly in Oracle.</p>
<p>The table name and column name can be changed.
To change, define the components of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/web/session/store/UserSessionSchema.html" title="nablarch.common.web.session.store.UserSessionSchema">UserSessionSchema</a>
to <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/web/session/store/DbStore.html#setUserSessionSchema-nablarch.common.web.session.store.UserSessionSchema-" title="nablarch.common.web.session.store.DbStore.setUserSessionSchema(nablarch.common.web.session.store.UserSessionSchema)">DbStore.userSessionSchema</a>.</p>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;userSessionSchema&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.common.web.session.store.UserSessionSchema&quot;</span><span class="nt">&gt;</span>
    <span class="c">&lt;!-- See Javadoc for details of the configuration value --&gt;</span>
  <span class="nt">&lt;/component&gt;</span>
<span class="nt">&lt;/property&gt;</span>
</pre></div>
</div>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">When DB store is used, session information may remain in the table when the browser is closed.
Therefore, expired session information must be deleted regularly.</p>
</div>
</div>
<div class="section" id="hold-the-input-information-between-the-input-confirm-complete-screens">
<span id="session-store-input-data"></span><h3><a class="toc-backref" href="#id17">7.17.4.2. Hold the input information between the input-confirm-complete screens</a><a class="headerlink" href="#hold-the-input-information-between-the-input-confirm-complete-screens" title="Permalink to this headline">¶</a></h3>
<p>To retain the input information between the input-confirm-complete screen,
use the session store depending on whether screen operations on multiple tabs are allowed.</p>
<dl class="docutils">
<dt>When screen operations on multiple tabs are not allowed</dt>
<dd>Hold session variables in a table on the database using the DB store.</dd>
<dt>When screen operations on multiple tabs are allowed</dt>
<dd><p class="first">Hold session variables in the client using HIDDEN store.</p>
<p>When using HIDDEN store, use <a class="reference internal" href="tag/tag_reference.html#tag-hidden-store-tag"><span>hiddenStore tag</span></a> in JSP of input/confirmation screen as shown below.</p>
<div class="last highlight-jsp"><div class="highlight"><pre><span></span><span class="nt">&lt;n:form&gt;</span>
  <span class="c">&lt;!--</span>
<span class="c">    Configure the value of parameterName property of HiddenStore</span>
<span class="c">    defined in the component configuration file to the name attribute</span>
<span class="c">  --&gt;</span>
  <span class="nt">&lt;n:hiddenStore</span> <span class="na">name=</span><span class="s">&quot;nablarch_hiddenStore&quot;</span> <span class="nt">/&gt;</span>
  <span class="c">&lt;!-- Other tags are omitted --&gt;</span>
<span class="nt">&lt;/n:form&gt;</span>
</pre></div>
</div>
</dd>
</dl>
<p>Implementation example of session store between input-confirm-complete is shown below.</p>
<div class="toctree-wrapper compound">
<ul>
<li class="toctree-l1"><a class="reference internal" href="session_store/create_example.html">7.17.4.2.1. Implementation Example with Registration Function</a><ul>
<li class="toctree-l2"><a class="reference internal" href="session_store/create_example.html#initial-display-of-input-screen">7.17.4.2.1.1. Initial display of input screen</a></li>
<li class="toctree-l2"><a class="reference internal" href="session_store/create_example.html#transition-from-the-input-screen-to-the-confirmation-screen">7.17.4.2.1.2. Transition from the input screen to the confirmation screen</a></li>
<li class="toctree-l2"><a class="reference internal" href="session_store/create_example.html#return-from-the-confirmation-screen-to-the-input-screen">7.17.4.2.1.3. Return from the confirmation screen to the input screen</a></li>
<li class="toctree-l2"><a class="reference internal" href="session_store/create_example.html#execute-the-registration-process">7.17.4.2.1.4. Execute the registration process</a></li>
</ul>
</li>
</ul>
</div>
<div class="toctree-wrapper compound">
<ul>
<li class="toctree-l1"><a class="reference internal" href="session_store/update_example.html">7.17.4.2.2. Implementation Example with Update Function</a><ul>
<li class="toctree-l2"><a class="reference internal" href="session_store/update_example.html#initial-display-of-input-screen">7.17.4.2.2.1. Initial display of input screen</a></li>
<li class="toctree-l2"><a class="reference internal" href="session_store/update_example.html#transition-from-the-input-screen-to-the-confirmation-screen">7.17.4.2.2.2. Transition from the input screen to the confirmation screen</a></li>
<li class="toctree-l2"><a class="reference internal" href="session_store/update_example.html#return-from-the-confirmation-screen-to-the-input-screen">7.17.4.2.2.3. Return from the confirmation screen to the input screen</a></li>
<li class="toctree-l2"><a class="reference internal" href="session_store/update_example.html#execute-the-update-process">7.17.4.2.2.4. Execute the update process</a></li>
</ul>
</li>
</ul>
</div>
<div class="admonition tip" id="session-store-form">
<p class="first admonition-title">Tip</p>
<p>Object (Entity) for executing business logic should be stored in the session store instead of Form.</p>
<p>By storing Entity, business logic can be executed immediately with the object acquired from the session store.
As a result, unnecessary processes can be prevented from being mixed in the business logic, and enhancement of cohesiveness at the source can be expected.</p>
<p>On the other hand, storing a Form increases the possibility that a tightly coupled source will be created by inducing the passing of data
by the Form and incorporating unnecessary data conversion processing in the business logic.</p>
<p class="last">Form needs to be validated as it accepts external input values, but before validation, Form is in a state of holding unreliable values.
Therefore, from the security perspective, since data stored in the session store will have a long lifetime,
the goal is also to retain the safest data possible and reduce the risk of embedding vulnerabilities.</p>
</div>
</div>
<div class="section" id="holds-credentials">
<span id="session-store-authentication-data"></span><h3><a class="toc-backref" href="#id18">7.17.4.3. Holds credentials</a><a class="headerlink" href="#holds-credentials" title="Permalink to this headline">¶</a></h3>
<p>Use DB store to retain credentials.</p>
<p>Implementation example of session store during login/logout is shown below.</p>
<dl class="docutils">
<dt>Login to the application</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="c1">// Delete existing session store before login</span>
<span class="n">SessionUtil</span><span class="o">.</span><span class="na">invalidate</span><span class="o">(</span><span class="n">ctx</span><span class="o">);</span>

<span class="c1">// Save login user information in session store</span>
<span class="n">SessionUtil</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">ctx</span><span class="o">,</span> <span class="s">&quot;user&quot;</span><span class="o">,</span> <span class="n">user</span><span class="o">,</span> <span class="s">&quot;db&quot;</span><span class="o">);</span>
</pre></div>
</div>
</dd>
<dt>Logout from the application</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="c1">// Invalidate the entire session store</span>
<span class="n">SessionUtil</span><span class="o">.</span><span class="na">invalidate</span><span class="o">(</span><span class="n">ctx</span><span class="o">);</span>
</pre></div>
</div>
</dd>
</dl>
</div>
<div class="section" id="refer-to-the-session-variable-value-from-jsp">
<h3><a class="toc-backref" href="#id19">7.17.4.4. Refer to the session variable value from JSP</a><a class="headerlink" href="#refer-to-the-session-variable-value-from-jsp" title="Permalink to this headline">¶</a></h3>
<p>The value of session variable held in the session store can be referenced
from JSP using the same procedure as the normal request scope and session scope.</p>
<div class="admonition important">
<p class="first admonition-title">Important</p>
<p class="last">If a value with the same name already exists in the request scope, the value of the session variable cannot be referenced from JSP.
Therefore, configure a name that does not overlap with the request scope in session variable.</p>
</div>
</div>
<div class="section" id="customize-the-encryption-configuration-of-the-hidden-store">
<h3><a class="toc-backref" href="#id20">7.17.4.5. Customize the encryption configuration of the HIDDEN store</a><a class="headerlink" href="#customize-the-encryption-configuration-of-the-hidden-store" title="Permalink to this headline">¶</a></h3>
<p>The default encryption/decryption configuration of the <a class="reference internal" href="#session-store-hidden-store"><span>HIDDEN store</span></a> is as follows.</p>
<table border="1" class="docutils">
<colgroup>
<col width="27%" />
<col width="73%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Configuration item</th>
<th class="head">Settings</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>Encryption algorithm</td>
<td><cite>AES</cite></td>
</tr>
<tr class="row-odd"><td>Encryption key</td>
<td>Use a common auto-generated key within the application server</td>
</tr>
</tbody>
</table>
<p>When application servers are made redundant, different keys are generated for each application server, and decryption may fail.
In this case, the encryption/decryption key is set explicitly.</p>
<p>The following is a configuration example in which <cite>AES</cite> is used as the encryption algorithm and the encryption/decryption key is configured explicitly.</p>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.common.web.session.store.HiddenStore&quot;</span><span class="nt">&gt;</span>
  <span class="c">&lt;!-- Other configuration values are omitted --&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;encryptor&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.common.encryption.AesEncryptor&quot;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;base64Key&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.common.encryption.Base64Key&quot;</span><span class="nt">&gt;</span>
          <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;key&quot;</span> <span class="na">value=</span><span class="s">&quot;OwYMOWbnLyYy93P8oIayeg==&quot;</span> <span class="nt">/&gt;</span>
          <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;iv&quot;</span> <span class="na">value=</span><span class="s">&quot;NOj5OUN+GlyGYTc6FM0+nw==&quot;</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/component&gt;</span>
      <span class="nt">&lt;/property&gt;</span>
    <span class="nt">&lt;/component&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
<dl class="docutils">
<dt>Point</dt>
<dd><p class="first">For the encryption key and IV, set base64-encoded values.
To increase the key strength, the following functions may be used to generate the key and IV.</p>
<ul class="simple">
<li>Generate the key using <a class="reference external" href="http://docs.oracle.com/javase/8/docs/api/javax/crypto/KeyGenerator.html" title="javax.crypto.KeyGenerator">KeyGenerator</a>.</li>
<li>Generate IV using <a class="reference external" href="http://docs.oracle.com/javase/8/docs/api/java/security/SecureRandom.html" title="java.security.SecureRandom">SecureRandom</a>.</li>
</ul>
<p class="last">Using <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/util/Base64Util.html" title="nablarch.core.util.Base64Util">Base64Util</a> or <code class="docutils literal"><span class="pre">java.util.Base64.Encoder</span></code>,
which is added in Java 8, is better for base64 encoding.</p>
</dd>
</dl>
</div>
<div class="section" id="specify-the-transition-destination-screen-when-the-value-does-not-exist-in-the-session-variable">
<h3><a class="toc-backref" href="#id21">7.17.4.6. Specify the transition destination screen when the value does not exist in the session variable</a><a class="headerlink" href="#specify-the-transition-destination-screen-when-the-value-does-not-exist-in-the-session-variable" title="Permalink to this headline">¶</a></h3>
<p>Session variables always exist in normal screen transitions, but in some cases,
session variables that originally existed may not be accessible due to incorrect screen transitions being performed using the back button of the browser.
Since an exception indicating that the session variable does not exist ( <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/web/session/SessionKeyNotFoundException.html" title="nablarch.common.web.session.SessionKeyNotFoundException">SessionKeyNotFoundException</a> ) is thrown,
transition to an arbitrary error page is possible by catching this exception.</p>
<p>The realization method is shown below.</p>
<dl class="docutils">
<dt>Transition to a common error page in the system</dt>
<dd><p class="first">When transitioning to a common error page in the system, catch the exception in the handler and specify the transition destination.</p>
<dl class="last docutils">
<dt>Implementation examples</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SampleErrorHandler</span> <span class="kd">implements</span> <span class="n">Handler</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="o">{</span>

  <span class="nd">@Override</span>
  <span class="kd">public</span> <span class="n">Object</span> <span class="nf">handle</span><span class="o">(</span><span class="n">Object</span> <span class="n">data</span><span class="o">,</span> <span class="n">ExecutionContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>

    <span class="k">try</span> <span class="o">{</span>
      <span class="k">return</span> <span class="n">context</span><span class="o">.</span><span class="na">handleNext</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">SessionKeyNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
      <span class="c1">// Catches the exception indicating that the session variable does not exist</span>
      <span class="c1">// and returns the error page indicating the incorrect screen transition</span>
      <span class="k">throw</span> <span class="k">new</span> <span class="n">HttpErrorResponse</span><span class="o">(</span><span class="n">HttpResponse</span><span class="o">.</span><span class="na">Status</span><span class="o">.</span><span class="na">BAD_REQUEST</span><span class="o">.</span><span class="na">getStatusCode</span><span class="o">(),</span>
              <span class="s">&quot;/WEB-INF/view/errors/BadTransition.jsp&quot;</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
    <span class="o">}</span>
  <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
</dl>
</dd>
<dt>Specify the transition destination for each request</dt>
<dd><p class="first">When switching the transition destination for each request, specify the transition destination using <a class="reference internal" href="../handlers/web_interceptor/on_error.html#on-error-interceptor"><span>OnError Interceptor</span></a>.
Note that the transition destination can be changed for only some of the requests by using it together with the transition to a common error page in the system mentioned above.</p>
<dl class="last docutils">
<dt>Implementation examples</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="c1">// Specify the transition destination for each request</span>
<span class="c1">// by specifying the exception indicating that the session variable does not exist</span>
<span class="c1">// in the target exception</span>
<span class="nd">@OnError</span><span class="o">(</span><span class="n">type</span> <span class="o">=</span> <span class="n">SessionKeyNotFoundException</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">path</span> <span class="o">=</span> <span class="s">&quot;redirect://error&quot;</span><span class="o">)</span>
<span class="kd">public</span> <span class="n">HttpResponse</span> <span class="nf">backToNew</span><span class="o">(</span><span class="n">HttpRequest</span> <span class="n">request</span><span class="o">,</span> <span class="n">ExecutionContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
  <span class="n">Project</span> <span class="n">project</span> <span class="o">=</span> <span class="n">SessionUtil</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="s">&quot;project&quot;</span><span class="o">);</span>
  <span class="c1">// Process is omitted</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
</dl>
</dd>
</dl>
</div>
</div>
<div class="section" id="expansion-example">
<h2><a class="toc-backref" href="#id22">7.17.5. Expansion example</a><a class="headerlink" href="#expansion-example" title="Permalink to this headline">¶</a></h2>
<div class="section" id="add-the-save-destination-of-session-variables">
<h3><a class="toc-backref" href="#id23">7.17.5.1. Add the save destination of session variables</a><a class="headerlink" href="#add-the-save-destination-of-session-variables" title="Permalink to this headline">¶</a></h3>
<p>The following steps are required to add the save destination for session variables.</p>
<ol class="arabic simple">
<li>Create a class by inheriting <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/web/session/SessionStore.html" title="nablarch.common.web.session.SessionStore">SessionStore</a> for supporting the save destination to be added.</li>
<li>Add the component definition of the created class to <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/web/session/SessionManager.html#setAvailableStores-java.util.List-" title="nablarch.common.web.session.SessionManager.setAvailableStores(java.util.List)">SessionManager.availableStores</a>.</li>
</ol>
</div>
</div>
<div class="section" id="features-and-selection-criteria-of-session-store">
<span id="session-store-future-of-store"></span><h2><a class="toc-backref" href="#id24">7.17.6. Features and selection criteria of session store</a><a class="headerlink" href="#features-and-selection-criteria-of-session-store" title="Permalink to this headline">¶</a></h2>
<p>The save destination of session variables that can be used by default is as follows.</p>
<dl class="docutils" id="session-store-db-store">
<dt>DB store</dt>
<dd><table class="first last docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name" colspan="2">Save destination:</th></tr>
<tr class="field-odd field"><td>&nbsp;</td><td class="field-body"><div class="first line-block">
<div class="line">Database table</div>
</div>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Features:</th><td class="field-body"><ul class="first last simple">
<li>Session variables can be restored even if the application server is stopped due to rolling maintenance.</li>
<li>Does not squeeze the heap area of the application server.</li>
<li>If the processing of the same session is executed by multiple threads, (the one written last takes precedence. (Data of previously saved session will be lost)</li>
</ul>
</td>
</tr>
</tbody>
</table>
</dd>
</dl>
<dl class="docutils" id="session-store-hidden-store">
<dt>HIDDEN store</dt>
<dd><table class="first last docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name" colspan="2">Save destination:</th></tr>
<tr class="field-odd field"><td>&nbsp;</td><td class="field-body"><div class="first line-block">
<div class="line">Client</div>
<div class="line">( implemented by passing session variables between screens using <cite>hidden</cite> tags)</div>
</div>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Features:</th><td class="field-body"><ul class="first last simple">
<li>Screen operations on multiple tabs are allowed.</li>
<li>Does not squeeze the heap area of the application server.</li>
<li>When the process of the same session is executed by multiple threads, the session data is stored in association with each thread.</li>
</ul>
</td>
</tr>
</tbody>
</table>
</dd>
</dl>
<dl class="docutils" id="session-store-http-session-store">
<dt>HTTP session store</dt>
<dd><table class="first last docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name" colspan="2">Save destination:</th></tr>
<tr class="field-odd field"><td>&nbsp;</td><td class="field-body"><div class="first line-block">
<div class="line">Application server heap area</div>
<div class="line">(depending on the application server configuration, it may be saved in a database or file.)</div>
</div>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Features:</th><td class="field-body"><ul class="first last simple">
<li>It is suitable for holding information such as credentials that are frequently used in the entire application.</li>
<li>Since information is maintained on a per AP server basis, ingenuity is required when performing scale-out.</li>
<li>Saving a large amount of data such as the input contents of the screen may burden the heap area.</li>
<li>If the processing of the same session is executed by multiple threads, it will written later. (Data of previously saved session will be lost)</li>
</ul>
</td>
</tr>
</tbody>
</table>
</dd>
</dl>
<p>Based on the above, the selection criteria for each session store are shown below.</p>
<table border="1" class="docutils">
<colgroup>
<col width="51%" />
<col width="49%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Application</th>
<th class="head">Session Store</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>Hold input information between input-confirm-complete screens (screen operations on multiple tabs not allowed)</td>
<td><a class="reference internal" href="#session-store-db-store"><span>DB store</span></a></td>
</tr>
<tr class="row-odd"><td>Hold input information between input-confirm-complete screens (screen operations on multiple tabs allowed)</td>
<td><a class="reference internal" href="#session-store-hidden-store"><span>HIDDEN store</span></a></td>
</tr>
<tr class="row-even"><td>Hold credentials</td>
<td><a class="reference internal" href="#session-store-db-store"><span>DB store</span></a> or <a class="reference internal" href="#session-store-http-session-store"><span>HTTP session store</span></a></td>
</tr>
<tr class="row-odd"><td>Hold the search conditions</td>
<td>Not used <a class="footnote-reference" href="#id6" id="id2">[1]</a></td>
</tr>
<tr class="row-even"><td>Hold the search results list</td>
<td>Not used <a class="footnote-reference" href="#id7" id="id3">[2]</a></td>
</tr>
<tr class="row-odd"><td>Hold screen display items such as select boxes</td>
<td>Not used <a class="footnote-reference" href="#id8" id="id4">[3]</a></td>
</tr>
<tr class="row-even"><td>Hold error message</td>
<td>Not used <a class="footnote-reference" href="#id8" id="id5">[3]</a></td>
</tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="id6" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id2">[1]</a></td><td>Except for credentials, the session store is not intended to hold data spanning multiple functions.
Design and implement the session store according to the requirements of the application, such as holding the URL in the local storage of the browser for search.</td></tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="id7" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id3">[2]</a></td><td>Large amounts of data such as list information may burden the storage area, so do not store it in the session store.</td></tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="id8" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label">[3]</td><td><em>(<a class="fn-backref" href="#id4">1</a>, <a class="fn-backref" href="#id5">2</a>)</em> Values used for screen display can be transferred using the request scope.</td></tr>
</tbody>
</table>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">As for <a class="reference internal" href="../../adaptors/lettuce_adaptor/redisstore_lettuce_adaptor.html#redisstore-lettuce-adaptor"><span>Redis Store (Lettus) Adapter</span></a>, its features are the same as the DB store, only the destination is different.</p>
</div>
</div>
<div class="section" id="how-to-manage-the-expiration-date">
<span id="session-store-expiration"></span><h2><a class="toc-backref" href="#id25">7.17.7. How to manage the expiration date</a><a class="headerlink" href="#how-to-manage-the-expiration-date" title="Permalink to this headline">¶</a></h2>
<p>Session expiration date is stored in an HTTP session by default.
You can store the session expiration date in the database by changing the setting.</p>
<p>See <a class="reference internal" href="../handlers/web/SessionStoreHandler.html#db-managed-expiration"><span>Save the expiration date in the database</span></a> for details.</p>
<p>Also, the expiration date can be stored in Redis if using <a class="reference internal" href="../../adaptors/lettuce_adaptor/redisstore_lettuce_adaptor.html#redisstore-lettuce-adaptor"><span>Redis Store (Lettus) Adapter</span></a>.</p>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">See <a class="reference internal" href="stateless_web_app.html#stateless-web-app"><span>Making Web Applications Stateless</span></a> for the significance of storing the expiration date in the database.</p>
</div>
</div>
</div>


           </div>
           <div class="articleComments">
            
           </div>
          </div>
          <footer>

    <hr/>

    <div role="contentinfo">
        <p>
            &copy; Copyright 2010-2021, TIS Inc.
        </p>
    </div>
    Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org">Read the Docs</a>.

</footer>

        </div>
      </div>

    </section>

  </div>
  


  

    <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'../../../',
            VERSION:'5u19',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true,
            SOURCELINK_SUFFIX: ''
        };
    </script>
      <script type="text/javascript" src="../../../_static/jquery.js"></script>
      <script type="text/javascript" src="../../../_static/underscore.js"></script>
      <script type="text/javascript" src="../../../_static/doctools.js"></script>
      <script type="text/javascript" src="../../../_static/custom.js"></script>

  

  
  
    <script type="text/javascript" src="../../../_static/js/theme.js"></script>
  

  
  
  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>
   

</body>
</html>