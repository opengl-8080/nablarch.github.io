


<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->
<head>
  <meta charset="utf-8">
  <meta http-equiv='content-language' content='ja'>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>7.10.2. Nablarch Validation &mdash; ∇Nablarch  5u19 documentation</title>
  

  
  
  
  

  

  
  
    

  

  
  
    <link rel="stylesheet" href="../../../../_static/custom.css" type="text/css" />
  

  

  
  <link rel="canonical" href="https://nablarch.github.io/docs/LATEST/doc/application_framework/application_framework/libraries/validation/nablarch_validation.html" />
  
    <link rel="top" title="∇Nablarch  5u19 documentation" href="../../../../index.html"/>
        <link rel="up" title="7.10. Input Value Check" href="../validation.html"/>
        <link rel="next" title="7.10.3. Comparison of Function between Bean Validation and Nablarch Validation" href="functional_comparison.html"/>
        <link rel="prev" title="7.10.1. Bean Validation" href="bean_validation.html"/>
 

  
  <script src="../../../../_static/js/modernizr.min.js"></script>

</head>

<body class="wy-body-for-nav" role="document">

   
  <div class="wy-grid-for-nav">

    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search">
          
  
  <a href="../../../../index.html" id="sidebar-title" class="icon"> ∇Nablarch 
  

  
    <div id="sidebar-version">Version: 5u19</div>
  </a>

  <div role="search">
    <form id="google-search-form" class="wy-form" method="get" action="https://www.google.co.jp/search">
      <input type="text" name="text" placeholder="Search docs on google" id="text"/>
      <input type="hidden" name="q" id="q"/>
    </form>
  </div>
    
    

        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
  
  
    <ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../../../about_nablarch/index.html">What is the Nablarch?</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../about_nablarch/concept.html">Nablarch Concept</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../about_nablarch/concept.html#robustness">Robustness</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../about_nablarch/concept.html#testability">Testability</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../about_nablarch/concept.html#ready-to-use">Ready-to-Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../about_nablarch/mvn_module.html">Module List of Nablarch</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../about_nablarch/license.html">Information on Nablarch License</a></li>
</ul>
</li>
<li class="toctree-l1 current"><a class="reference internal" href="../../../index.html">Nablarch Application Framework</a><ul class="current">
<li class="toctree-l2 current"><a class="reference internal" href="../../index.html">Application Framework</a><ul class="current">
<li class="toctree-l3"><a class="reference internal" href="../../nablarch/index.html">1. What is Nablarch Application Framework?</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../web/index.html">2. Web Application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../web_service/index.html">3. Web Service</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../batch/index.html">4. Batch Application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../messaging/index.html">5. Messaging</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../handlers/index.html">6. Standard Handler Provided by Nablarch</a></li>
<li class="toctree-l3 current"><a class="reference internal" href="../index.html">7. Libraries Provided by Nablarch</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../blank_project/index.html">8. Blank Project</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../setting_guide/index.html">9. Nablarch Application Framework Configuration Guide</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../configuration/index.html">10. Default Configuration List</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../cloud_native/index.html">11. Nablarch Cloud Native Support</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../adaptors/index.html">Adaptor</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/log_adaptor.html">log Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/router_adaptor.html">Routing Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/webspheremq_adaptor.html">IBM WebSphere MQ Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/jaxrs_adaptor.html">JAX-RS Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/doma_adaptor.html">Doma Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/jsr310_adaptor.html">JSR310(Date and Time API)Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/mail_sender_freemarker_adaptor.html">E-mail FreeMarker Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/mail_sender_thymeleaf_adaptor.html">E-mail Thymeleaf Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/mail_sender_velocity_adaptor.html">E-mail Velocity Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/web_thymeleaf_adaptor.html">Web Application Thymeleaf Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/lettuce_adaptor.html">Lettuce Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/slf4j_adaptor.html">SLF4J Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/micrometer_adaptor.html">Micrometer Adapter</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../example/index.html">Example</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../example/index.html#procedure-to-build-the-environment">Procedure to build the environment</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../example/index.html#application-execution-procedure">Application execution procedure</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../extension_components/index.html">Nablarch extension component</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/report/index.html">1. Form library</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/workflow/doc/index.html">2. Workflow library</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/workflow/tool/index.html">3. Workflow definition data generation tool</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/etl/index.html">4. ETL</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/etl/etl_maven_plugin.html">5. ETL Maven plugin</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../development_tools/index.html">Nablarch development tools</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html">1. Efficient Java Static Checks</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html#conduct-syntax-check">1.1. Conduct syntax check</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html#unify-the-format">1.2. Unify the format</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html#check-if-unauthorized-apis-are-being-used">1.3. Check if unauthorized APIs are being used</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/ui_dev/index.html">2. Front-end UI development platform for advanced users</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/testing_framework/index.html">3. Testing framework</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/testing_framework/guide/development_guide/05_UnitTestGuide/index.html">3.1. How to Execute Unit Tests</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/testing_framework/guide/development_guide/06_TestFWGuide/index.html">3.2. How to Use the Automated Test Framework</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/testing_framework/guide/development_guide/08_TestTools/index.html">3.3. Tools Used in the Programming Phase</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/toolbox/index.html">4. Useful Tools When Developing Applications</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/toolbox/JspStaticAnalysis/index.html">4.1. JSP Static Analysis Tool</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/toolbox/SqlExecutor/SqlExecutor.html">4.2. Nablarch SQL Executor</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/toolbox/JspVerifier/JspVerifier.html">4.3. Job Screen JSP Validation Tool</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../examples/index.html">Nablarch Implementation Examples</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/01/index.html">Sample Password Encryption Function Using Database</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/0101_PBKDF2PasswordEncryptor.html">Sample Password Encryption Function Using PBKDF2</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/02/index.html">Extended Validation Functions</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#email-address-validation">Email address validation</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#validation-of-japan-telephone-numbers">Validation of Japan telephone numbers</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#code-value-validation">Code value validation</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/03/index.html">Display a List of Search Results</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#how-to-use">How to Use</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchinfo-class">ListSearchInfo class</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchresult-tag">listSearchResult tag</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#sort-search-results">Sort search results</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#how-to-implement-displaying-a-list-of-all-search-results-on-a-single-screen">How to implement displaying a list of all search results on a single screen</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#how-to-implement-the-initial-display-of-search-results-with-the-default-search-conditions">How to implement the initial display of search results with the default search conditions</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#default-settings-for-the-search-result-list-display-function">Default settings for the search result list display function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#how-to-import-a-sample-implementation-tag-file-into-the-business-application">How to import a sample implementation (tag file) into the business application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#tag-reference">Tag Reference</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/04/index.html">Extended Formatter Functions</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/04/0401_ExtendedDataFormatter.html">Data Formatter Expansion</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/04/0402_ExtendedFieldType.html">Field Type Expansion in the Data Formatter Function</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/05/index.html">Sample File Management Function Using Database</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#functions">Functions</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/06/index.html">CAPTCHA Function Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/06_Captcha_guide.html">How to Incorporate the CAPTCHA Function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/07/index.html">Sample UserAgent Information Acquisition Function</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#description-of-configuration">Description of configuration</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#use-case">Use case</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/08/index.html">Sample of HTML Email Send Function</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#request">Request</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#implementation-examples">Implementation examples</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/09/index.html">How to Use a Sample to Send a Digitally Signed Email Using Bouncycastle</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#environment-preparation">Environment preparation</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#structure-of-digitally-signed-email-send-function">Structure of digitally signed email send function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#preparation-of-configuration-file">Preparation of configuration file</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#execution">Execution</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/10/index.html">How to Use the Log Aggregation Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/10/index.html#list-of-samples-provided">List of samples provided</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/11/index.html">Messaging Platform Test Simulator Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#uses">Uses</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#features">Features</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#request">Request</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#how-to-use">How to use</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#expansion-example">Expansion example</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../nablarch_api/index.html">Nablarch API</a></li>
</ul>

  

        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" role="navigation" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../../../../index.html">∇Nablarch </a>
        
      </nav>


      
      <div class="wy-nav-content">
        <div class="rst-content">
          

 



<div role="navigation" aria-label="breadcrumbs navigation">
  <ul class="wy-breadcrumbs">
    <li><a href="../../../../index.html">Docs</a> &raquo;</li>
      
          <li><a href="../../../index.html">Nablarch Application Framework</a> &raquo;</li>
      
          <li><a href="../../index.html">Application Framework</a> &raquo;</li>
      
          <li><a href="../index.html">7. Libraries Provided by Nablarch</a> &raquo;</li>
      
          <li><a href="../validation.html">7.10. Input Value Check</a> &raquo;</li>
      
    <li>7.10.2. Nablarch Validation</li>
    <li class="wy-breadcrumbs-aside">
      <a href="https://github.com/nablarch" class="fa fa-github">GitHub</a>
    </li>
    <li class="wy-breadcrumbs-aside">
        <a href="https://nablarch.github.io/docs/LATEST/doc/index.html" class="ja">日本語</a>
    </li>
  </ul>
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  <div class="section" id="nablarch-validation">
<span id="id1"></span><h1>7.10.2. Nablarch Validation<a class="headerlink" href="#nablarch-validation" title="Permalink to this headline">¶</a></h1>
<div class="contents local topic" id="table-of-contents">
<p class="topic-title first">Table of contents</p>
<ul class="simple">
<li><a class="reference internal" href="#function-overview" id="id2">Function overview</a><ul>
<li><a class="reference internal" href="#can-perform-validation-and-type-conversion-and-normalization-of-values" id="id3">Can Perform Validation and Type Conversion and Normalization of Values</a></li>
<li><a class="reference internal" href="#can-validate-domains" id="id4">Can validate domains</a></li>
<li><a class="reference internal" href="#commonly-used-validators-and-convertors-are-provided" id="id5">Commonly Used Validators and Convertors are Provided</a></li>
</ul>
</li>
<li><a class="reference internal" href="#module-list" id="id6">Module list</a></li>
<li><a class="reference internal" href="#how-to-use" id="id7">How to use</a><ul>
<li><a class="reference internal" href="#configuring-validators-and-convertors-for-use" id="id8">Configuring Validators and Convertors for Use</a></li>
<li><a class="reference internal" href="#configure-validation-rules" id="id9">Configure validation rules</a></li>
<li><a class="reference internal" href="#use-domain-validation" id="id10">Use domain validation</a></li>
<li><a class="reference internal" href="#inheriting-the-bean-for-validation" id="id11">Inheriting the Bean for Validation</a></li>
<li><a class="reference internal" href="#executing-validation" id="id12">Executing Validation</a></li>
<li><a class="reference internal" href="#performing-explicit-execution-of-validation" id="id13">Performing Explicit Execution of Validation</a></li>
<li><a class="reference internal" href="#performing-character-type-validation" id="id14">Performing Character Type Validation</a></li>
<li><a class="reference internal" href="#performing-correlation-validation" id="id15">Performing Correlation Validation</a></li>
<li><a class="reference internal" href="#performing-validation-using-a-function-that-takes-bean-array-as-the-input-such-as-batch-registration" id="id16">Performing validation using a function that takes Bean array as the input, such as batch registration</a></li>
<li><a class="reference internal" href="#changing-validation-items-based-on-the-selected-value-of-the-radio-button-and-list-box" id="id17">Changing validation items based on the selected value of the radio button and list box</a></li>
<li><a class="reference internal" href="#to-create-a-validation-error-message-linked-to-a-specific-item" id="id18">To create a validation error message linked to a specific item</a></li>
<li><a class="reference internal" href="#to-embed-the-item-name-in-the-message-when-a-validation-error-occurs" id="id19">To embed the item name in the message when a validation error occurs</a></li>
<li><a class="reference internal" href="#performing-type-conversion-to-numeric-type" id="id20">Performing Type Conversion to Numeric Type</a></li>
<li><a class="reference internal" href="#performing-correlation-validation-with-the-database" id="id21">Performing Correlation Validation with the Database</a></li>
<li><a class="reference internal" href="#checking-user-input-values-for-web-applications" id="id22">Checking User Input Values for Web Applications</a></li>
</ul>
</li>
<li><a class="reference internal" href="#expansion-example" id="id23">Expansion example</a><ul>
<li><a class="reference internal" href="#to-add-a-project-specific-validator" id="id24">To add a project-specific validator</a></li>
<li><a class="reference internal" href="#to-add-a-project-specific-convertor" id="id25">To add a project-specific convertor</a></li>
<li><a class="reference internal" href="#to-change-the-method-of-generating-a-bean-object-for-validation" id="id26">To change the method of generating a Bean object for validation</a></li>
</ul>
</li>
</ul>
</div>
<p>This chapter explains the validation function originally implemented by Nablarch.</p>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">As described in <a class="reference internal" href="../validation.html#validation"><span>Input Value Check</span></a>, it is recommended to use <a class="reference internal" href="bean_validation.html"><em>Bean Validation</em></a>.</p>
</div>
<div class="section" id="function-overview">
<h2><a class="toc-backref" href="#id2">7.10.2.1. Function overview</a><a class="headerlink" href="#function-overview" title="Permalink to this headline">¶</a></h2>
<div class="section" id="can-perform-validation-and-type-conversion-and-normalization-of-values">
<h3><a class="toc-backref" href="#id3">7.10.2.1.1. Can Perform Validation and Type Conversion and Normalization of Values</a><a class="headerlink" href="#can-perform-validation-and-type-conversion-and-normalization-of-values" title="Permalink to this headline">¶</a></h3>
<p>Nablarch validation can perform validation, and type conversion and normalization of input values.</p>
<p>Since it can perform type conversion, the input values can be directly mapped to the numeric type (Integer or Long) of the Bean class.
In addition, editing cancellation (normalization) of edited values can also be performed during type conversion.</p>
<p>For details, see <a class="reference internal" href="#nablarch-validation-definition-validator-convertor"><span>Configuring Validators and Convertors for Use</span></a>.</p>
</div>
<div class="section" id="can-validate-domains">
<h3><a class="toc-backref" href="#id4">7.10.2.1.2. Can validate domains</a><a class="headerlink" href="#can-validate-domains" title="Permalink to this headline">¶</a></h3>
<p>Validation rules can be defined for each domain.</p>
<p>When using domain validation, it is only necessary to specify the domain name in the Bean class setter, which makes changing the validation rules easy.</p>
<p>For details, see <a class="reference internal" href="#use-domain-validation">Use domain validation</a>.</p>
</div>
<div class="section" id="commonly-used-validators-and-convertors-are-provided">
<span id="nablarch-validation-validator-convertor"></span><h3><a class="toc-backref" href="#id5">7.10.2.1.3. Commonly Used Validators and Convertors are Provided</a><a class="headerlink" href="#commonly-used-validators-and-convertors-are-provided" title="Permalink to this headline">¶</a></h3>
<p>Nablarch provides commonly used validators and convertors as standard.
For this reason, validation can be executed in the project only using <a class="reference internal" href="#nablarch-validation-definition-validator-convertor"><span>Configuring Validators and Convertors for Use</span></a>.</p>
<p>See the following links for validators and convertors provided by Nablarch.</p>
<ul class="simple">
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/validator/package-summary.html" title="nablarch.core.validation.validator.package-summary">nablarch.core.validation.validator</a></li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/convertor/package-summary.html" title="nablarch.core.validation.convertor.package-summary">nablarch.core.validation.convertor</a></li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/date/package-summary.html" title="nablarch.common.date.package-summary">nablarch.common.date</a></li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/code/validator/package-summary.html" title="nablarch.common.code.validator.package-summary">nablarch.common.code.validator</a></li>
</ul>
</div>
</div>
<div class="section" id="module-list">
<span id="nablarch-validation-module-list"></span><h2><a class="toc-backref" href="#id6">7.10.2.2. Module list</a><a class="headerlink" href="#module-list" title="Permalink to this headline">¶</a></h2>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>com.nablarch.framework<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>nablarch-core-validation<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>

<span class="c">&lt;!-- Only when date validator and converter are used --&gt;</span>
<span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>com.nablarch.framework<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>nablarch-common-date<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>

<span class="c">&lt;!-- Only when code value validator and converter are used --&gt;</span>
<span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>com.nablarch.framework<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>nablarch-common-code<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</pre></div>
</div>
</div>
<div class="section" id="how-to-use">
<h2><a class="toc-backref" href="#id7">7.10.2.3. How to use</a><a class="headerlink" href="#how-to-use" title="Permalink to this headline">¶</a></h2>
<div class="section" id="configuring-validators-and-convertors-for-use">
<span id="nablarch-validation-definition-validator-convertor"></span><h3><a class="toc-backref" href="#id8">7.10.2.3.1. Configuring Validators and Convertors for Use</a><a class="headerlink" href="#configuring-validators-and-convertors-for-use" title="Permalink to this headline">¶</a></h3>
<p>To enable validation, it is essential to register the validators and convertors being used in the component configuration file.</p>
<p>For the validators and convertors provided by Nablarch, see <a class="reference internal" href="#nablarch-validation-validator-convertor"><span>Commonly Used Validators and Convertors are Provided</span></a>.</p>
<div class="admonition important">
<p class="first admonition-title">Important</p>
<p class="last">If the validators and convertors are not configured, the validation function cannot be used.</p>
</div>
<dl class="docutils">
<dt>Configuration example</dt>
<dd><ul class="first simple">
<li>Define <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ValidationManager.html" title="nablarch.core.validation.ValidationManager">ValidationManager</a> as a component named <strong>validationManager</strong>.</li>
<li>List the converters used for <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ValidationManager.html#setConvertors-java.util.List-" title="nablarch.core.validation.ValidationManager.setConvertors(java.util.List)">ValidationManager#convertors</a>.</li>
<li>List the validators used for <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ValidationManager.html#setValidators-java.util.List-" title="nablarch.core.validation.ValidationManager.setValidators(java.util.List)">ValidationManager#validators</a>.</li>
</ul>
<div class="last highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;validationManager&quot;</span> <span class="na">class=</span><span class="s">&quot;nablarch.core.validation.ValidationManager&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;convertors&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;list&gt;</span>
      <span class="c">&lt;!-- List the convertors used here --&gt;</span>
    <span class="nt">&lt;/list&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;validators&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;list&gt;</span>
      <span class="c">&lt;!-- List the validators used here--&gt;</span>
    <span class="nt">&lt;/list&gt;</span>
  <span class="nt">&lt;/property&gt;</span>

  <span class="c">&lt;!--</span>
<span class="c">  Other attributes omitted</span>
<span class="c">  For details, see Javadoc of ValidationManager</span>
<span class="c">   --&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
</dd>
</dl>
</div>
<div class="section" id="configure-validation-rules">
<h3><a class="toc-backref" href="#id9">7.10.2.3.2. Configure validation rules</a><a class="headerlink" href="#configure-validation-rules" title="Permalink to this headline">¶</a></h3>
<p>Configure the annotations of validation rules in the properties (setter) of Bean class for validation.
Also, note that annotations cannot be specified for a getter.(It is meaningless even if specified.)</p>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">If annotations are configured individually, errors during implementation and maintenance costs will increase.
Hence, it is recommended to use the <a class="reference internal" href="#nablarch-validation-domain-validation"><span>domain validation</span></a> described below.</p>
</div>
<dl class="docutils">
<dt>Implementation examples</dt>
<dd><p class="first">Configure annotations by referring to the <a class="reference internal" href="#nablarch-validation-validator-convertor"><span>validators and convertors provided by Nablarch</span></a>.</p>
<p>In this example, inputting the <cite>userName</cite> is required, and a maximum of 10 full-width characters are permitted.
For <cite>birthday</cite>, 8 half-width digits are permitted.
For <cite>age</cite>, up to 3 integer digits are permitted.</p>
<div class="last highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SampleForm</span> <span class="o">{</span>

  <span class="nd">@Length</span><span class="o">(</span><span class="n">max</span> <span class="o">=</span> <span class="mi">10</span><span class="o">)</span>
  <span class="nd">@SystemChar</span><span class="o">(</span><span class="n">charsetDef</span> <span class="o">=</span> <span class="s">&quot;Full-width character&quot;</span><span class="o">)</span>
  <span class="nd">@Required</span>
  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setUserName</span><span class="o">(</span><span class="n">String</span> <span class="n">userName</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">userName</span> <span class="o">=</span> <span class="n">userName</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="nd">@Length</span><span class="o">(</span><span class="n">min</span> <span class="o">=</span> <span class="mi">8</span><span class="o">,</span> <span class="n">max</span> <span class="o">=</span> <span class="mi">8</span><span class="o">)</span>
  <span class="nd">@SystemChar</span><span class="o">(</span><span class="n">charsetDef</span> <span class="o">=</span> <span class="s">&quot;Half-width character&quot;</span><span class="o">)</span>
  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setBirthday</span><span class="o">(</span><span class="n">String</span> <span class="n">birthday</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">birthday</span> <span class="o">=</span> <span class="n">birthday</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="nd">@Digits</span><span class="o">(</span><span class="n">integer</span> <span class="o">=</span> <span class="mi">3</span><span class="o">)</span>
  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setAge</span><span class="o">(</span><span class="n">Integer</span> <span class="n">age</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">age</span> <span class="o">=</span> <span class="n">age</span><span class="o">;</span>
  <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
</dl>
</div>
<div class="section" id="use-domain-validation">
<span id="nablarch-validation-domain-validation"></span><h3><a class="toc-backref" href="#id10">7.10.2.3.3. Use domain validation</a><a class="headerlink" href="#use-domain-validation" title="Permalink to this headline">¶</a></h3>
<p>Show the configuration and implementation examples to use domain validation.</p>
<dl class="docutils">
<dt>Creating Enum that defines the validation rules for each domain</dt>
<dd><p class="first">To use domain validation, first create an Enum (domain Enum) with validation rules for each domain.
This Enum must implement the <cite>DomainDefinition</cite> interface.</p>
<p>Each enumerator of the Enum will become a domain name. In the following example, two domains, <code class="docutils literal"><span class="pre">NAME</span></code> and <code class="docutils literal"><span class="pre">DATE</span></code> have been defined.</p>
<div class="last highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">enum</span> <span class="n">SampleDomain</span> <span class="kd">implements</span> <span class="n">DomainDefinition</span> <span class="o">{</span>

    <span class="nd">@Length</span><span class="o">(</span><span class="n">max</span> <span class="o">=</span> <span class="mi">10</span><span class="o">)</span>
    <span class="nd">@SystemChar</span><span class="o">(</span><span class="n">charsetDef</span> <span class="o">=</span> <span class="s">&quot;Full-width character&quot;</span><span class="o">)</span>
    <span class="n">NAME</span><span class="o">,</span>

    <span class="nd">@Length</span><span class="o">(</span><span class="n">min</span> <span class="o">=</span> <span class="mi">8</span><span class="o">,</span> <span class="n">max</span> <span class="o">=</span> <span class="mi">8</span><span class="o">)</span>
    <span class="nd">@SystemChar</span><span class="o">(</span><span class="n">charsetDef</span> <span class="o">=</span> <span class="s">&quot;Half-width character&quot;</span><span class="o">)</span>
    <span class="n">DATE</span><span class="o">;</span>

    <span class="c1">// Implementation of the method defined in the interface</span>
    <span class="c1">// Implementation contents should be exactly the same as this example</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="n">Annotation</span> <span class="nf">getConvertorAnnotation</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">DomainValidationHelper</span><span class="o">.</span><span class="na">getConvertorAnnotation</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Annotation</span><span class="o">&gt;</span> <span class="nf">getValidatorAnnotations</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">DomainValidationHelper</span><span class="o">.</span><span class="na">getValidatorAnnotations</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
<dt>Creating an annotation that represents a domain</dt>
<dd><p class="first">Create an annotation that represents the domain.
The domain Enum created above can be specified in the <cite>value</cite> attribute.</p>
<div class="last highlight-java"><div class="highlight"><pre><span></span><span class="nd">@ConversionFormat</span>
<span class="nd">@Validation</span>
<span class="nd">@Target</span><span class="o">(</span><span class="n">ElementType</span><span class="o">.</span><span class="na">METHOD</span><span class="o">)</span>
<span class="nd">@Retention</span><span class="o">(</span><span class="n">RetentionPolicy</span><span class="o">.</span><span class="na">RUNTIME</span><span class="o">)</span>
<span class="kd">public</span> <span class="nd">@interface</span> <span class="n">Domain</span> <span class="o">{</span>
    <span class="n">SampleDomain</span> <span class="nf">value</span><span class="o">();</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
<dt>Configure Domain in the Bean for Validation</dt>
<dd><p class="first">Domain validation is performed by setting the annotations representing the domain created above.</p>
<p>In this example, the validation configured in <cite>SampleDomain.NAME</cite> is executed for <cite>userName</cite>.
※When a convertor is configured, the value is also converted by the convertor.</p>
<div class="last highlight-java"><div class="highlight"><pre><span></span><span class="nd">@Domain</span><span class="o">(</span><span class="n">SampleDomain</span><span class="o">.</span><span class="na">NAME</span><span class="o">)</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setUserName</span><span class="o">(</span><span class="n">String</span> <span class="n">userName</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">this</span><span class="o">.</span><span class="na">userName</span> <span class="o">=</span> <span class="n">userName</span><span class="o">;</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
<dt>Configuration to enable domain validation</dt>
<dd><p class="first">The following configurations are required to enable domain validation.</p>
<ul class="simple">
<li>Configuration of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/domain/DomainValidationHelper.html" title="nablarch.core.validation.domain.DomainValidationHelper">DomainValidationHelper</a></li>
<li>Configuration of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/domain/DomainValidator.html" title="nablarch.core.validation.domain.DomainValidator">DomainValidator</a></li>
<li>Configuration of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ValidationManager.html" title="nablarch.core.validation.ValidationManager">ValidationManager</a></li>
<li>Configuration of initialization component</li>
</ul>
<p>An example is shown below.</p>
<dl class="last docutils">
<dt>Configuration of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/domain/DomainValidationHelper.html" title="nablarch.core.validation.domain.DomainValidationHelper">DomainValidationHelper</a></dt>
<dd><ul class="first simple">
<li>Configure the fully qualified class name (FQCN) of the annotations representing the domain to
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/domain/DomainValidationHelper.html#setDomainAnnotation-java.lang.String-" title="nablarch.core.validation.domain.DomainValidationHelper.setDomainAnnotation(java.lang.String)">domainAnnotation property</a>.</li>
</ul>
<div class="last highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;domainValidationHelper&quot;</span>
    <span class="na">class=</span><span class="s">&quot;nablarch.core.validation.domain.DomainValidationHelper&quot;</span><span class="nt">&gt;</span>

  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;domainAnnotation&quot;</span> <span class="na">value=</span><span class="s">&quot;sample.Domain&quot;</span> <span class="nt">/&gt;</span>

<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
</dd>
<dt>Configuration of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/domain/DomainValidator.html" title="nablarch.core.validation.domain.DomainValidator">DomainValidator</a></dt>
<dd><ul class="first simple">
<li>Configure <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/domain/DomainValidationHelper.html" title="nablarch.core.validation.domain.DomainValidationHelper">DomainValidationHelper</a> that has been configured above
to <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/domain/DomainValidator.html#setDomainValidationHelper-nablarch.core.validation.domain.DomainValidationHelper-" title="nablarch.core.validation.domain.DomainValidator.setDomainValidationHelper(nablarch.core.validation.domain.DomainValidationHelper)">domainValidationHelper property</a>.</li>
<li>Configure the validators list to
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/domain/DomainValidator.html#setValidators-java.util.List-" title="nablarch.core.validation.domain.DomainValidator.setValidators(java.util.List)">validators property</a>.</li>
</ul>
<div class="last highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;domainValidator&quot;</span>
    <span class="na">class=</span><span class="s">&quot;nablarch.core.validation.domain.DomainValidator&quot;</span><span class="nt">&gt;</span>

  <span class="c">&lt;!--</span>
<span class="c">    DomainValidator should not be configured here. If configured, it will become a circular reference,</span>
<span class="c">    and an error occurs during system repository initialization.</span>
<span class="c">  --&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;validators&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;list&gt;</span>
      <span class="nt">&lt;component-ref</span> <span class="na">name=</span><span class="s">&quot;requiredValidator&quot;</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/list&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;domainValidationHelper&quot;</span> <span class="na">ref=</span><span class="s">&quot;domainValidationHelper&quot;</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
</dd>
<dt>Configuration of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ValidationManager.html" title="nablarch.core.validation.ValidationManager">ValidationManager</a></dt>
<dd><ul class="first simple">
<li>Configure <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/domain/DomainValidationHelper.html" title="nablarch.core.validation.domain.DomainValidationHelper">DomainValidationHelper</a> that has been configured above
to <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ValidationManager.html#setDomainValidationHelper-nablarch.core.validation.domain.DomainValidationHelper-" title="nablarch.core.validation.ValidationManager.setDomainValidationHelper(nablarch.core.validation.domain.DomainValidationHelper)">domainValidationHelper property</a>.</li>
<li>Configure the validators list (without missing out <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/domain/DomainValidator.html" title="nablarch.core.validation.domain.DomainValidator">DomainValidator</a> that has been configured above)
to <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ValidationManager.html#setValidators-java.util.List-" title="nablarch.core.validation.ValidationManager.setValidators(java.util.List)">validators property</a>.</li>
</ul>
<div class="last highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;validationManager&quot;</span> <span class="na">class=</span><span class="s">&quot;nablarch.core.validation.ValidationManager&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;validators&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;list&gt;</span>
      <span class="nt">&lt;component-ref</span> <span class="na">name=</span><span class="s">&quot;domainValidator&quot;</span> <span class="nt">/&gt;</span>
      <span class="c">&lt;!-- Description of other validators is omitted --&gt;</span>
    <span class="nt">&lt;/list&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;domainValidationHelper&quot;</span> <span class="na">ref=</span><span class="s">&quot;domainValidationHelper&quot;</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
</dd>
<dt>Configuration of initialization component</dt>
<dd><p class="first">Configure <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/domain/DomainValidator.html" title="nablarch.core.validation.domain.DomainValidator">DomainValidator</a>
and <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ValidationManager.html" title="nablarch.core.validation.ValidationManager">ValidationManager</a> that have been configured above to the initialization list.</p>
<div class="last highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;initializer&quot;</span>
    <span class="na">class=</span><span class="s">&quot;nablarch.core.repository.initialization.BasicApplicationInitializer&quot;</span><span class="nt">&gt;</span>

  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;initializeList&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;list&gt;</span>
      <span class="nt">&lt;component-ref</span> <span class="na">name=</span><span class="s">&quot;validationManager&quot;</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;component-ref</span> <span class="na">name=</span><span class="s">&quot;domainValidator&quot;</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/list&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
</dd>
</dl>
</dd>
<dt>Behavior when Multiple Validation Rules are Configured for Domain Validation</dt>
<dd><p class="first">If multiple errors are found in one input item in the domain validation, terminate scrutiny at the first error.</p>
<div class="highlight-java"><div class="highlight"><pre><span></span> <span class="kd">public</span> <span class="kd">enum</span> <span class="n">SampleDomain</span> <span class="kd">implements</span> <span class="n">DomainDefinition</span> <span class="o">{</span>
   <span class="nd">@Length</span><span class="o">(</span><span class="n">max</span> <span class="o">=</span> <span class="mi">10</span><span class="o">)</span>
   <span class="nd">@SystemChar</span><span class="o">(</span><span class="n">charsetDef</span> <span class="o">=</span> <span class="s">&quot;Full-width character&quot;</span><span class="o">)</span>
   <span class="n">NAME</span><span class="o">;</span>
<span class="o">}</span>
</pre></div>
</div>
<p class="last">The <cite>NAME</cite> mentioned above does not perform <cite>SystemChar</cite> validation when a <cite>Length</cite> validation error occurs.</p>
</dd>
</dl>
</div>
<div class="section" id="inheriting-the-bean-for-validation">
<h3><a class="toc-backref" href="#id11">7.10.2.3.4. Inheriting the Bean for Validation</a><a class="headerlink" href="#inheriting-the-bean-for-validation" title="Permalink to this headline">¶</a></h3>
<p>The Bean for validation can be inherited, but inheritance is not recommended for the following reasons.</p>
<p>When inheritance is performed easily, unexpected validation will be executed due to a change in the parent class,
and annotation configuration must be performed while being aware of complex validation overwrite rules, which causes errors (bugs).</p>
<p>The following actions take place when Bean is inherited:</p>
<ul class="simple">
<li>When only <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/PropertyName.html" title="nablarch.core.validation.PropertyName">&#64;PropertyName</a> is added in the subclass, the validators and convertors of the parent class are used.</li>
<li>If even one validator annotation is added in the subclass,
the validator annotation of the parent class is ignored and validators of the subclass will be used. The convertors of the parent class will be used.</li>
<li>If even one convertor annotation is added in the subclass,
the convertor annotation of the parent class is ignored and convertors of the subclass will be used. The validators of the parent class will be used.</li>
<li>If both the validators and the convertors are configured in the subclass, all configurations of the subclass will be used.</li>
<li>The configurations of convertors in the parent class cannot be deleted in the subclass.</li>
</ul>
<p>In the case of the following parent-child Bean, the validation of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/convertor/Digits.html" title="nablarch.core.validation.convertor.Digits">&#64;Digits</a>
and <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/validator/NumberRange.html" title="nablarch.core.validation.validator.NumberRange">&#64;NumberRange</a> is executed for the value property of ChildForm.</p>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="c1">// Parent Form</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ParentForm</span> <span class="o">{</span>
  <span class="nd">@Digits</span><span class="o">(</span><span class="n">integer</span><span class="o">=</span><span class="mi">5</span><span class="o">,</span> <span class="n">fraction</span><span class="o">=</span><span class="mi">3</span><span class="o">)</span>
  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setValue</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">value</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
  <span class="o">}</span>
<span class="o">}</span>

<span class="c1">// Child Form</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ChildForm</span> <span class="kd">extends</span> <span class="n">ParentForm</span> <span class="o">{</span>
  <span class="nd">@Override</span>
  <span class="nd">@NumberRange</span><span class="o">(</span><span class="n">min</span><span class="o">=</span><span class="mf">100.0</span><span class="o">,</span> <span class="n">max</span><span class="o">=</span><span class="mf">20000.0</span><span class="o">)</span>
  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setValue</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>
      <span class="kd">super</span><span class="o">.</span><span class="na">setBdValue</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
  <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
</div>
<div class="section" id="executing-validation">
<span id="nablarch-validation-execute"></span><h3><a class="toc-backref" href="#id12">7.10.2.3.5. Executing Validation</a><a class="headerlink" href="#executing-validation" title="Permalink to this headline">¶</a></h3>
<p>Validation can be executed by calling the method provided by <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ValidationUtil.html" title="nablarch.core.validation.ValidationUtil">ValidationUtil</a>.</p>
<dl class="docutils">
<dt>Implementation examples</dt>
<dd><p class="first">First, implement a constructor that takes Map as an argument in the Bean for validation to generate a Bean object from the input value.</p>
<p>Next, implement a static method for performing validation in the Bean for validation.
In this method, configure the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ValidateFor.html" title="nablarch.core.validation.ValidateFor">&#64;ValidateFor</a> annotation, and specify an arbitrary value for identifying validation in the argument.</p>
<p>The validation is executed using <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ValidationUtil.html" title="nablarch.core.validation.ValidationUtil">ValidationUtil</a> for the processing required for this method.</p>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SampleForm</span> <span class="o">{</span>

  <span class="kd">public</span> <span class="nf">SampleForm</span><span class="o">(</span><span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">params</span><span class="o">)</span> <span class="o">{</span>
      <span class="n">userName</span> <span class="o">=</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span> <span class="n">params</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;userName&quot;</span><span class="o">);</span>
      <span class="n">birthDay</span> <span class="o">=</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span> <span class="n">params</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;birthDay&quot;</span><span class="o">);</span>
      <span class="n">age</span> <span class="o">=</span> <span class="o">(</span><span class="n">Integer</span><span class="o">)</span> <span class="n">params</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;age&quot;</span><span class="o">);</span>
  <span class="o">}</span>

  <span class="nd">@Domain</span><span class="o">(</span><span class="n">SampleDomain</span><span class="o">.</span><span class="na">NAME</span><span class="o">)</span>
  <span class="nd">@Required</span>
  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setUserName</span><span class="o">(</span><span class="n">String</span> <span class="n">userName</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">userName</span> <span class="o">=</span> <span class="n">userName</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="nd">@Domain</span><span class="o">(</span><span class="n">SampleDomain</span><span class="o">.</span><span class="na">DATE</span><span class="o">)</span>
  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setBirthday</span><span class="o">(</span><span class="n">String</span> <span class="n">birthday</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">birthday</span> <span class="o">=</span> <span class="n">birthday</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="nd">@Domain</span><span class="o">(</span><span class="n">SampleDomain</span><span class="o">.</span><span class="na">AGE</span><span class="o">)</span>
  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setAge</span><span class="o">(</span><span class="n">Integer</span> <span class="n">age</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">age</span> <span class="o">=</span> <span class="n">age</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="nd">@ValidateFor</span><span class="o">(</span><span class="s">&quot;validate&quot;</span><span class="o">)</span>
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">validate</span><span class="o">(</span><span class="n">ValidationContext</span><span class="o">&lt;</span><span class="n">SampleForm</span><span class="o">&gt;</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
    <span class="c1">// Validate userName, birthday and age</span>
    <span class="n">ValidationUtil</span><span class="o">.</span><span class="na">validate</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">[]</span> <span class="o">{</span><span class="s">&quot;userName&quot;</span><span class="o">,</span> <span class="s">&quot;birthday&quot;</span><span class="o">,</span> <span class="s">&quot;age&quot;</span><span class="o">});</span>
  <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
<p>To validate an input value request using the Bean described above, use <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ValidationUtil.html" title="nablarch.core.validation.ValidationUtil">ValidationUtil</a> as follows:
In the case of a web application, validation can be performed more easily by <a class="reference internal" href="#checking-user-input-values-for-web-applications">Checking User Input Values for Web Applications</a>.</p>
<div class="last highlight-java"><div class="highlight"><pre><span></span><span class="c1">// Execution of validation</span>
<span class="c1">// Checks the input parameter request using SampleForm.</span>
<span class="c1">//</span>
<span class="c1">// Specifies which validation method of SampleForm is used for validation in the last argument.</span>
<span class="c1">// Since validate is specified in this example,</span>
<span class="c1">// validation is executed using the validate method specified in the @ValidateFor annotation of SampleForm.</span>
<span class="n">ValidationContext</span><span class="o">&lt;</span><span class="n">SampleForm</span><span class="o">&gt;</span> <span class="n">validationContext</span> <span class="o">=</span>
        <span class="n">ValidationUtil</span><span class="o">.</span><span class="na">validateAndConvertRequest</span><span class="o">(</span><span class="n">SampleForm</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">request</span><span class="o">,</span> <span class="s">&quot;validate&quot;</span><span class="o">);</span>

<span class="c1">// If a validation error has occurred, an Exception is thrown with abortIfInvalid</span>
<span class="n">validationContext</span><span class="o">.</span><span class="na">abortIfInvalid</span><span class="o">();</span>

<span class="c1">// Generates Form using a constructor that takes Map as an argument.</span>
<span class="c1">// (Form in which the input value request is converted can be acquired)</span>
<span class="n">SampleForm</span> <span class="n">form</span> <span class="o">=</span> <span class="n">validationContext</span><span class="o">.</span><span class="na">createObject</span><span class="o">();</span>
</pre></div>
</div>
</dd>
</dl>
</div>
<div class="section" id="performing-explicit-execution-of-validation">
<span id="nablarch-validation-execute-explicitly"></span><h3><a class="toc-backref" href="#id13">7.10.2.3.6. Performing Explicit Execution of Validation</a><a class="headerlink" href="#performing-explicit-execution-of-validation" title="Permalink to this headline">¶</a></h3>
<p>The <a class="reference internal" href="#executing-validation">Executing Validation</a> was performed based on the annotations configured in Bean property (setter), but here,
we will describe a method of executing the validation directly instead of configuring the annotations.</p>
<p>In principle, validation is performed using the <a class="reference internal" href="#executing-validation">Executing Validation</a> method, use this method
if it is necessary to perform validation individually.
For example, if <a class="reference internal" href="../code.html#code-use-pattern"><span>code management pattern</span></a> is being used
and validate is required to be performed by changing the pattern only for a specific screen, then execute validation individually.</p>
<dl class="docutils">
<dt>Implementation examples</dt>
<dd><p class="first">Explicit validation is executed from the method in which the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ValidateFor.html" title="nablarch.core.validation.ValidateFor">&#64;ValidateFor</a> annotation for the Bean class is configured.
Annotations that can be specified when executing explicit validation are limited to those that implement <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/DirectCallableValidator.html" title="nablarch.core.validation.DirectCallableValidator">DirectCallableValidator</a>.
(Convertors cannot be specified.)</p>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SampleForm</span> <span class="o">{</span>
  <span class="c1">// Attributes omitted</span>

  <span class="nd">@ValidateFor</span><span class="o">(</span><span class="s">&quot;validate&quot;</span><span class="o">)</span>
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">validate</span><span class="o">(</span><span class="n">ValidationContext</span><span class="o">&lt;</span><span class="n">SampleForm</span><span class="o">&gt;</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>

      <span class="n">ValidationUtil</span><span class="o">.</span><span class="na">validate</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">[]{</span><span class="s">&quot;userName&quot;</span><span class="o">,</span> <span class="s">&quot;prefectureCode&quot;</span><span class="o">});</span>

      <span class="c1">// Perform required check on the userName</span>
      <span class="n">ValidationUtil</span><span class="o">.</span><span class="na">validate</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="s">&quot;userName&quot;</span><span class="o">,</span> <span class="n">Required</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>

      <span class="c1">//  Specify annotation parameters in Map</span>
      <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">params</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;();</span>
      <span class="n">params</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;codeId&quot;</span><span class="o">,</span> <span class="s">&quot;1052&quot;</span><span class="o">);</span>     <span class="c1">// Code ID</span>
      <span class="n">params</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;pattern&quot;</span><span class="o">,</span> <span class="s">&quot;A&quot;</span><span class="o">);</span>       <span class="c1">// Code pattern name that is used</span>
      <span class="n">params</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;messageId&quot;</span><span class="o">,</span> <span class="s">&quot;M4865&quot;</span><span class="o">);</span> <span class="c1">// Error message ID</span>
      <span class="n">ValidationUtil</span><span class="o">.</span><span class="na">validate</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="s">&quot;prefectureCode&quot;</span><span class="o">,</span> <span class="n">CodeValue</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">params</span><span class="o">);</span>
  <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
<div class="last admonition important">
<p class="first admonition-title">Important</p>
<p class="last">To perform explicit validation, it is essential to implement validation on the target items in advance.
For details, see <a class="reference internal" href="#nablarch-validation-execute"><span>Executing Validation</span></a>.</p>
</div>
</dd>
</dl>
</div>
<div class="section" id="performing-character-type-validation">
<span id="nablarch-validation-system-char-validator"></span><h3><a class="toc-backref" href="#id14">7.10.2.3.7. Performing Character Type Validation</a><a class="headerlink" href="#performing-character-type-validation" title="Permalink to this headline">¶</a></h3>
<p>The definition method for character type validation is the same as <a class="reference internal" href="bean_validation.html#bean-validation"><span>Bean Validation</span></a>.
For the detailed configuration method, see <a class="reference internal" href="bean_validation.html#bean-validation-system-char-validator"><span>performing character type validation for Bean Validation</span></a>.
However, see the following since the configuration that allows surrogate pairs is different from <a class="reference internal" href="bean_validation.html#bean-validation"><span>Bean Validation</span></a>.</p>
<p>Note that the annotation being used is <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/validator/unicode/SystemChar.html" title="nablarch.core.validation.validator.unicode.SystemChar">&#64;SystemChar</a>,
and the fully qualified name is different from <a class="reference internal" href="bean_validation.html#bean-validation"><span>Bean Validation</span></a> (annotation name is the same).</p>
<dl class="docutils">
<dt>Allowing Surrogate Pairs</dt>
<dd><p class="first">This validation does not allow surrogate pairs by default.
(They are not allowed even if the characters for surrogate pairs are explicitly defined in <cite>LiteralCharsetDef</cite>.)</p>
<p>To allow surrogate pairs, <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/validator/unicode/SystemCharValidator.html#setAllowSurrogatePair-boolean-" title="nablarch.core.validation.validator.unicode.SystemCharValidator.setAllowSurrogatePair(boolean)">SystemCharValidator#allowSurrogatePair</a> must be configured in the component configuration file as follows.</p>
<div class="last highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;systemCharValidator&quot;</span> <span class="na">class=</span><span class="s">&quot;nablarch.core.validation.validator.unicode.SystemCharValidator&quot;</span><span class="nt">&gt;</span>
  <span class="c">&lt;!--  Allows surrogate pairs --&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;allowSurrogatePair&quot;</span> <span class="na">value=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>

  <span class="c">&lt;!-- Other properties are omitted --&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
</dd>
</dl>
</div>
<div class="section" id="performing-correlation-validation">
<span id="nablarch-validation-correlation-validation"></span><h3><a class="toc-backref" href="#id15">7.10.2.3.8. Performing Correlation Validation</a><a class="headerlink" href="#performing-correlation-validation" title="Permalink to this headline">¶</a></h3>
<p>Correlation validation using multiple items is implemented using the method in which the Bean class annotation <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ValidateFor.html" title="nablarch.core.validation.ValidateFor">&#64;ValidateFor</a> is configured.
This method first performs validation for each item, then executes validation using multiple items if no error occurs.</p>
<dl class="docutils">
<dt>Implementation examples</dt>
<dd><p class="first">In this example, correlation validation is performed using mailAddress and confirmMailAddress.</p>
<p>If an error has occurred during correlation validation, explicitly add the message ID indicating the message that must be notified to the user to <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ValidationContext.html" title="nablarch.core.validation.ValidationContext">ValidationContext</a>.</p>
<div class="last highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SampleForm</span> <span class="o">{</span>

  <span class="nd">@Domain</span><span class="o">(</span><span class="n">SampleDomain</span><span class="o">.</span><span class="na">MAIL</span><span class="o">)</span>
  <span class="nd">@Required</span>
  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setMailAddress</span><span class="o">(</span><span class="n">String</span> <span class="n">mailAddress</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">mailAddress</span> <span class="o">=</span> <span class="n">mailAddress</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="nd">@Domain</span><span class="o">(</span><span class="n">SampleDomain</span><span class="o">.</span><span class="na">MAIL</span><span class="o">)</span>
  <span class="nd">@Required</span>
  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setConfirmMailAddress</span><span class="o">(</span><span class="n">String</span> <span class="n">confirmMailAddress</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">confirmMailAddress</span> <span class="o">=</span> <span class="n">confirmMailAddress</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="nd">@ValidateFor</span><span class="o">(</span><span class="s">&quot;validate&quot;</span><span class="o">)</span>
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">validate</span><span class="o">(</span><span class="n">ValidationContext</span><span class="o">&lt;</span><span class="n">SampleForm</span><span class="o">&gt;</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
      <span class="c1">// Implement validation of mailAddress and confirmMailAddress</span>
      <span class="n">ValidationUtil</span><span class="o">.</span><span class="na">validate</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">[]</span> <span class="o">{</span><span class="s">&quot;mailAddress&quot;</span><span class="o">,</span> <span class="s">&quot;confirmMailAddress&quot;</span><span class="o">});</span>

      <span class="c1">// Correlation not performed validation if an error has occurred</span>
      <span class="k">if</span> <span class="o">(!</span><span class="n">context</span><span class="o">.</span><span class="na">isValid</span><span class="o">())</span> <span class="o">{</span>
          <span class="k">return</span><span class="o">;</span>
      <span class="o">}</span>

      <span class="c1">// Generate form object and implement correlation validation</span>
      <span class="n">SampleForm</span> <span class="n">form</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">createObject</span><span class="o">();</span>
      <span class="k">if</span> <span class="o">(!</span><span class="n">Objects</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">form</span><span class="o">.</span><span class="na">mailAddress</span><span class="o">,</span> <span class="n">form</span><span class="o">.</span><span class="na">confirmMailAddress</span><span class="o">))</span> <span class="o">{</span>
          <span class="c1">// An error occurs when mailAddress and confirmMailAddress do not match</span>
          <span class="n">context</span><span class="o">.</span><span class="na">addMessage</span><span class="o">(</span><span class="s">&quot;compareMailAddress&quot;</span><span class="o">);</span>
      <span class="o">}</span>
  <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
</dl>
</div>
<div class="section" id="performing-validation-using-a-function-that-takes-bean-array-as-the-input-such-as-batch-registration">
<span id="nablarch-validation-nest-bean"></span><h3><a class="toc-backref" href="#id16">7.10.2.3.9. Performing validation using a function that takes Bean array as the input, such as batch registration</a><a class="headerlink" href="#performing-validation-using-a-function-that-takes-bean-array-as-the-input-such-as-batch-registration" title="Permalink to this headline">¶</a></h3>
<p>There are cases where the same information is input multiple times, such as in batch registration.
In such cases, a nested Bean is defined for the Bean for validation.</p>
<p>Configure the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ValidationTarget.html" title="nablarch.core.validation.ValidationTarget">&#64;ValidationTarget</a> annotation in the nested Bean setter, and specify the size of the nested Bean.
If the number of elements is fixed (determined during compile), specify it in the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ValidationTarget.html#size--" title="nablarch.core.validation.ValidationTarget.size()">size</a> attribute.
If the number of elements is variable, configure the property name having a size in the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ValidationTarget.html#sizeKey--" title="nablarch.core.validation.ValidationTarget.sizeKey()">sizeKey</a> attribute.</p>
<p>In this example, <cite>SampleForm</cite> stores <cite>AddressForm</cite> as an array since the <cite>AddressForm</cite> information can be inputted in a batch.
Also, <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ValidationTarget.html#sizeKey--" title="nablarch.core.validation.ValidationTarget.sizeKey()">sizeKey</a> is used since the size is not determined during compile.</p>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SampleForm</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="n">AddressForm</span><span class="o">[]</span> <span class="n">addressForms</span><span class="o">;</span>
    <span class="c1">// Size of addressForms</span>
    <span class="c1">// Send confidential items from the screen, etc.</span>
    <span class="kd">private</span> <span class="n">Integer</span> <span class="n">addressSize</span><span class="o">;</span>

    <span class="nd">@ValidationTarget</span><span class="o">(</span><span class="n">sizeKey</span> <span class="o">=</span> <span class="s">&quot;addressSize&quot;</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setAddressForms</span><span class="o">(</span><span class="n">AddressForm</span><span class="o">[]</span> <span class="n">addressForms</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">addressForms</span> <span class="o">=</span> <span class="n">addressForms</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Domain</span><span class="o">(</span><span class="n">SampleDomain</span><span class="o">.</span><span class="na">SIZE</span><span class="o">)</span>
    <span class="nd">@Required</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setAddressSize</span><span class="o">(</span><span class="n">Integer</span> <span class="n">addressSize</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">addressSize</span> <span class="o">=</span> <span class="n">addressSize</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@ValidateFor</span><span class="o">(</span><span class="s">&quot;validate&quot;</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">validate</span><span class="o">(</span><span class="n">ValidationContext</span><span class="o">&lt;</span><span class="n">SampleForm</span><span class="o">&gt;</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">ValidationUtil</span><span class="o">.</span><span class="na">validate</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">[]</span> <span class="o">{</span><span class="s">&quot;addressSize&quot;</span><span class="o">,</span> <span class="s">&quot;addressForms&quot;</span><span class="o">});</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">AddressForm</span> <span class="o">{</span>
    <span class="c1">// Omitted</span>
<span class="o">}</span>
</pre></div>
</div>
</div>
<div class="section" id="changing-validation-items-based-on-the-selected-value-of-the-radio-button-and-list-box">
<span id="nablarch-validation-conditional"></span><h3><a class="toc-backref" href="#id17">7.10.2.3.10. Changing validation items based on the selected value of the radio button and list box</a><a class="headerlink" href="#changing-validation-items-based-on-the-selected-value-of-the-radio-button-and-list-box" title="Permalink to this headline">¶</a></h3>
<p>By using the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/web/WebUtil.html" title="nablarch.common.web.WebUtil">WebUtil</a> class, validation items can be replaced based on the selected value of the radio button and list box.</p>
<p>In this example, when the value of <strong>form.radio</strong> sent from the screen is <strong>ptn1</strong>, only <cite>item1</cite> is validated.
For values other than <strong>ptn1</strong>, <cite>item1</cite> and <cite>item2</cite> are validated.</p>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SampleForm</span> <span class="o">{</span>

    <span class="c1">// Property is omitted</span>

    <span class="nd">@ValidateFor</span><span class="o">(</span><span class="s">&quot;validate&quot;</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">validate</span><span class="o">(</span><span class="n">ValidationContext</span><span class="o">&lt;</span><span class="n">SampleForm</span><span class="o">&gt;</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">WebUtil</span><span class="o">.</span><span class="na">containsPropertyKeyValue</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="s">&quot;form.radio&quot;</span><span class="o">,</span> <span class="s">&quot;ptn1&quot;</span><span class="o">))</span> <span class="o">{</span>
            <span class="n">ValidationUtil</span><span class="o">.</span><span class="na">validate</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">[]</span> <span class="o">{</span><span class="s">&quot;item1&quot;</span><span class="o">});</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="n">ValidationUtil</span><span class="o">.</span><span class="na">validate</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">[]</span> <span class="o">{</span><span class="s">&quot;item1&quot;</span><span class="o">,</span> <span class="s">&quot;item2&quot;</span><span class="o">});</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">In this example, <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/web/WebUtil.html#containsPropertyKeyValue-nablarch.core.validation.ValidationContext-java.lang.String-java.lang.String-" title="nablarch.common.web.WebUtil.containsPropertyKeyValue(nablarch.core.validation.ValidationContext-java.lang.String-java.lang.String)">WebUtil.containsPropertyKeyValue</a> is used to check even the sent value,
but to just examine whether the radio button is checked, use <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/web/WebUtil.html#containsPropertyKey-nablarch.core.validation.ValidationContext-java.lang.String-" title="nablarch.common.web.WebUtil.containsPropertyKey(nablarch.core.validation.ValidationContext-java.lang.String)">WebUtil.containsPropertyKey</a>.</p>
</div>
</div>
<div class="section" id="to-create-a-validation-error-message-linked-to-a-specific-item">
<h3><a class="toc-backref" href="#id18">7.10.2.3.11. To create a validation error message linked to a specific item</a><a class="headerlink" href="#to-create-a-validation-error-message-linked-to-a-specific-item" title="Permalink to this headline">¶</a></h3>
<p>See <a class="reference internal" href="bean_validation.html#bean-validation-create-message-for-property"><span>to create a validation error message linked to a specific item of Bean Validation</span></a>.</p>
</div>
<div class="section" id="to-embed-the-item-name-in-the-message-when-a-validation-error-occurs">
<span id="nablarch-validation-property-name"></span><h3><a class="toc-backref" href="#id19">7.10.2.3.12. To embed the item name in the message when a validation error occurs</a><a class="headerlink" href="#to-embed-the-item-name-in-the-message-when-a-validation-error-occurs" title="Permalink to this headline">¶</a></h3>
<p>To embed the item name in the message, specify the item name of the item for validation using the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/PropertyName.html" title="nablarch.core.validation.PropertyName">&#64;PropertyName</a> annotation.</p>
<dl class="docutils">
<dt>Implementation examples</dt>
<dd><p class="first">Use a pattern character to embed the item name in the message.
Since the item name is always specified first, specify <strong>{0}</strong> where the item name is to be embedded.</p>
<div class="highlight-properties"><div class="highlight"><pre><span></span><span class="na">required.message</span> <span class="o">=</span> <span class="s">Please enter a {0}.</span>
</pre></div>
</div>
<p>Configure the annotation <cite>&#64;PropertyName</cite> that sets the item name along with the validation annotation in the item for validation.</p>
<div class="last highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SampleForm</span> <span class="o">{</span>

    <span class="nd">@Domain</span><span class="o">(</span><span class="n">SampleDomain</span><span class="o">.</span><span class="na">NAME</span><span class="o">)</span>
    <span class="nd">@Required</span>
    <span class="nd">@PropertyName</span><span class="o">(</span><span class="s">&quot;name&quot;</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setUserName</span><span class="o">(</span><span class="n">String</span> <span class="n">userName</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">userName</span> <span class="o">=</span> <span class="n">userName</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Domain</span><span class="o">(</span><span class="n">SampleDomain</span><span class="o">.</span><span class="na">DATE</span><span class="o">)</span>
    <span class="nd">@PropertyName</span><span class="o">(</span><span class="s">&quot;birthday&quot;</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setBirthday</span><span class="o">(</span><span class="n">String</span> <span class="n">birthday</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">birthday</span> <span class="o">=</span> <span class="n">birthday</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
<dt>Generated Message</dt>
<dd>In the above implementation, if a required error occurs in the <cite>username</cite> property, the message generated will be <strong>&#8220;Please enter name&#8221;</strong>.</dd>
</dl>
</div>
<div class="section" id="performing-type-conversion-to-numeric-type">
<h3><a class="toc-backref" href="#id20">7.10.2.3.13. Performing Type Conversion to Numeric Type</a><a class="headerlink" href="#performing-type-conversion-to-numeric-type" title="Permalink to this headline">¶</a></h3>
<p>To convert the input value to a numeric type of the Bean class after validation, that item shall always require the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/convertor/Digits.html" title="nablarch.core.validation.convertor.Digits">&#64;Digits</a> annotation.
※In the case of domain validation, the configuration for domain Enum is required.</p>
<p>Let us assume that the convertors for converting to a numeric type are configured according to the procedure in <a class="reference internal" href="#nablarch-validation-definition-validator-convertor"><span>Configuring Validators and Convertors for Use</span></a>.</p>
<dl class="docutils">
<dt>Implementation examples</dt>
<dd><p class="first">In this example, it has been specified in setter, but we recommend specifying it in the domain Enum using domain validation.</p>
<div class="last highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SampleForm</span> <span class="o">{</span>

    <span class="nd">@PropertyName</span><span class="o">(</span><span class="s">&quot;age&quot;</span><span class="o">)</span>
    <span class="nd">@Digits</span><span class="o">(</span><span class="n">integer</span> <span class="o">=</span> <span class="mi">3</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setAge</span><span class="o">(</span><span class="n">Integer</span> <span class="n">age</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">age</span> <span class="o">=</span> <span class="n">age</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
</dl>
</div>
<div class="section" id="performing-correlation-validation-with-the-database">
<span id="nablarch-validation-database"></span><h3><a class="toc-backref" href="#id21">7.10.2.3.14. Performing Correlation Validation with the Database</a><a class="headerlink" href="#performing-correlation-validation-with-the-database" title="Permalink to this headline">¶</a></h3>
<p>Correlation validation with the database is performed by business action.</p>
<p>See <a class="reference internal" href="bean_validation.html#bean-validation-database-validation"><span>validation correlation with the Bean validation database</span></a> for the reason why it is performed with business action.</p>
</div>
<div class="section" id="checking-user-input-values-for-web-applications">
<h3><a class="toc-backref" href="#id22">7.10.2.3.15. Checking User Input Values for Web Applications</a><a class="headerlink" href="#checking-user-input-values-for-web-applications" title="Permalink to this headline">¶</a></h3>
<p>The user input values for web applications are checked using <a class="reference internal" href="../../handlers/web_interceptor/InjectForm.html#inject-form-interceptor"><span>InjectForm Interceptor</span></a>.
For details, see <a class="reference internal" href="../../handlers/web_interceptor/InjectForm.html#inject-form-interceptor"><span>InjectForm Interceptor</span></a>.</p>
</div>
</div>
<div class="section" id="expansion-example">
<h2><a class="toc-backref" href="#id23">7.10.2.4. Expansion example</a><a class="headerlink" href="#expansion-example" title="Permalink to this headline">¶</a></h2>
<div class="section" id="to-add-a-project-specific-validator">
<h3><a class="toc-backref" href="#id24">7.10.2.4.1. To add a project-specific validator</a><a class="headerlink" href="#to-add-a-project-specific-validator" title="Permalink to this headline">¶</a></h3>
<p>The following steps are required to add a validator.</p>
<ol class="arabic simple">
<li>Creating an annotation</li>
<li>Creating a validator</li>
<li>Registering the validator in a configuration file</li>
</ol>
<p>The procedure is shown below.</p>
<dl class="docutils">
<dt>Creating an annotation</dt>
<dd><p class="first">Annotations must satisfy the following conditions.</p>
<ul class="simple">
<li>Configure the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/Validation.html" title="nablarch.core.validation.Validation">&#64;Validation</a> annotation.</li>
<li>Configure <cite>ElementType.METHOD</cite> with the <a class="reference external" href="http://docs.oracle.com/javase/8/docs/api/java/lang/annotation/Target.html" title="java.lang.annotation.Target">&#64;Target</a> annotation.</li>
<li>Configure <cite>RetentionPolicy.RUNTIME</cite> with the <a class="reference external" href="http://docs.oracle.com/javase/8/docs/api/java/lang/annotation/Retention.html" title="java.lang.annotation.Retention">&#64;Retention</a> annotation.</li>
</ul>
<div class="last highlight-java"><div class="highlight"><pre><span></span><span class="nd">@Validation</span>
<span class="nd">@Target</span><span class="o">(</span><span class="n">ElementType</span><span class="o">.</span><span class="na">METHOD</span><span class="o">)</span>
<span class="nd">@Retention</span><span class="o">(</span><span class="n">RetentionPolicy</span><span class="o">.</span><span class="na">RUNTIME</span><span class="o">)</span>
<span class="kd">public</span> <span class="nd">@interface</span> <span class="n">Sample</span> <span class="o">{</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
<dt>Creating a validator</dt>
<dd><p class="first">The validator implements the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/Validator.html" title="nablarch.core.validation.Validator">Validator</a> interface and implements the validation logic.</p>
<div class="last highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SampleValidator</span> <span class="kd">implements</span> <span class="n">Validator</span> <span class="o">{</span>

  <span class="kd">public</span> <span class="n">Class</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="n">Annotation</span><span class="o">&gt;</span> <span class="nf">getAnnotationClass</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="n">Sample</span><span class="o">.</span><span class="na">class</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="kt">boolean</span> <span class="nf">validate</span><span class="o">(</span><span class="n">ValidationContext</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">context</span><span class="o">,</span>
      <span class="c1">// Omitted</span>
  <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
<dt>Registering the validator in a configuration file</dt>
<dd>See <a class="reference internal" href="#nablarch-validation-definition-validator-convertor"><span>Configuring Validators and Convertors for Use</span></a>.</dd>
</dl>
</div>
<div class="section" id="to-add-a-project-specific-convertor">
<h3><a class="toc-backref" href="#id25">7.10.2.4.2. To add a project-specific convertor</a><a class="headerlink" href="#to-add-a-project-specific-convertor" title="Permalink to this headline">¶</a></h3>
<p>The following steps are required to add a convertor.</p>
<ol class="arabic simple">
<li>Creating a convertor</li>
<li>Registering the converter in a configuration file</li>
</ol>
<p>The procedure is shown below.</p>
<dl class="docutils">
<dt>Creating a convertor</dt>
<dd><p class="first">The converter implements the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/Convertor.html" title="nablarch.core.validation.Convertor">Convertor</a> interface and implements the type conversion logic, etc.</p>
<div class="last highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SampleConvertor</span> <span class="kd">implements</span> <span class="n">Convertor</span> <span class="o">{</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="n">Class</span><span class="o">&lt;?&gt;</span> <span class="n">getTargetClass</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">Short</span><span class="o">.</span><span class="na">class</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="kt">boolean</span> <span class="nf">isConvertible</span><span class="o">(</span><span class="n">ValidationContext</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">context</span><span class="o">,</span> <span class="n">String</span> <span class="n">propertyName</span><span class="o">,</span> <span class="n">Object</span> <span class="n">propertyDisplayName</span><span class="o">,</span>
            <span class="n">Object</span> <span class="n">value</span><span class="o">,</span> <span class="n">Annotation</span> <span class="n">format</span><span class="o">)</span> <span class="o">{</span>

        <span class="kt">boolean</span> <span class="n">convertible</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>

        <span class="k">if</span> <span class="o">(</span><span class="n">value</span> <span class="k">instanceof</span> <span class="n">String</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">try</span> <span class="o">{</span>
                <span class="n">Short</span><span class="o">.</span><span class="na">valueOf</span><span class="o">((</span><span class="n">String</span><span class="o">)</span> <span class="n">value</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NumberFormatException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">convertible</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="n">convertible</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="k">if</span> <span class="o">(!</span><span class="n">convertible</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">context</span><span class="o">.</span><span class="na">addResultMessage</span><span class="o">(</span><span class="n">propertyName</span><span class="o">,</span> <span class="s">&quot;sampleconvertor.message&quot;</span><span class="o">,</span> <span class="n">propertyDisplayName</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">convertible</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">Object</span> <span class="nf">convert</span><span class="o">(</span><span class="n">ValidationContext</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">context</span><span class="o">,</span> <span class="n">String</span> <span class="n">propertyName</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">,</span> <span class="n">Annotation</span> <span class="n">format</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">Short</span><span class="o">.</span><span class="na">valueOf</span><span class="o">((</span><span class="n">String</span><span class="o">)</span> <span class="n">value</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
<dt>Registering the converter in a configuration file</dt>
<dd>See <a class="reference internal" href="#nablarch-validation-definition-validator-convertor"><span>Configuring Validators and Convertors for Use</span></a>.</dd>
</dl>
</div>
<div class="section" id="to-change-the-method-of-generating-a-bean-object-for-validation">
<h3><a class="toc-backref" href="#id26">7.10.2.4.3. To change the method of generating a Bean object for validation</a><a class="headerlink" href="#to-change-the-method-of-generating-a-bean-object-for-validation" title="Permalink to this headline">¶</a></h3>
<p>The following steps are required to change the method of generating a Bean object for validation.</p>
<ol class="arabic simple">
<li>Create the implementation class <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/FormCreator.html" title="nablarch.core.validation.FormCreator">FormCreator</a></li>
<li>Add the component definition of the created class to <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ValidationManager.html#setFormCreator-nablarch.core.validation.FormCreator-" title="nablarch.core.validation.ValidationManager.setFormCreator(nablarch.core.validation.FormCreator)">ValidationManager.formCreator</a></li>
</ol>
</div>
</div>
</div>


           </div>
           <div class="articleComments">
            
           </div>
          </div>
          <footer>

    <hr/>

    <div role="contentinfo">
        <p>
            &copy; Copyright 2010-2021, TIS Inc.
        </p>
    </div>
    Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org">Read the Docs</a>.

</footer>

        </div>
      </div>

    </section>

  </div>
  


  

    <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'../../../../',
            VERSION:'5u19',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true,
            SOURCELINK_SUFFIX: ''
        };
    </script>
      <script type="text/javascript" src="../../../../_static/jquery.js"></script>
      <script type="text/javascript" src="../../../../_static/underscore.js"></script>
      <script type="text/javascript" src="../../../../_static/doctools.js"></script>
      <script type="text/javascript" src="../../../../_static/custom.js"></script>

  

  
  
    <script type="text/javascript" src="../../../../_static/js/theme.js"></script>
  

  
  
  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>
   

</body>
</html>