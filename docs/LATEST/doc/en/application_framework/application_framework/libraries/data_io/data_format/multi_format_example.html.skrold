


<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->
<head>
  <meta charset="utf-8">
  <meta http-equiv='content-language' content='ja'>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>7.4.2.3.1.1.4.2.1. Sample Collection of Fixed (Fixed-Length) Multi Format Definition &mdash; ∇Nablarch  5u19 documentation</title>
  

  
  
  
  

  

  
  
    

  

  
  
    <link rel="stylesheet" href="../../../../../_static/custom.css" type="text/css" />
  

  

  
  <link rel="canonical" href="https://nablarch.github.io/docs/LATEST/doc/application_framework/application_framework/libraries/data_io/data_format/multi_format_example.html" />
  
    <link rel="top" title="∇Nablarch  5u19 documentation" href="../../../../../index.html"/>
        <link rel="up" title="7.4.2.3.1.1. Description Rules for Format Definition File" href="format_definition.html"/>
        <link rel="next" title="7.4.3. Comparison Table of Data Bind and General Data Format" href="../functional_comparison.html"/>
        <link rel="prev" title="7.4.2.3.1.1. Description Rules for Format Definition File" href="format_definition.html"/>
 

  
  <script src="../../../../../_static/js/modernizr.min.js"></script>

</head>

<body class="wy-body-for-nav" role="document">

   
  <div class="wy-grid-for-nav">

    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search">
          
  
  <a href="../../../../../index.html" id="sidebar-title" class="icon"> ∇Nablarch 
  

  
    <div id="sidebar-version">Version: 5u19</div>
  </a>

  <div role="search">
    <form id="google-search-form" class="wy-form" method="get" action="https://www.google.co.jp/search">
      <input type="text" name="text" placeholder="Search docs on google" id="text"/>
      <input type="hidden" name="q" id="q"/>
    </form>
  </div>
    
    

        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
  
  
    <ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../../../../about_nablarch/index.html">What is the Nablarch?</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../../about_nablarch/concept.html">Nablarch Concept</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../about_nablarch/concept.html#robustness">Robustness</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../about_nablarch/concept.html#testability">Testability</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../about_nablarch/concept.html#ready-to-use">Ready-to-Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../about_nablarch/mvn_module.html">Module List of Nablarch</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../about_nablarch/license.html">Information on Nablarch License</a></li>
</ul>
</li>
<li class="toctree-l1 current"><a class="reference internal" href="../../../../index.html">Nablarch Application Framework</a><ul class="current">
<li class="toctree-l2 current"><a class="reference internal" href="../../../index.html">Application Framework</a><ul class="current">
<li class="toctree-l3"><a class="reference internal" href="../../../nablarch/index.html">1. What is Nablarch Application Framework?</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../web/index.html">2. Web Application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../web_service/index.html">3. Web Service</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../batch/index.html">4. Batch Application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../messaging/index.html">5. Messaging</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../handlers/index.html">6. Standard Handler Provided by Nablarch</a></li>
<li class="toctree-l3 current"><a class="reference internal" href="../../index.html">7. Libraries Provided by Nablarch</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../blank_project/index.html">8. Blank Project</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../setting_guide/index.html">9. Nablarch Application Framework Configuration Guide</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../configuration/index.html">10. Default Configuration List</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../cloud_native/index.html">11. Nablarch Cloud Native Support</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../adaptors/index.html">Adaptor</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/log_adaptor.html">log Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/router_adaptor.html">Routing Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/webspheremq_adaptor.html">IBM WebSphere MQ Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/jaxrs_adaptor.html">JAX-RS Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/doma_adaptor.html">Doma Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/jsr310_adaptor.html">JSR310(Date and Time API)Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/mail_sender_freemarker_adaptor.html">E-mail FreeMarker Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/mail_sender_thymeleaf_adaptor.html">E-mail Thymeleaf Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/mail_sender_velocity_adaptor.html">E-mail Velocity Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/web_thymeleaf_adaptor.html">Web Application Thymeleaf Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/lettuce_adaptor.html">Lettuce Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/slf4j_adaptor.html">SLF4J Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/micrometer_adaptor.html">Micrometer Adapter</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../example/index.html">Example</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../example/index.html#procedure-to-build-the-environment">Procedure to build the environment</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../example/index.html#application-execution-procedure">Application execution procedure</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../../extension_components/index.html">Nablarch extension component</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../../extension_components/report/index.html">1. Form library</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../extension_components/workflow/doc/index.html">2. Workflow library</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../extension_components/workflow/tool/index.html">3. Workflow definition data generation tool</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../extension_components/etl/index.html">4. ETL</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../extension_components/etl/etl_maven_plugin.html">5. ETL Maven plugin</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../../development_tools/index.html">Nablarch development tools</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../../development_tools/java_static_analysis/index.html">1. Efficient Java Static Checks</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/java_static_analysis/index.html#conduct-syntax-check">1.1. Conduct syntax check</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/java_static_analysis/index.html#unify-the-format">1.2. Unify the format</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/java_static_analysis/index.html#check-if-unauthorized-apis-are-being-used">1.3. Check if unauthorized APIs are being used</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../development_tools/ui_dev/index.html">2. Front-end UI development platform for advanced users</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../development_tools/testing_framework/index.html">3. Testing framework</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/testing_framework/guide/development_guide/05_UnitTestGuide/index.html">3.1. How to Execute Unit Tests</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/testing_framework/guide/development_guide/06_TestFWGuide/index.html">3.2. How to Use the Automated Test Framework</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/testing_framework/guide/development_guide/08_TestTools/index.html">3.3. Tools Used in the Programming Phase</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../development_tools/toolbox/index.html">4. Useful Tools When Developing Applications</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/toolbox/JspStaticAnalysis/index.html">4.1. JSP Static Analysis Tool</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/toolbox/SqlExecutor/SqlExecutor.html">4.2. Nablarch SQL Executor</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/toolbox/JspVerifier/JspVerifier.html">4.3. Job Screen JSP Validation Tool</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../../examples/index.html">Nablarch Implementation Examples</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/01/index.html">Sample Password Encryption Function Using Database</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/01/0101_PBKDF2PasswordEncryptor.html">Sample Password Encryption Function Using PBKDF2</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/01/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/01/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/01/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/01/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/02/index.html">Extended Validation Functions</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/02/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/02/index.html#email-address-validation">Email address validation</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/02/index.html#validation-of-japan-telephone-numbers">Validation of Japan telephone numbers</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/02/index.html#code-value-validation">Code value validation</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/03/index.html">Display a List of Search Results</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#how-to-use">How to Use</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#listsearchinfo-class">ListSearchInfo class</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#listsearchresult-tag">listSearchResult tag</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#sort-search-results">Sort search results</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#how-to-implement-displaying-a-list-of-all-search-results-on-a-single-screen">How to implement displaying a list of all search results on a single screen</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#how-to-implement-the-initial-display-of-search-results-with-the-default-search-conditions">How to implement the initial display of search results with the default search conditions</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#default-settings-for-the-search-result-list-display-function">Default settings for the search result list display function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#how-to-import-a-sample-implementation-tag-file-into-the-business-application">How to import a sample implementation (tag file) into the business application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#tag-reference">Tag Reference</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/04/index.html">Extended Formatter Functions</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/04/0401_ExtendedDataFormatter.html">Data Formatter Expansion</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/04/0402_ExtendedFieldType.html">Field Type Expansion in the Data Formatter Function</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/05/index.html">Sample File Management Function Using Database</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/05/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/05/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/05/index.html#functions">Functions</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/05/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/05/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/06/index.html">CAPTCHA Function Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/06/06_Captcha_guide.html">How to Incorporate the CAPTCHA Function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/06/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/06/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/06/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/06/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/07/index.html">Sample UserAgent Information Acquisition Function</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/07/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/07/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/07/index.html#description-of-configuration">Description of configuration</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/07/index.html#use-case">Use case</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/08/index.html">Sample of HTML Email Send Function</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/08/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/08/index.html#request">Request</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/08/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/08/index.html#implementation-examples">Implementation examples</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/09/index.html">How to Use a Sample to Send a Digitally Signed Email Using Bouncycastle</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/09/index.html#environment-preparation">Environment preparation</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/09/index.html#structure-of-digitally-signed-email-send-function">Structure of digitally signed email send function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/09/index.html#preparation-of-configuration-file">Preparation of configuration file</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/09/index.html#execution">Execution</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/10/index.html">How to Use the Log Aggregation Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/10/index.html#list-of-samples-provided">List of samples provided</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/11/index.html">Messaging Platform Test Simulator Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/11/index.html#uses">Uses</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/11/index.html#features">Features</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/11/index.html#request">Request</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/11/index.html#how-to-use">How to use</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/11/index.html#expansion-example">Expansion example</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../../nablarch_api/index.html">Nablarch API</a></li>
</ul>

  

        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" role="navigation" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../../../../../index.html">∇Nablarch </a>
        
      </nav>


      
      <div class="wy-nav-content">
        <div class="rst-content">
          

 



<div role="navigation" aria-label="breadcrumbs navigation">
  <ul class="wy-breadcrumbs">
    <li><a href="../../../../../index.html">Docs</a> &raquo;</li>
      
          <li><a href="../../../../index.html">Nablarch Application Framework</a> &raquo;</li>
      
          <li><a href="../../../index.html">Application Framework</a> &raquo;</li>
      
          <li><a href="../../index.html">7. Libraries Provided by Nablarch</a> &raquo;</li>
      
          <li><a href="../../data_converter.html">7.4. Access to Data in Various Formats</a> &raquo;</li>
      
          <li><a href="../data_format.html">7.4.2. General Data Format</a> &raquo;</li>
      
          <li><a href="format_definition.html">7.4.2.3.1.1. Description Rules for Format Definition File</a> &raquo;</li>
      
    <li>7.4.2.3.1.1.4.2.1. Sample Collection of Fixed (Fixed-Length) Multi Format Definition</li>
    <li class="wy-breadcrumbs-aside">
      <a href="https://github.com/nablarch" class="fa fa-github">GitHub</a>
    </li>
    <li class="wy-breadcrumbs-aside">
        <a href="https://nablarch.github.io/docs/LATEST/doc/index.html" class="ja">日本語</a>
    </li>
  </ul>
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  <div class="section" id="sample-collection-of-fixed-fixed-length-multi-format-definition">
<h1>7.4.2.3.1.1.4.2.1. Sample Collection of Fixed (Fixed-Length) Multi Format Definition<a class="headerlink" href="#sample-collection-of-fixed-fixed-length-multi-format-definition" title="Permalink to this headline">¶</a></h1>
<dl class="docutils">
<dt>Example of identifying format with a single field</dt>
<dd><p class="first">When a single field is a condition, if the field value matches the condition defined in each format, then it is processed with the record definition.</p>
<p>In this example, records are identified by the following rules:</p>
<ul class="simple">
<li>Header record type if dataKbn is 1.</li>
<li>Data record type if dataKbn is 2.</li>
</ul>
<div class="last highlight-bash"><div class="highlight"><pre><span></span>file-type:        <span class="s2">&quot;Fixed&quot;</span> <span class="c1"># Fixed-length</span>
text-encoding:    <span class="s2">&quot;MS932&quot;</span> <span class="c1"># Character encoding of the string type field</span>
record-length:    <span class="m">40</span>      <span class="c1"># Length of each record</span>
record-separator: <span class="s2">&quot;\r\n&quot;</span>  <span class="c1"># Carriage return and Line feed (crlf)</span>

<span class="c1"># Define record identification field</span>
<span class="o">[</span>Classifier<span class="o">]</span>
<span class="m">1</span> dataKbn X<span class="o">(</span><span class="m">1</span><span class="o">)</span>

<span class="c1"># Define the header record</span>
<span class="o">[</span>header<span class="o">]</span>
<span class="nv">dataKbn</span> <span class="o">=</span> <span class="s2">&quot;1&quot;</span>
<span class="m">1</span> dataKbn X<span class="o">(</span><span class="m">1</span><span class="o">)</span>
<span class="m">2</span> data    X<span class="o">(</span><span class="m">39</span><span class="o">)</span>

<span class="c1"># Define data record</span>
<span class="o">[</span>data<span class="o">]</span>
<span class="nv">dataKbn</span> <span class="o">=</span> <span class="s2">&quot;2&quot;</span>
<span class="m">1</span> dataKbn X<span class="o">(</span><span class="m">1</span><span class="o">)</span>
<span class="m">2</span> data    X<span class="o">(</span><span class="m">39</span><span class="o">)</span>
</pre></div>
</div>
</dd>
<dt>Example of identifying format with multiple fields</dt>
<dd><p class="first">When a record is identified by multiple of fields, the processing is performed by the record definition if all conditions are satisfied.</p>
<p>In this example, records are identified by the following rules:</p>
<ul class="simple">
<li>ParentData record type if dataKbn is 1 and type is 01.</li>
<li>ChildData record type if dataKbn is 2 and type is 02.</li>
</ul>
<div class="last highlight-bash"><div class="highlight"><pre><span></span>file-type:        <span class="s2">&quot;Fixed&quot;</span> <span class="c1"># Fixed-length</span>
text-encoding:    <span class="s2">&quot;MS932&quot;</span> <span class="c1"># Character encoding of the string type field</span>
record-length:    <span class="m">40</span>      <span class="c1"># Length of each record</span>
record-separator: <span class="s2">&quot;\r\n&quot;</span>  <span class="c1"># Carriage return and Line feed (crlf)</span>

<span class="c1"># Define record identification field</span>
<span class="o">[</span>Classifier<span class="o">]</span>
<span class="m">1</span>   dataKbn X<span class="o">(</span><span class="m">1</span><span class="o">)</span>      <span class="c1"># First 1 byte</span>
<span class="m">10</span>  <span class="nb">type</span>    X<span class="o">(</span><span class="m">2</span><span class="o">)</span>      <span class="c1"># 2 bytes from the 10th byte</span>

<span class="o">[</span>parentData<span class="o">]</span>
<span class="nv">dataKbn</span> <span class="o">=</span> <span class="s2">&quot;1&quot;</span>
<span class="nb">type</span>    <span class="o">=</span> <span class="s2">&quot;01&quot;</span>
<span class="m">1</span>  dataKbn X<span class="o">(</span><span class="m">1</span><span class="o">)</span>
<span class="m">2</span>  ?filler X<span class="o">(</span><span class="m">9</span><span class="o">)</span>
<span class="m">10</span> <span class="nb">type</span>    X<span class="o">(</span><span class="m">2</span><span class="o">)</span>
<span class="m">13</span> data    X<span class="o">(</span><span class="m">28</span><span class="o">)</span>

<span class="o">[</span>childData<span class="o">]</span>
<span class="nv">dataKbn</span> <span class="o">=</span> <span class="s2">&quot;1&quot;</span>
<span class="nb">type</span>    <span class="o">=</span> <span class="s2">&quot;02&quot;</span>
<span class="m">1</span>  dataKbn X<span class="o">(</span><span class="m">1</span><span class="o">)</span>
<span class="m">2</span>  ?filler X<span class="o">(</span><span class="m">9</span><span class="o">)</span>
<span class="m">10</span> <span class="nb">type</span>    X<span class="o">(</span><span class="m">2</span><span class="o">)</span>
<span class="m">13</span> data    X<span class="o">(</span><span class="m">28</span><span class="o">)</span>
</pre></div>
</div>
</dd>
<dt>Example when the identification item is different for each record</dt>
<dd><p class="first">When items used for identification differ for each record, all fields used for identification are defined in the record identification field.
In the condition definition section of each record, a condition for identifying the record is defined.</p>
<p>In this example, records are identified by the following rules:</p>
<ul class="simple">
<li>Header record type if dataKbn is 1.</li>
<li>Data1 record type if dataKbn is 2 and type is 01.</li>
<li>Data2 record type if dataKbn is 2 and type is 02.</li>
</ul>
<div class="last highlight-bash"><div class="highlight"><pre><span></span>file-type:        <span class="s2">&quot;Fixed&quot;</span> <span class="c1"># Fixed-length</span>
text-encoding:    <span class="s2">&quot;MS932&quot;</span> <span class="c1"># Character encoding of the string type field</span>
record-length:    <span class="m">40</span>      <span class="c1"># Length of each record</span>
record-separator: <span class="s2">&quot;\r\n&quot;</span>  <span class="c1"># Carriage return and Line feed (crlf)</span>

<span class="c1"># Define record identification field</span>
<span class="o">[</span>Classifier<span class="o">]</span>
<span class="m">1</span>   dataKbn X<span class="o">(</span><span class="m">1</span><span class="o">)</span>      <span class="c1"># First 1 byte</span>
<span class="m">10</span>  <span class="nb">type</span>    X<span class="o">(</span><span class="m">2</span><span class="o">)</span>      <span class="c1"># 2 bytes from the 10th byte</span>

<span class="c1"># Header</span>
<span class="o">[</span>header<span class="o">]</span>
<span class="nv">dataKbn</span> <span class="o">=</span> <span class="s2">&quot;1&quot;</span>
<span class="m">1</span>  dataKbn X<span class="o">(</span><span class="m">1</span><span class="o">)</span>
<span class="m">2</span>  ?filler X<span class="o">(</span><span class="m">39</span><span class="o">)</span>

<span class="o">[</span>data1<span class="o">]</span>
<span class="nv">dataKbn</span> <span class="o">=</span> <span class="s2">&quot;2&quot;</span>
<span class="nb">type</span>    <span class="o">=</span> <span class="s2">&quot;01&quot;</span>
<span class="m">1</span>  dataKbn X<span class="o">(</span><span class="m">1</span><span class="o">)</span>
<span class="m">2</span>  ?filler X<span class="o">(</span><span class="m">9</span><span class="o">)</span>
<span class="m">10</span> <span class="nb">type</span>    X<span class="o">(</span><span class="m">2</span><span class="o">)</span>
<span class="m">13</span> data    X<span class="o">(</span><span class="m">28</span><span class="o">)</span>

<span class="o">[</span>data2<span class="o">]</span>
<span class="nv">dataKbn</span> <span class="o">=</span> <span class="s2">&quot;2&quot;</span>
<span class="nb">type</span>    <span class="o">=</span> <span class="s2">&quot;02&quot;</span>
<span class="m">1</span>  dataKbn X<span class="o">(</span><span class="m">1</span><span class="o">)</span>
<span class="m">2</span>  ?filler X<span class="o">(</span><span class="m">9</span><span class="o">)</span>
<span class="m">10</span> <span class="nb">type</span>    X<span class="o">(</span><span class="m">2</span><span class="o">)</span>
<span class="m">13</span> data    X<span class="o">(</span><span class="m">28</span><span class="o">)</span>
</pre></div>
</div>
</dd>
</dl>
</div>
<div class="section" id="sample-collection-of-variable-variable-length-multi-format-definition">
<h1>7.4.2.3.1.1.4.2.2. Sample Collection of Variable (Variable Length) Multi Format Definition<a class="headerlink" href="#sample-collection-of-variable-variable-length-multi-format-definition" title="Permalink to this headline">¶</a></h1>
<p>This section describes the definition method for multi-format for variable (variable length) data.</p>
<dl class="docutils">
<dt>Example of identifying format with a single field</dt>
<dd><p class="first">When a single field is a condition, if the field value matches the condition defined in each format, then it is processed with the record definition.</p>
<p>In this example, records are identified by the following rules:</p>
<ul class="simple">
<li>Header record type if dataKbn is 1.</li>
<li>Data record type if dataKbn is 2.</li>
</ul>
<div class="last highlight-bash"><div class="highlight"><pre><span></span>file-type:        <span class="s2">&quot;Variable&quot;</span> <span class="c1"># Variable length</span>
text-encoding:    <span class="s2">&quot;MS932&quot;</span>    <span class="c1"># Character encoding of the string type field</span>
record-separator: <span class="s2">&quot;\r\n&quot;</span>     <span class="c1"># Carriage return and Line feed (crlf)</span>
field-separator:  <span class="s2">&quot;,&quot;</span>        <span class="c1"># csv</span>


<span class="c1"># Define record identification field</span>
<span class="o">[</span>Classifier<span class="o">]</span>
<span class="m">1</span> dataKbn X

<span class="c1"># Define the header record</span>
<span class="o">[</span>header<span class="o">]</span>
<span class="nv">dataKbn</span> <span class="o">=</span> <span class="s2">&quot;1&quot;</span>
<span class="m">1</span> dataKbn X
<span class="m">2</span> data    X

<span class="c1"># Define data record</span>
<span class="o">[</span>data<span class="o">]</span>
<span class="nv">dataKbn</span> <span class="o">=</span> <span class="s2">&quot;2&quot;</span>
<span class="m">1</span> dataKbn X
<span class="m">2</span> data    X
</pre></div>
</div>
</dd>
<dt>Example of identifying format with multiple fields</dt>
<dd><p class="first">When a record is identified by multiple of fields, the processing is performed by the record definition if all conditions are satisfied.</p>
<p>In this example, records are identified by the following rules:</p>
<ul class="simple">
<li>ParentData record type if dataKbn is 1 and type is 01.</li>
<li>ChildData record type if dataKbn is 2 and type is 02.</li>
</ul>
<div class="last highlight-bash"><div class="highlight"><pre><span></span>file-type:        <span class="s2">&quot;Variable&quot;</span> <span class="c1"># Variable length</span>
text-encoding:    <span class="s2">&quot;MS932&quot;</span>    <span class="c1"># Character encoding of the string type field</span>
record-separator: <span class="s2">&quot;\r\n&quot;</span>     <span class="c1"># Carriage return and Line feed (crlf)</span>
field-separator:  <span class="s2">&quot;,&quot;</span>        <span class="c1"># csv</span>

<span class="c1"># Define record identification field</span>
<span class="o">[</span>Classifier<span class="o">]</span>
<span class="m">1</span> dataKbn X
<span class="m">3</span> <span class="nb">type</span>    X

<span class="o">[</span>parentData<span class="o">]</span>
<span class="nv">dataKbn</span> <span class="o">=</span> <span class="s2">&quot;1&quot;</span>
<span class="nb">type</span>    <span class="o">=</span> <span class="s2">&quot;01&quot;</span>
<span class="m">1</span> dataKbn X
<span class="m">2</span> ?filler X
<span class="m">3</span> <span class="nb">type</span>    X
<span class="m">4</span> data    X

<span class="o">[</span>childData<span class="o">]</span>
<span class="nv">dataKbn</span> <span class="o">=</span> <span class="s2">&quot;1&quot;</span>
<span class="nb">type</span>    <span class="o">=</span> <span class="s2">&quot;02&quot;</span>
<span class="m">1</span> dataKbn X
<span class="m">2</span> ?filler X
<span class="m">3</span> <span class="nb">type</span>    X
<span class="m">4</span> data    X
</pre></div>
</div>
</dd>
<dt>Example when the identification item is different for each record</dt>
<dd><p class="first">When items used for identification differ for each record, all fields used for identification are defined in the record identification field.
In the condition definition section of each record, a condition for identifying the record is defined.</p>
<p>In this example, records are identified by the following rules:</p>
<ul class="simple">
<li>Header record type if dataKbn is 1.</li>
<li>Data1 record type if dataKbn is 2 and type is 01.</li>
<li>Data2 record type if dataKbn is 2 and type is 02.</li>
</ul>
<div class="last highlight-bash"><div class="highlight"><pre><span></span>file-type:        <span class="s2">&quot;Variable&quot;</span> <span class="c1"># Variable length</span>
text-encoding:    <span class="s2">&quot;MS932&quot;</span>    <span class="c1"># Character encoding of the string type field</span>
record-separator: <span class="s2">&quot;\r\n&quot;</span>     <span class="c1"># Carriage return and Line feed (crlf)</span>
field-separator:  <span class="s2">&quot;,&quot;</span>        <span class="c1"># csv</span>

<span class="c1"># Define record identification field</span>
<span class="o">[</span>Classifier<span class="o">]</span>
<span class="m">1</span>   dataKbn X
<span class="m">3</span>   <span class="nb">type</span>    X

<span class="c1"># Header</span>
<span class="o">[</span>header<span class="o">]</span>
<span class="nv">dataKbn</span> <span class="o">=</span> <span class="s2">&quot;1&quot;</span>
<span class="m">1</span> dataKbn X
<span class="m">2</span> ?filler X

<span class="o">[</span>data1<span class="o">]</span>
<span class="nv">dataKbn</span> <span class="o">=</span> <span class="s2">&quot;2&quot;</span>
<span class="nb">type</span>    <span class="o">=</span> <span class="s2">&quot;01&quot;</span>
<span class="m">1</span> dataKbn X
<span class="m">2</span> ?filler X
<span class="m">3</span> <span class="nb">type</span>    X
<span class="m">4</span> data    X

<span class="o">[</span>data2<span class="o">]</span>
<span class="nv">dataKbn</span> <span class="o">=</span> <span class="s2">&quot;2&quot;</span>
<span class="nb">type</span>    <span class="o">=</span> <span class="s2">&quot;02&quot;</span>
<span class="m">1</span> dataKbn X
<span class="m">2</span> ?filler X
<span class="m">3</span> <span class="nb">type</span>    X
<span class="m">4</span> data    X
</pre></div>
</div>
</dd>
</dl>
<dl class="docutils" id="data-format-variable-title-sample">
<dt>Example of using title record</dt>
<dd><p class="first">For variable length file With <a class="reference internal" href="format_definition.html#data-format-requires-title"><span>title record</span></a> , defining record identification conditions for title records is not required.</p>
<p>When the format other than title record is a single format, definition of record identifier ( <code class="docutils literal"><span class="pre">Classifier</span></code> ) is not required as shown in the example below.
The layout definition of the title record is defined with <code class="docutils literal"><span class="pre">Title</span></code>  as the record type name.</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="c1"># If requires-title is true, the first line is read and written as the title.</span>
requires-title: <span class="nb">true</span>

<span class="c1"># Title-specific record type The first line is read and written with this record type.</span>
<span class="o">[</span>Title<span class="o">]</span>
<span class="m">1</span>   Kubun      N
<span class="m">2</span>   Name       N
<span class="m">3</span>   Publisher  N
<span class="m">4</span>   Authors    N
<span class="m">5</span>   Price      N

<span class="c1"># Data record type. The lines after the first line are read and written with this record type.</span>
<span class="o">[</span>DataRecord<span class="o">]</span>
<span class="m">1</span>   Kubun      X
<span class="m">2</span>   Name       N
<span class="m">3</span>   Publisher  N
<span class="m">4</span>   Authors    N
<span class="m">5</span>   Price      N
</pre></div>
</div>
<p>When the format other than title record is multi-format, definition of record identifier ( <code class="docutils literal"><span class="pre">Classifier</span></code> ) is required as shown in the example below.
For the record definition whose record type indicating the title record is  <code class="docutils literal"><span class="pre">Title</span></code> , the condition definition required for multi-format is not required.</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span>file-type:    <span class="s2">&quot;Variable&quot;</span>     <span class="c1"># Variable length</span>
text-encoding:     <span class="s2">&quot;ms932&quot;</span>   <span class="c1"># File encoding</span>
record-separator:  <span class="s2">&quot;\r\n&quot;</span>    <span class="c1"># Carriage return and Line feed line break</span>
field-separator:   <span class="s2">&quot;,&quot;</span>       <span class="c1"># Field separator character</span>
quoting-delimiter: <span class="s2">&quot;\&quot;&quot;</span>      <span class="c1"># Enclosing character</span>
requires-title: <span class="nb">true</span>         <span class="c1"># Read/write first line as title</span>


<span class="o">[</span>Classifier<span class="o">]</span>
<span class="m">1</span>  Kubun X                   <span class="c1"># Record type identification field (data classification)</span>
                             <span class="c1"># 1: Data, 2: Trailer</span>

<span class="c1"># Title-specific record type Multi-format does not require format application conditions.</span>
<span class="o">[</span>Title<span class="o">]</span>
<span class="m">1</span>   Kubun      N  <span class="s2">&quot;Data partition&quot;</span>
<span class="m">2</span>   Name       N  <span class="s2">&quot;Book title&quot;</span>
<span class="m">3</span>   Publisher  N  <span class="s2">&quot;Publisher&quot;</span>
<span class="m">4</span>   Authors    N  <span class="s2">&quot;Authors&quot;</span>
<span class="m">5</span>   Price      N  <span class="s2">&quot;Price&quot;</span>

<span class="o">[</span>DataRecord<span class="o">]</span>                 <span class="c1"># Data record type</span>
  <span class="nv">Kubun</span> <span class="o">=</span> <span class="s2">&quot;1&quot;</span>                <span class="c1"># Data format application conditions</span>
<span class="m">1</span>   Kubun      X             <span class="c1"># Data partition</span>
<span class="m">2</span>   Name       N             <span class="c1"># Book title</span>
<span class="m">3</span>   Publisher  N             <span class="c1"># Publisher</span>
<span class="m">4</span>   Authors    N             <span class="c1"># Authors</span>
<span class="m">5</span>   Price      N             <span class="c1"># Price</span>

<span class="o">[</span>TrailerRecord<span class="o">]</span>              <span class="c1"># Trailer record type</span>
  <span class="nv">Kubun</span> <span class="o">=</span> <span class="s2">&quot;2&quot;</span>                <span class="c1"># Trailer format application conditions</span>
<span class="m">1</span>   Kubun      X             <span class="c1"># Data partition</span>
<span class="m">2</span>   RecordNum  X             <span class="c1"># The total number of cases</span>
</pre></div>
</div>
<div class="last admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">To change the record type name of the title record from  <code class="docutils literal"><span class="pre">Title</span></code> , use <a class="reference internal" href="format_definition.html#data-format-title-type-name"><span>data_format-title_type_name directive</span></a> .
In that case, change the record type name that indicates the title record from  <code class="docutils literal"><span class="pre">Title</span></code>  to the value configured in <a class="reference internal" href="format_definition.html#data-format-title-type-name"><span>data_format-title_type_name directive</span></a> .</p>
</div>
</dd>
</dl>
</div>


           </div>
           <div class="articleComments">
            
           </div>
          </div>
          <footer>

    <hr/>

    <div role="contentinfo">
        <p>
            &copy; Copyright 2010-2021, TIS Inc.
        </p>
    </div>
    Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org">Read the Docs</a>.

</footer>

        </div>
      </div>

    </section>

  </div>
  


  

    <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'../../../../../',
            VERSION:'5u19',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true,
            SOURCELINK_SUFFIX: ''
        };
    </script>
      <script type="text/javascript" src="../../../../../_static/jquery.js"></script>
      <script type="text/javascript" src="../../../../../_static/underscore.js"></script>
      <script type="text/javascript" src="../../../../../_static/doctools.js"></script>
      <script type="text/javascript" src="../../../../../_static/custom.js"></script>

  

  
  
    <script type="text/javascript" src="../../../../../_static/js/theme.js"></script>
  

  
  
  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>
   

</body>
</html>