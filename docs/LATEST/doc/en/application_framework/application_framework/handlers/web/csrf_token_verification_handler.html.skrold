


<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->
<head>
  <meta charset="utf-8">
  <meta http-equiv='content-language' content='ja'>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>6.2.18. CSRF Token Verification Handler &mdash; ∇Nablarch  5u19 documentation</title>
  

  
  
  
  

  

  
  
    

  

  
  
    <link rel="stylesheet" href="../../../../_static/custom.css" type="text/css" />
  

  

  
  <link rel="canonical" href="https://nablarch.github.io/docs/LATEST/doc/application_framework/application_framework/handlers/web/csrf_token_verification_handler.html" />
  
    <link rel="top" title="∇Nablarch  5u19 documentation" href="../../../../index.html"/>
        <link rel="up" title="6.2. Web Application Dedicated Handler" href="index.html"/>
        <link rel="next" title="6.2.19. Health Check Endpoint Handler" href="health_check_endpoint_handler.html"/>
        <link rel="prev" title="6.2.17. Hot Deploy Handler" href="hot_deploy_handler.html"/>
 

  
  <script src="../../../../_static/js/modernizr.min.js"></script>

</head>

<body class="wy-body-for-nav" role="document">

   
  <div class="wy-grid-for-nav">

    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search">
          
  
  <a href="../../../../index.html" id="sidebar-title" class="icon"> ∇Nablarch 
  

  
    <div id="sidebar-version">Version: 5u19</div>
  </a>

  <div role="search">
    <form id="google-search-form" class="wy-form" method="get" action="https://www.google.co.jp/search">
      <input type="text" name="text" placeholder="Search docs on google" id="text"/>
      <input type="hidden" name="q" id="q"/>
    </form>
  </div>
    
    

        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
  
  
    <ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../../../about_nablarch/index.html">What is the Nablarch?</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../about_nablarch/concept.html">Nablarch Concept</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../about_nablarch/concept.html#robustness">Robustness</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../about_nablarch/concept.html#testability">Testability</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../about_nablarch/concept.html#ready-to-use">Ready-to-Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../about_nablarch/mvn_module.html">Module List of Nablarch</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../about_nablarch/license.html">Information on Nablarch License</a></li>
</ul>
</li>
<li class="toctree-l1 current"><a class="reference internal" href="../../../index.html">Nablarch Application Framework</a><ul class="current">
<li class="toctree-l2 current"><a class="reference internal" href="../../index.html">Application Framework</a><ul class="current">
<li class="toctree-l3"><a class="reference internal" href="../../nablarch/index.html">1. What is Nablarch Application Framework?</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../web/index.html">2. Web Application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../web_service/index.html">3. Web Service</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../batch/index.html">4. Batch Application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../messaging/index.html">5. Messaging</a></li>
<li class="toctree-l3 current"><a class="reference internal" href="../index.html">6. Standard Handler Provided by Nablarch</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../libraries/index.html">7. Libraries Provided by Nablarch</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../blank_project/index.html">8. Blank Project</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../setting_guide/index.html">9. Nablarch Application Framework Configuration Guide</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../configuration/index.html">10. Default Configuration List</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../cloud_native/index.html">11. Nablarch Cloud Native Support</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../adaptors/index.html">Adaptor</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/log_adaptor.html">log Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/router_adaptor.html">Routing Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/webspheremq_adaptor.html">IBM WebSphere MQ Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/jaxrs_adaptor.html">JAX-RS Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/doma_adaptor.html">Doma Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/jsr310_adaptor.html">JSR310(Date and Time API)Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/mail_sender_freemarker_adaptor.html">E-mail FreeMarker Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/mail_sender_thymeleaf_adaptor.html">E-mail Thymeleaf Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/mail_sender_velocity_adaptor.html">E-mail Velocity Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/web_thymeleaf_adaptor.html">Web Application Thymeleaf Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/lettuce_adaptor.html">Lettuce Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/slf4j_adaptor.html">SLF4J Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/micrometer_adaptor.html">Micrometer Adapter</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../example/index.html">Example</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../example/index.html#procedure-to-build-the-environment">Procedure to build the environment</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../example/index.html#application-execution-procedure">Application execution procedure</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../extension_components/index.html">Nablarch extension component</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/report/index.html">1. Form library</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/workflow/doc/index.html">2. Workflow library</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/workflow/tool/index.html">3. Workflow definition data generation tool</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/etl/index.html">4. ETL</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/etl/etl_maven_plugin.html">5. ETL Maven plugin</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../development_tools/index.html">Nablarch development tools</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html">1. Efficient Java Static Checks</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html#conduct-syntax-check">1.1. Conduct syntax check</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html#unify-the-format">1.2. Unify the format</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html#check-if-unauthorized-apis-are-being-used">1.3. Check if unauthorized APIs are being used</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/ui_dev/index.html">2. Front-end UI development platform for advanced users</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/testing_framework/index.html">3. Testing framework</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/testing_framework/guide/development_guide/05_UnitTestGuide/index.html">3.1. How to Execute Unit Tests</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/testing_framework/guide/development_guide/06_TestFWGuide/index.html">3.2. How to Use the Automated Test Framework</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/testing_framework/guide/development_guide/08_TestTools/index.html">3.3. Tools Used in the Programming Phase</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/toolbox/index.html">4. Useful Tools When Developing Applications</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/toolbox/JspStaticAnalysis/index.html">4.1. JSP Static Analysis Tool</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/toolbox/SqlExecutor/SqlExecutor.html">4.2. Nablarch SQL Executor</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/toolbox/JspVerifier/JspVerifier.html">4.3. Job Screen JSP Validation Tool</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../examples/index.html">Nablarch Implementation Examples</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/01/index.html">Sample Password Encryption Function Using Database</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/0101_PBKDF2PasswordEncryptor.html">Sample Password Encryption Function Using PBKDF2</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/02/index.html">Extended Validation Functions</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#email-address-validation">Email address validation</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#validation-of-japan-telephone-numbers">Validation of Japan telephone numbers</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#code-value-validation">Code value validation</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/03/index.html">Display a List of Search Results</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#how-to-use">How to Use</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchinfo-class">ListSearchInfo class</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchresult-tag">listSearchResult tag</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#sort-search-results">Sort search results</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#how-to-implement-displaying-a-list-of-all-search-results-on-a-single-screen">How to implement displaying a list of all search results on a single screen</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#how-to-implement-the-initial-display-of-search-results-with-the-default-search-conditions">How to implement the initial display of search results with the default search conditions</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#default-settings-for-the-search-result-list-display-function">Default settings for the search result list display function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#how-to-import-a-sample-implementation-tag-file-into-the-business-application">How to import a sample implementation (tag file) into the business application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#tag-reference">Tag Reference</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/04/index.html">Extended Formatter Functions</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/04/0401_ExtendedDataFormatter.html">Data Formatter Expansion</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/04/0402_ExtendedFieldType.html">Field Type Expansion in the Data Formatter Function</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/05/index.html">Sample File Management Function Using Database</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#functions">Functions</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/06/index.html">CAPTCHA Function Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/06_Captcha_guide.html">How to Incorporate the CAPTCHA Function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/07/index.html">Sample UserAgent Information Acquisition Function</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#description-of-configuration">Description of configuration</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#use-case">Use case</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/08/index.html">Sample of HTML Email Send Function</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#request">Request</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#implementation-examples">Implementation examples</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/09/index.html">How to Use a Sample to Send a Digitally Signed Email Using Bouncycastle</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#environment-preparation">Environment preparation</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#structure-of-digitally-signed-email-send-function">Structure of digitally signed email send function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#preparation-of-configuration-file">Preparation of configuration file</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#execution">Execution</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/10/index.html">How to Use the Log Aggregation Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/10/index.html#list-of-samples-provided">List of samples provided</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/11/index.html">Messaging Platform Test Simulator Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#uses">Uses</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#features">Features</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#request">Request</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#how-to-use">How to use</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#expansion-example">Expansion example</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../nablarch_api/index.html">Nablarch API</a></li>
</ul>

  

        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" role="navigation" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../../../../index.html">∇Nablarch </a>
        
      </nav>


      
      <div class="wy-nav-content">
        <div class="rst-content">
          

 



<div role="navigation" aria-label="breadcrumbs navigation">
  <ul class="wy-breadcrumbs">
    <li><a href="../../../../index.html">Docs</a> &raquo;</li>
      
          <li><a href="../../../index.html">Nablarch Application Framework</a> &raquo;</li>
      
          <li><a href="../../index.html">Application Framework</a> &raquo;</li>
      
          <li><a href="../index.html">6. Standard Handler Provided by Nablarch</a> &raquo;</li>
      
          <li><a href="index.html">6.2. Web Application Dedicated Handler</a> &raquo;</li>
      
    <li>6.2.18. CSRF Token Verification Handler</li>
    <li class="wy-breadcrumbs-aside">
      <a href="https://github.com/nablarch" class="fa fa-github">GitHub</a>
    </li>
    <li class="wy-breadcrumbs-aside">
        <a href="https://nablarch.github.io/docs/LATEST/doc/index.html" class="ja">日本語</a>
    </li>
  </ul>
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  <div class="section" id="csrf-token-verification-handler">
<span id="id1"></span><h1>6.2.18. CSRF Token Verification Handler<a class="headerlink" href="#csrf-token-verification-handler" title="Permalink to this headline">¶</a></h1>
<div class="contents local topic" id="table-of-contents">
<p class="topic-title first">Table of contents</p>
<ul class="simple">
<li><a class="reference internal" href="#handler-class-name" id="id2">Handler class name</a></li>
<li><a class="reference internal" href="#module-list" id="id3">Module list</a></li>
<li><a class="reference internal" href="#constraints" id="id4">Constraints</a></li>
<li><a class="reference internal" href="#generate-and-verify-csrf-token" id="id5">Generate and verify CSRF token</a></li>
<li><a class="reference internal" href="#regeneration-of-csrf-tokens" id="id6">Regeneration of CSRF tokens</a></li>
</ul>
</div>
<p>This handler provides a general CSRF (Cross Site Request Forgeries) measure using tokens.
This handler can be used to implement the CSRF measure for <a class="reference internal" href="../../web/index.html#web-application"><span>web application</span></a> and <a class="reference internal" href="../../web_service/rest/index.html#restful-web-service"><span>RESTful web service</span></a>.</p>
<p>If you include this handler in the handler configuration, the CSRF token is generated and verified in the request process,
and if you use <a class="reference internal" href="../../libraries/tag.html#tag"><span>JSP Custom Tags</span></a>, the CSRF token is automatically output to the screen.
Therefore, it is possible to implement CSRF measures for <a class="reference internal" href="../../web/index.html#web-application"><span>web application</span></a>
without the need for application programmers to implement them.</p>
<p>To enable CSRF measures in <a class="reference internal" href="../../web_service/rest/index.html#restful-web-service"><span>RESTful web service</span></a>,
this handler obtains a CSRF token from the request header or request parameters.
The framework provides a utility class (
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/web/csrf/CsrfTokenUtil.html" title="nablarch.common.web.csrf.CsrfTokenUtil">CsrfTokenUtil</a> ) for retrieving the generated CSRF token,
so you can implement a mechanism to send the CSRF token to the client, depending on the architecture of your project.</p>
<p>Since this handler stores the CSRF token in the session store, the use of <a class="reference internal" href="../../libraries/session_store.html#session-store"><span>Session Store</span></a> is required when using this handler.</p>
<p>This handler performs the following processes.</p>
<ul class="simple">
<li>Obtain a CSRF token from the session store</li>
<li>If it cannot be obtained, it generates a CSRF token and stores it in the session store</li>
<li>Determines whether or not the HTTP request is target to verification</li>
<li>If it is a target of verification, the CSRF token is acquired from the HTTP request, and verification is performed</li>
<li>If the validation fails, the response of BadRequest(400) is returned</li>
<li>If the validation succeeds, the process is moved to the next handler</li>
</ul>
<p>The process flow is as follows.</p>
<a class="reference internal image-reference" href="../../../../_images/flow26.png"><img alt="../../../../_images/flow26.png" src="../../../../_images/flow26.png" /></a>
<div class="section" id="handler-class-name">
<h2><a class="toc-backref" href="#id2">6.2.18.1. Handler class name</a><a class="headerlink" href="#handler-class-name" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/handler/CsrfTokenVerificationHandler.html" title="nablarch.fw.web.handler.CsrfTokenVerificationHandler">nablarch.fw.web.handler.CsrfTokenVerificationHandler</a></li>
</ul>
</div>
<div class="section" id="module-list">
<h2><a class="toc-backref" href="#id3">6.2.18.2. Module list</a><a class="headerlink" href="#module-list" title="Permalink to this headline">¶</a></h2>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>com.nablarch.framework<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>nablarch-fw-web<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</pre></div>
</div>
</div>
<div class="section" id="constraints">
<h2><a class="toc-backref" href="#id4">6.2.18.3. Constraints</a><a class="headerlink" href="#constraints" title="Permalink to this headline">¶</a></h2>
<dl class="docutils">
<dt>Place this handler after <a class="reference internal" href="SessionStoreHandler.html#session-store-handler"><span>Session Variable Store Handler</span></a></dt>
<dd>In order to store the CSRF token in the session store,
this handler needs to be placed after <a class="reference internal" href="SessionStoreHandler.html#session-store-handler"><span>Session Variable Store Handler</span></a>.</dd>
<dt>When using <a class="reference internal" href="../../libraries/tag.html#tag"><span>JSP Custom Tags</span></a>, this handler should be placed after <a class="reference internal" href="nablarch_tag_handler.html#nablarch-tag-handler"><span>Nablarch Custom Tag Control Handler</span></a>.</dt>
<dd>When using <a class="reference internal" href="../../libraries/tag.html#tag"><span>JSP Custom Tags</span></a>, <a class="reference internal" href="../../libraries/tag.html#tag-hidden-encryption"><span>Encryption of data held in the client (hidden encryption)</span></a> is used to output the CSRF token to the screen,
so this handler needs to be placed after <a class="reference internal" href="nablarch_tag_handler.html#nablarch-tag-handler"><span>Nablarch Custom Tag Control Handler</span></a>.</dd>
</dl>
</div>
<div class="section" id="generate-and-verify-csrf-token">
<span id="csrf-token-verification-handler-generation-verification"></span><h2><a class="toc-backref" href="#id5">6.2.18.4. Generate and verify CSRF token</a><a class="headerlink" href="#generate-and-verify-csrf-token" title="Permalink to this headline">¶</a></h2>
<p>When this handler is added to the handler configuration, the CSRF token is generated and verified.
The following is an example of how to use <a class="reference internal" href="../../libraries/tag.html#tag"><span>JSP Custom Tags</span></a>.</p>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="c">&lt;!-- Handler configuration --&gt;</span>
<span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;webFrontController&quot;</span> <span class="na">class=</span><span class="s">&quot;nablarch.fw.web.servlet.WebFrontController&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;handlerQueue&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;list&gt;</span>
      <span class="c">&lt;!-- Other handlers are omitted --&gt;</span>

      <span class="c">&lt;!-- Session store handler --&gt;</span>
      <span class="nt">&lt;component-ref</span> <span class="na">name=</span><span class="s">&quot;sessionStoreHandler&quot;</span> <span class="nt">/&gt;</span>

      <span class="c">&lt;!-- Nablarch custom tag control handler --&gt;</span>
      <span class="nt">&lt;component-ref</span> <span class="na">name=</span><span class="s">&quot;nablarchTagHandler&quot;</span><span class="nt">/&gt;</span>

      <span class="c">&lt;!-- CSRF token verification handler --&gt;</span>
      <span class="nt">&lt;component-ref</span> <span class="na">name=</span><span class="s">&quot;csrfTokenVerificationHandler&quot;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;/list&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/component&gt;</span>

<span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;csrfTokenVerificationHandler&quot;</span>
           <span class="na">class=</span><span class="s">&quot;nablarch.fw.web.handler.CsrfTokenVerificationHandler&quot;</span> <span class="nt">/&gt;</span>
</pre></div>
</div>
<p>By default, the following processes are performed.</p>
<dl class="docutils">
<dt>Obtain a CSRF token from the session store</dt>
<dd><ul class="first last simple">
<li>The name to use when storing the CSRF token in the session store is <code class="docutils literal"><span class="pre">nablarch_csrf-token</span></code>.</li>
</ul>
</dd>
<dt>If it cannot be obtained, it generates a CSRF token and stores it in the session store</dt>
<dd><ul class="first last simple">
<li>CSRF token generation is done by <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/handler/csrf/CsrfTokenGenerator.html" title="nablarch.fw.web.handler.csrf.CsrfTokenGenerator">CsrfTokenGenerator</a>.
By default, the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/handler/csrf/UUIDv4CsrfTokenGenerator.html" title="nablarch.fw.web.handler.csrf.UUIDv4CsrfTokenGenerator">UUIDv4CsrfTokenGenerator</a> is used to generate CSRF tokens using version 4 UUID.</li>
<li>CSRF tokens are stored in the default session store. (Store CSRF tokens without specifying the name of the session store.)</li>
</ul>
</dd>
<dt>Determines whether or not the HTTP request is target to verification</dt>
<dd><ul class="first last simple">
<li>The <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/handler/csrf/VerificationTargetMatcher.html" title="nablarch.fw.web.handler.csrf.VerificationTargetMatcher">VerificationTargetMatcher</a> determines whether the HTTP request is the target of the verification or not.
By default, it uses the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/handler/csrf/HttpMethodVerificationTargetMatcher.html" title="nablarch.fw.web.handler.csrf.HttpMethodVerificationTargetMatcher">HttpMethodVerificationTargetMatcher</a>, which determines if an HTTP request is a verification target from the HTTP method.</li>
<li>The <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/handler/csrf/HttpMethodVerificationTargetMatcher.html" title="nablarch.fw.web.handler.csrf.HttpMethodVerificationTargetMatcher">HttpMethodVerificationTargetMatcher</a> determines the HTTP method <code class="docutils literal"><span class="pre">GET</span></code> <code class="docutils literal"><span class="pre">HEAD</span></code> <code class="docutils literal"><span class="pre">TRACE</span></code> <code class="docutils literal"><span class="pre">OPTIONS</span></code> as <strong>outside</strong> the CSRF token for verification. (i.e., POST, PUT, etc. are targeted for verification.)</li>
</ul>
</dd>
<dt>If it is a target of verification, the CSRF token is acquired from the HTTP request, and verification is performed</dt>
<dd><ul class="first last">
<li><p class="first">The name to be used to store the CSRF token in the HTTP request is as follows</p>
<div class="line-block">
<div class="line">HTTP request header <code class="docutils literal"><span class="pre">X-CSRF-TOKEN</span></code></div>
<div class="line">HTTP request parameter <code class="docutils literal"><span class="pre">csrf-token</span></code></div>
</div>
</li>
</ul>
</dd>
<dt>If the validation succeeds, the process is moved to the next handler, and if the validation fails, the response of BadRequest(400) is returned</dt>
<dd><ul class="first last simple">
<li>If the verification fails, <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/handler/csrf/VerificationFailureHandler.html" title="nablarch.fw.web.handler.csrf.VerificationFailureHandler">VerificationFailureHandler</a> handles it.
By default, BadRequest(400) BadRequest(400) response is generated by using <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/handler/csrf/BadRequestVerificationFailureHandler.html" title="nablarch.fw.web.handler.csrf.BadRequestVerificationFailureHandler">BadRequestVerificationFailureHandler</a>.</li>
</ul>
</dd>
</dl>
<p>You can change the default behavior by changing the settings. An example is shown below.</p>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.fw.web.handler.CsrfTokenVerificationHandler&quot;</span><span class="nt">&gt;</span>
  <span class="c">&lt;!-- Interface for CSRF token generation --&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;csrfTokenGenerator&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;com.sample.CustomCsrfTokenGenerator&quot;</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
  <span class="c">&lt;!-- Interface to determine if an HTTP request is a target of CSRF token verification --&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;verificationTargetMatcher&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;com.sample.CustomVerificationTargetMatcher&quot;</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
  <span class="c">&lt;!-- Interface for handling CSRF token validation failure --&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;verificationFailureHandler&quot;</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;com.sample.CustomVerificationFailureHandler&quot;</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/component&gt;</span>

<span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;webConfig&quot;</span> <span class="na">class=</span><span class="s">&quot;nablarch.common.web.WebConfig&quot;</span><span class="nt">&gt;</span>
  <span class="c">&lt;!-- the name to use when retrieving the CSRF token from the HTTP request header  --&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;csrfTokenHeaderName&quot;</span> <span class="na">value=</span><span class="s">&quot;X-CUSTOM-CSRF-TOKEN&quot;</span> <span class="nt">/&gt;</span>
  <span class="c">&lt;!-- the name to use when retrieving the CSRF token from the HTTP request parameters --&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;csrfTokenParameterName&quot;</span> <span class="na">value=</span><span class="s">&quot;custom-csrf-token&quot;</span> <span class="nt">/&gt;</span>
  <span class="c">&lt;!-- the name used to store the CSRF token in the session store --&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;csrfTokenSessionStoredVarName&quot;</span> <span class="na">value=</span><span class="s">&quot;custom-csrf-token&quot;</span> <span class="nt">/&gt;</span>
  <span class="c">&lt;!-- the name of the session store where the CSRF tokens are stored --&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;csrfTokenSavedStoreName&quot;</span> <span class="na">value=</span><span class="s">&quot;customStore&quot;</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
<div class="admonition important">
<p class="first admonition-title">Important</p>
<p>When request unit testing is performed on an application using this handler using the testing framework,
the CSRF token validation fails because the request does not go through the correct screen transition.
Since the CSRF measure is not a part of the application programmer&#8217;s implementation,
you can disable the CSRF measure in the request unit test.
You can disable the CSRF measure by replacing this handler with a handler that does not do anything in the test execution setting.
The following is an example of the configuration.</p>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="cm">/**</span>
<span class="cm"> * Handler that does not do anything.</span>
<span class="cm"> */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">NopHandler</span> <span class="kd">implements</span> <span class="n">HttpRequestHandler</span> <span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="n">HttpResponse</span> <span class="nf">handle</span><span class="o">(</span><span class="n">HttpRequest</span> <span class="n">request</span><span class="o">,</span> <span class="n">ExecutionContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">context</span><span class="o">.</span><span class="na">handleNext</span><span class="o">(</span><span class="n">request</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
<div class="last highlight-xml"><div class="highlight"><pre><span></span><span class="c">&lt;!-- Override the component definition of this handler in the test configuration.</span>
<span class="c">     Overwriting is done by matching the component names. --&gt;</span>

<span class="c">&lt;!-- Disabling CSRF measures --&gt;</span>
<span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;csrfTokenVerificationHandler&quot;</span>
           <span class="na">class=</span><span class="s">&quot;com.nablarch.example.app.test.NopHandler&quot;</span> <span class="nt">/&gt;</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="regeneration-of-csrf-tokens">
<span id="csrf-token-verification-handler-regeneration"></span><h2><a class="toc-backref" href="#id6">6.2.18.5. Regeneration of CSRF tokens</a><a class="headerlink" href="#regeneration-of-csrf-tokens" title="Permalink to this headline">¶</a></h2>
<p>Suppose a malicious person somehow sends a user a CSRF token and a session ID for a session store that holds the token,
and the user logs in unaware of the token.
If the CSRF token is not regenerated, the malicious website could create a trap page with the CSRF token
and send an unintended attack request to the user by forcing him or her to click on a link.
To prevent this, we have to regenerate the CSRF token at login.</p>
<p>In order to regenerate the CSRF token, if the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/web/csrf/CsrfTokenUtil.html#regenerateCsrfToken-nablarch.fw.ExecutionContext-" title="nablarch.common.web.csrf.CsrfTokenUtil.regenerateCsrfToken(nablarch.fw.ExecutionContext)">CsrfTokenUtil.regenerateCsrfToken</a>
method is called in the request process such as an action,
the CSRF token is regenerated in the response process of this handler.</p>
<p>If the implementation destroys and regenerates the session store on login, you don&#8217;t need to use this method.
When the session store is destroyed, the CSRF token is also destroyed, and a new CSRF token is generated when the page is displayed afterwards.
If your implementation only re-generates the session ID instead of destroying the session store itself,
you must use this method to regenerate the CSRF token.</p>
</div>
</div>


           </div>
           <div class="articleComments">
            
           </div>
          </div>
          <footer>

    <hr/>

    <div role="contentinfo">
        <p>
            &copy; Copyright 2010-2021, TIS Inc.
        </p>
    </div>
    Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org">Read the Docs</a>.

</footer>

        </div>
      </div>

    </section>

  </div>
  


  

    <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'../../../../',
            VERSION:'5u19',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true,
            SOURCELINK_SUFFIX: ''
        };
    </script>
      <script type="text/javascript" src="../../../../_static/jquery.js"></script>
      <script type="text/javascript" src="../../../../_static/underscore.js"></script>
      <script type="text/javascript" src="../../../../_static/doctools.js"></script>
      <script type="text/javascript" src="../../../../_static/custom.js"></script>

  

  
  
    <script type="text/javascript" src="../../../../_static/js/theme.js"></script>
  

  
  
  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>
   

</body>
</html>