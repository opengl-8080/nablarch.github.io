


<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->
<head>
  <meta charset="utf-8">
  <meta http-equiv='content-language' content='ja'>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>Redisストア(Lettuce)アダプタ &mdash; ∇Nablarch  5u19 ドキュメント</title>
  

  
  
  
  

  

  
  
    

  

  
  
    <link rel="stylesheet" href="../../../_static/custom.css" type="text/css" />
  

  

  
  <link rel="canonical" href="https://nablarch.github.io/docs/LATEST/doc/application_framework/adaptors/lettuce_adaptor/redisstore_lettuce_adaptor.html" />
  
    <link rel="top" title="∇Nablarch  5u19 ドキュメント" href="../../../index.html"/>
        <link rel="up" title="Lettuceアダプタ" href="../lettuce_adaptor.html"/>
        <link rel="next" title="Redisヘルスチェッカ(Lettuce)アダプタ" href="redishealthchecker_lettuce_adaptor.html"/>
        <link rel="prev" title="Lettuceアダプタ" href="../lettuce_adaptor.html"/>
 

  
  <script src="../../../_static/js/modernizr.min.js"></script>

</head>

<body class="wy-body-for-nav" role="document">

   
  <div class="wy-grid-for-nav">

    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search">
          
  
  <a href="../../../index.html" id="sidebar-title" class="icon"> ∇Nablarch 
  

  
    <div id="sidebar-version">Version: 5u19</div>
  </a>

  <div role="search">
    <form id="google-search-form" class="wy-form" method="get" action="https://www.google.co.jp/search">
      <input type="text" name="text" placeholder="Search docs on google" id="text"/>
      <input type="hidden" name="q" id="q"/>
    </form>
  </div>
    
    

        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
  
  
    <ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../../about_nablarch/index.html">Nablarchについて</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../about_nablarch/concept.html">Nablarchのコンセプト</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../about_nablarch/concept.html#robustness">Robustness</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../about_nablarch/concept.html#testability">Testability</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../about_nablarch/concept.html#ready-to-use">Ready-to-Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../about_nablarch/mvn_module.html">Nablarch のモジュール一覧</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../about_nablarch/license.html">Nablarchのライセンスについて</a></li>
</ul>
</li>
<li class="toctree-l1 current"><a class="reference internal" href="../../index.html">Nablarchアプリケーションフレームワーク</a><ul class="current">
<li class="toctree-l2"><a class="reference internal" href="../../application_framework/index.html">アプリケーションフレームワーク</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../application_framework/nablarch/index.html">1. Nablarchアプリケーションフレームワークとは</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../application_framework/web/index.html">2. ウェブアプリケーション編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../application_framework/web_service/index.html">3. ウェブサービス編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../application_framework/batch/index.html">4. バッチアプリケーション編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../application_framework/messaging/index.html">5. メッセージング編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../application_framework/handlers/index.html">6. Nablarchの提供する標準ハンドラ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../application_framework/libraries/index.html">7. Nablarchが提供するライブラリ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../application_framework/blank_project/index.html">8. ブランクプロジェクト</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../application_framework/setting_guide/index.html">9. Nablarchアプリケーションフレームワーク設定ガイド</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../application_framework/configuration/index.html">10. デフォルト設定一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../application_framework/cloud_native/index.html">11. Nablarchクラウドネイティブ対応</a></li>
</ul>
</li>
<li class="toctree-l2 current"><a class="reference internal" href="../index.html">アダプタ</a><ul class="current">
<li class="toctree-l3"><a class="reference internal" href="../log_adaptor.html">logアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../router_adaptor.html">ルーティングアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../webspheremq_adaptor.html">IBM WebSphere MQアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../jaxrs_adaptor.html">JAX-RSアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../doma_adaptor.html">Domaアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../jsr310_adaptor.html">JSR310(Date and Time API)アダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../mail_sender_freemarker_adaptor.html">E-mail FreeMarkerアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../mail_sender_thymeleaf_adaptor.html">E-mail Thymeleafアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../mail_sender_velocity_adaptor.html">E-mail Velocityアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../web_thymeleaf_adaptor.html">ウェブアプリケーション Thymeleafアダプタ</a></li>
<li class="toctree-l3 current"><a class="reference internal" href="../lettuce_adaptor.html">Lettuceアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../slf4j_adaptor.html">SLF4Jアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../micrometer_adaptor.html">Micrometerアダプタ</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../example/index.html">Example</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../example/index.html#id1">環境構築手順について</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../example/index.html#id2">アプリケーションの実行手順について</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../extension_components/index.html">Nablarch拡張コンポーネント</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../extension_components/report/index.html">1. 帳票ライブラリ</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/report/index.html#id2">1.1. 概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/report/index.html#id3">1.2. 要求</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/report/index.html#id7">1.3. 構造</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/report/index.html#report-template">1.4. 実装例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../extension_components/workflow/doc/index.html">2. ワークフローライブラリ</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/workflow/doc/index.html#id3">2.1. 機能概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/workflow/doc/index.html#id6">2.2. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/workflow/doc/index.html#id7">2.3. 使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/workflow/doc/index.html#xor">2.4. XORゲートウェイの進行先ノードの判定方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/workflow/doc/index.html#workflow-multi-completion">2.5. マルチインスタンスの完了条件の判定方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../extension_components/workflow/tool/index.html">3. ワークフロー定義データ生成ツール</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/workflow/tool/index.html#id3">3.1. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/workflow/tool/index.html#id4">3.2. 使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../extension_components/etl/index.html">4. ETL</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/etl/index.html#id3">4.1. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/etl/index.html#etl-phase">4.2. ETLの各フェーズの仕様</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/etl/index.html#id5">4.3. ETLを使用するバッチの設計ポイント</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/etl/index.html#id9">4.4. 使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/etl/index.html#id18">4.5. 拡張例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../extension_components/etl/etl_maven_plugin.html">5. ETL Mavenプラグイン</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/etl/etl_maven_plugin.html#id2">5.1. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/etl/etl_maven_plugin.html#id3">5.2. 使用方法</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../development_tools/index.html">Nablarch開発ツール</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../development_tools/java_static_analysis/index.html">1. 効率的なJava静的チェック</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/java_static_analysis/index.html#code-analysis">1.1. 構文チェックを行う</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/java_static_analysis/index.html#code-format">1.2. フォーマットを統一する</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/java_static_analysis/index.html#api">1.3. 許可していないAPIが使用されていないかチェックする</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../development_tools/ui_dev/index.html">2. フロントエンド上級者向けのUI開発基盤</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/ui_dev/doc/index.html">2.1. Nablarch UI開発基盤 解説書</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/ui_dev/guide/index.html">2.2. JSP/HTML作成ガイド</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/ui_dev/guide/widget_usage/widget_list.html">2.3. UI部品の実装サンプルで提供しているウィジェットの一覧</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../development_tools/testing_framework/index.html">3. テスティングフレームワーク</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/testing_framework/guide/development_guide/05_UnitTestGuide/index.html">3.1. 単体テスト実施方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/testing_framework/guide/development_guide/06_TestFWGuide/index.html">3.2. 自動テストフレームワークの使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/testing_framework/guide/development_guide/08_TestTools/index.html">3.3. プログラミング工程で使用するツール</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../development_tools/toolbox/index.html">4. アプリケーション開発時に使える便利なツール</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/toolbox/JspStaticAnalysis/index.html">4.1. JSP静的解析ツール</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/toolbox/SqlExecutor/SqlExecutor.html">4.2. Nablarch SQL Executor</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/toolbox/JspVerifier/JspVerifier.html">4.3. 業務画面JSP検証ツール</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../examples/index.html">Nablarch実装例集</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/01/index.html">データベースを用いたパスワード認証機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/01/0101_PBKDF2PasswordEncryptor.html">PBKDF2を用いたパスワード暗号化機能サンプル</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/01/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/01/index.html#id4">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/01/index.html#id6">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/01/index.html#id12">使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/02/index.html">バリデーション機能の拡張</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/02/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/02/index.html#extendedvalidation-mailaddressvalidator">メールアドレスバリデーション</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/02/index.html#extendedvalidation-japanesetelnumbervalidator">日本電話番号バリデーション</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/02/index.html#id12">コード値精査</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/03/index.html">検索結果の一覧表示</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#id4">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#id5">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#id8">使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#listsearchinfo">ListSearchInfoクラス</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#listsearchresult">listSearchResultタグ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#listsearchresult-sort">検索結果の並び替え</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#listsearchresult-nopaging">1画面にすべての検索結果を一覧表示する場合の実装方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#listsearchresult-defaultcondition">デフォルトの検索条件で検索した結果を初期表示する場合の実装方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#listsearchresult-setting">検索結果の一覧表示機能のデフォルト値設定</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#listsearchresult-customize">業務アプリケーションへのサンプル実装(タグファイル)の取り込み方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#listsearchresult-tagreference">タグリファレンス</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/04/index.html">フォーマッタ機能の拡張</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/04/0401_ExtendedDataFormatter.html">データフォーマッタの拡張</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/04/0402_ExtendedFieldType.html">データフォーマッタ機能におけるフィールドタイプの拡張</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/05/index.html">データベースを用いたファイル管理機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/05/index.html#id2">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/05/index.html#id6">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/05/index.html#id7">機能</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/05/index.html#id10">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/05/index.html#id15">使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/06/index.html">CAPTCHA機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/06/06_Captcha_guide.html">CAPTCHA機能の組み込み手順</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/06/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/06/index.html#id4">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/06/index.html#id6">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/06/index.html#id21">使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/07/index.html">UserAgent情報取得機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/07/index.html#id1">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/07/index.html#id3">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/07/index.html#id8">設定の記述</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/07/index.html#id11">使用例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/08/index.html">HTMLメール送信機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/08/index.html#id1">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/08/index.html#id3">要求</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/08/index.html#id6">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/08/index.html#id14">実装例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/09/index.html">bouncycastleを使用した電子署名つきメールの送信サンプルの使用方法</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/09/index.html#id3">環境準備</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/09/index.html#id4">電子署名付きメール送信機能の構造</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/09/index.html#id5">設定ファイルの準備</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/09/index.html#id7">実行方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/10/index.html">ログ集計サンプルの使用方法</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/10/index.html#id3">提供サンプル一覧</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/11/index.html">メッセージング基盤テストシミュレータサンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/11/index.html#id4">用途</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/11/index.html#id8">特徴</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/11/index.html#id12">要求</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/11/index.html#id15">使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/11/index.html#id18">拡張例</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../nablarch_api/index.html">Nablarch API</a></li>
</ul>

  

        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" role="navigation" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../../../index.html">∇Nablarch </a>
        
      </nav>


      
      <div class="wy-nav-content">
        <div class="rst-content">
          

 



<div role="navigation" aria-label="breadcrumbs navigation">
  <ul class="wy-breadcrumbs">
    <li><a href="../../../index.html">Docs</a> &raquo;</li>
      
          <li><a href="../../index.html">Nablarchアプリケーションフレームワーク</a> &raquo;</li>
      
          <li><a href="../index.html">アダプタ</a> &raquo;</li>
      
          <li><a href="../lettuce_adaptor.html">Lettuceアダプタ</a> &raquo;</li>
      
    <li>Redisストア(Lettuce)アダプタ</li>
    <li class="wy-breadcrumbs-aside">
      <a href="https://github.com/nablarch" class="fa fa-github">GitHub</a>
    </li>
    <li class="wy-breadcrumbs-aside">
        <a href="https://nablarch.github.io/docs/LATEST/doc/en/index.html" class="en">English</a>
    </li>
  </ul>
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  <div class="section" id="redis-lettuce">
<span id="redisstore-lettuce-adaptor"></span><h1>Redisストア(Lettuce)アダプタ<a class="headerlink" href="#redis-lettuce" title="このヘッドラインへのパーマリンク">¶</a></h1>
<div class="contents local topic" id="id1">
<p class="topic-title first">目次</p>
<ul class="simple">
<li><a class="reference internal" href="#redisstore-minimum-settings" id="id18">最小構成で動かす</a><ul>
<li><a class="reference internal" href="#redisstore-minimum-settings-content" id="id19">設定内容</a><ul>
<li><a class="reference internal" href="#redisstore-minimum-settings-how-modify-component-definition" id="id20">コンポーネント定義ファイルを修正する</a></li>
<li><a class="reference internal" href="#redisstore-minimum-settings-how-modify-env-config" id="id21">環境設定値を修正する</a></li>
</ul>
</li>
</ul>
</li>
<li><a class="reference internal" href="#redisstore-redis-client-config" id="id22">Redis の構成に合わせて設定する</a><ul>
<li><a class="reference internal" href="#redisstore-redis-client-config-client-classes" id="id23">構成ごとに用意されたクライアントクラス</a></li>
<li><a class="reference internal" href="#redisstore-redis-client-config-how-select-client" id="id24">使用するクライアントクラスを設定する</a></li>
<li><a class="reference internal" href="#uri" id="id25">接続URIを設定する</a></li>
<li><a class="reference internal" href="#redisstore-redis-client-config-advanced" id="id26">より高度な設定を行う</a><ul>
<li><a class="reference internal" href="#cluster" id="id27">例：Clusterのトポロジ更新の監視を有効にする</a></li>
</ul>
</li>
</ul>
</li>
<li><a class="reference internal" href="#redisstore-mechanism-to-decide-client" id="id28">使用するクライアントクラスの決定の仕組み</a></li>
<li><a class="reference internal" href="#redisstore-initialize-client" id="id29">クライアントクラスの初期化</a></li>
<li><a class="reference internal" href="#id15" id="id30">クライアントクラスの廃棄処理</a></li>
<li><a class="reference internal" href="#redisstore-session-persistence" id="id31">セッション情報の保存方法</a></li>
<li><a class="reference internal" href="#redisstore-expiration" id="id32">有効期限の管理方法</a></li>
</ul>
</div>
<p>セッションストアに <a class="reference external" href="https://redis.io/">Redis(外部サイト、英語)</a> を使用できるようにするアダプタを提供する。</p>
<p>セッションストアにRedisを使用すると、DBストアを選択した場合と比較して次のようなメリットが得られる。</p>
<ul class="simple">
<li>セッション情報を保存するためのテーブルを事前に用意する必要がない</li>
<li>有効期限が切れたセッション情報を削除するためのバッチを作る必要がない</li>
</ul>
<div class="section" id="redisstore-minimum-settings">
<span id="id2"></span><h2><a class="toc-backref" href="#id18">最小構成で動かす</a><a class="headerlink" href="#redisstore-minimum-settings" title="このヘッドラインへのパーマリンク">¶</a></h2>
<p>ここでは、 <code class="docutils literal"><span class="pre">localhost</span></code> の <code class="docutils literal"><span class="pre">6379</span></code> ポートで起動している単一のRedisインスタンスに対して接続する場合を例に、設定方法を説明する。</p>
<div class="admonition tip">
<p class="first admonition-title">補足</p>
<p>ローカルで試す場合、Dockerを使えば次のようにコマンドを実行することでRedisインスタンスを構築できる。</p>
<div class="highlight-shell"><div class="highlight"><pre><span></span>&gt; docker run --name redis -d -p <span class="m">6379</span>:6379 redis:5.0.9
</pre></div>
</div>
<p>停止する場合は次のようにコマンドを実行する。</p>
<div class="last highlight-shell"><div class="highlight"><pre><span></span>&gt; docker stop redis
</pre></div>
</div>
</div>
<div class="section" id="redisstore-minimum-settings-content">
<span id="id3"></span><h3><a class="toc-backref" href="#id19">設定内容</a><a class="headerlink" href="#redisstore-minimum-settings-content" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p>最小構成でRedisストアを使い始めるには、アプリケーションのコンポーネント定義と環境設定値を修正する必要がある。</p>
<div class="section" id="redisstore-minimum-settings-how-modify-component-definition">
<span id="id4"></span><h4><a class="toc-backref" href="#id20">コンポーネント定義ファイルを修正する</a><a class="headerlink" href="#redisstore-minimum-settings-how-modify-component-definition" title="このヘッドラインへのパーマリンク">¶</a></h4>
<p>最初に、コンポーネントの定義ファイルを修正する方法について説明する。</p>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="c">&lt;!-- 省略 --&gt;</span>
<span class="nt">&lt;config-file</span> <span class="na">file=</span><span class="s">&quot;nablarch/webui/redisstore-lettuce.config&quot;</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;config-file</span> <span class="na">file=</span><span class="s">&quot;common.properties&quot;</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;config-file</span> <span class="na">file=</span><span class="s">&quot;env.properties&quot;</span> <span class="nt">/&gt;</span>

<span class="c">&lt;!-- 省略 --&gt;</span>
<span class="nt">&lt;import</span> <span class="na">file=</span><span class="s">&quot;nablarch/webui/redisstore-lettuce.xml&quot;</span> <span class="nt">/&gt;</span>
</pre></div>
</div>
<p>まず、デフォルトコンフィグレーションが提供している次の２つの設定ファイルを読み込む。</p>
<ul class="simple">
<li><code class="docutils literal"><span class="pre">nablarch/webui/redisstore-lettuce.config</span></code></li>
<li><code class="docutils literal"><span class="pre">nablarch/webui/redisstore-lettuce.xml</span></code></li>
</ul>
<p><code class="docutils literal"><span class="pre">redisstore-lettuce.config</span></code> には、 <code class="docutils literal"><span class="pre">redisstore-lettuce.xml</span></code> で使用しているプレースホルダのデフォルト値が宣言されている。</p>
<p>アプリケーションで用意している環境設定ファイル（<code class="docutils literal"><span class="pre">env.properties</span></code> など）がある場合、 <code class="docutils literal"><span class="pre">redisstore-lettuce.config</span></code> はそれよりも前に読み込むようにする。
こうすることで、必要に応じてデフォルトのプレースホルダの値をアプリケーションの環境設定ファイルで上書きできるようになる。</p>
<p>さらに、 <a class="reference internal" href="../../application_framework/libraries/repository.html#repository-overwrite-environment-configuration-by-os-env-var"><span>OS環境変数を使って環境依存値を上書きする</span></a> で説明している方法を用いることで、実行環境ごとに接続先のRedisを切り替えることができるようになる。</p>
<div class="admonition tip">
<p class="first admonition-title">補足</p>
<p class="last">デフォルトでは、 <code class="docutils literal"><span class="pre">localhost</span></code> の <code class="docutils literal"><span class="pre">6379</span></code> ポートで起動している単一のRedisインスタンスに接続するように設定されている。</p>
</div>
<p><code class="docutils literal"><span class="pre">redisstore-lettuce.xml</span></code> には、Redisストアを使用するために必要となるコンポーネントが定義されている。</p>
<p><code class="docutils literal"><span class="pre">redisstore-lettuce.xml</span></code> を使用すると、 <code class="docutils literal"><span class="pre">nablarch/webui/session-store.xml</span></code> は不要になる。
<a class="reference internal" href="../../application_framework/blank_project/setup_blankProject/setup_Web.html#firststepgeneratewebblankproject"><span>ウェブのアーキタイプ</span></a> でプロジェクトを生成している場合、デフォルトで <code class="docutils literal"><span class="pre">session-store.xml</span></code> を使用するように設定されているので、 <code class="docutils literal"><span class="pre">session-store.xml</span></code> のインポートを削除し、代わりに <code class="docutils literal"><span class="pre">redisstore-lettuce.xml</span></code> をインポートするように修正する。</p>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="c">&lt;!-- 初期化が必要なコンポーネント --&gt;</span>
<span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;initializer&quot;</span>
           <span class="na">class=</span><span class="s">&quot;nablarch.core.repository.initialization.BasicApplicationInitializer&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;initializeList&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;list&gt;</span>
      <span class="c">&lt;!-- 省略 --&gt;</span>
      <span class="nt">&lt;component-ref</span> <span class="na">name=</span><span class="s">&quot;lettuceRedisClientProvider&quot;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;/list&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
<p>次に、 <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/integration/redisstore/lettuce/LettuceRedisClientProvider.html" title="nablarch.integration.redisstore.lettuce.LettuceRedisClientProvider">LettuceRedisClientProvider</a> のコンポーネントを <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/repository/initialization/BasicApplicationInitializer.html" title="nablarch.core.repository.initialization.BasicApplicationInitializer">BasicApplicationInitializer</a> の <code class="docutils literal"><span class="pre">initializeList</span></code> に追加する。</p>
<p><code class="docutils literal"><span class="pre">LettuceRedisClientProvider</span></code> のコンポーネントは <code class="docutils literal"><span class="pre">redisstore-lettuce.xml</span></code> に <code class="docutils literal"><span class="pre">lettuceRedisClientProvider</span></code> という名前で定義されているので、名前参照を使って設定できるようになっている。</p>
<p>この設定の説明については、 <a class="reference internal" href="#redisstore-initialize-client"><span>クライアントクラスの初期化</span></a> を参照。</p>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="c">&lt;!-- 廃棄が必要なコンポーネント --&gt;</span>
<span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;disposer&quot;</span>
           <span class="na">class=</span><span class="s">&quot;nablarch.core.repository.disposal.BasicApplicationDisposer&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;disposableList&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;list&gt;</span>
      <span class="c">&lt;!-- 省略 --&gt;</span>
      <span class="nt">&lt;component-ref</span> <span class="na">name=</span><span class="s">&quot;lettuceRedisClientProvider&quot;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;/list&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
<p>さらに、 <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/integration/redisstore/lettuce/LettuceRedisClientProvider.html" title="nablarch.integration.redisstore.lettuce.LettuceRedisClientProvider">LettuceRedisClientProvider</a> のコンポーネントを <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/repository/disposal/BasicApplicationDisposer.html" title="nablarch.core.repository.disposal.BasicApplicationDisposer">BasicApplicationDisposer</a> の <code class="docutils literal"><span class="pre">disposableList</span></code> に追加する。</p>
<p>この設定の説明については、 <a class="reference internal" href="../../application_framework/libraries/repository.html#repository-dispose-object"><span>オブジェクトの廃棄処理を行う</span></a> を参照。</p>
</div>
<div class="section" id="redisstore-minimum-settings-how-modify-env-config">
<span id="id5"></span><h4><a class="toc-backref" href="#id21">環境設定値を修正する</a><a class="headerlink" href="#redisstore-minimum-settings-how-modify-env-config" title="このヘッドラインへのパーマリンク">¶</a></h4>
<p>次に、環境設定値の修正方法を説明する。</p>
<div class="highlight-properties"><div class="highlight"><pre><span></span><span class="c"># デフォルトのセッションストア名</span>
<span class="na">nablarch.sessionManager.defaultStoreName</span><span class="o">=</span><span class="s">redis</span>
</pre></div>
</div>
<p>プロジェクトの環境設定ファイルで、 <code class="docutils literal"><span class="pre">nablarch.sessionManager.defaultStoreName</span></code> という設定項目を定義し、値に <code class="docutils literal"><span class="pre">redis</span></code> と設定する。</p>
<div class="admonition tip">
<p class="first admonition-title">補足</p>
<p class="last"><a class="reference internal" href="../../application_framework/blank_project/setup_blankProject/setup_Web.html#firststepgeneratewebblankproject"><span>ウェブのアーキタイプ</span></a> でプロジェクトを生成している場合は、 <code class="docutils literal"><span class="pre">src/main/resources/common.properties</span></code> に <code class="docutils literal"><span class="pre">nablarch.sessionManager.defaultStoreName</span></code> が宣言されている。</p>
</div>
<p>以上で、 <code class="docutils literal"><span class="pre">localhost</span></code> の <code class="docutils literal"><span class="pre">6379</span></code> ポートで起動しているRedisをセッションストアとして使用できるようになる。</p>
</div>
</div>
</div>
<div class="section" id="redisstore-redis-client-config">
<span id="id6"></span><h2><a class="toc-backref" href="#id22">Redis の構成に合わせて設定する</a><a class="headerlink" href="#redisstore-redis-client-config" title="このヘッドラインへのパーマリンク">¶</a></h2>
<p><a class="reference internal" href="#redisstore-minimum-settings"><span>最小構成で動かす</span></a> では、ローカルで起動する単一のRedisインスタンスに接続する例を示した。</p>
<p>しかし、実際に本番などでRedisを使用する場合は次のような構成のRedisに接続できる必要がある。</p>
<ul class="simple">
<li>Sentinelを使用したMaster-Replica構成</li>
<li>Cluster構成</li>
</ul>
<p>ここでは、接続先のRedisの構成に合わせて、どのように設定を変更すればいいのかについて説明する。</p>
<div class="section" id="redisstore-redis-client-config-client-classes">
<span id="id7"></span><h3><a class="toc-backref" href="#id23">構成ごとに用意されたクライアントクラス</a><a class="headerlink" href="#redisstore-redis-client-config-client-classes" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p>本アダプタでは、接続先のRedisの構成ごとに専用のクライアントクラス（<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/integration/redisstore/lettuce/LettuceRedisClient.html" title="nablarch.integration.redisstore.lettuce.LettuceRedisClient">LettuceRedisClient</a> を実装したクラス）を用意している。</p>
<dl class="docutils">
<dt><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/integration/redisstore/lettuce/LettuceSimpleRedisClient.html" title="nablarch.integration.redisstore.lettuce.LettuceSimpleRedisClient">LettuceSimpleRedisClient</a></dt>
<dd>単一のRedisインスタンスに直接接続する場合に使用するクラス。</dd>
<dt><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/integration/redisstore/lettuce/LettuceMasterReplicaRedisClient.html" title="nablarch.integration.redisstore.lettuce.LettuceMasterReplicaRedisClient">LettuceMasterReplicaRedisClient</a></dt>
<dd>Master-Replica構成のRedisインスタンスに接続する場合に使用するクラス。
Sentinelを介して接続する場合も、このクラスを使用する。</dd>
<dt><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/integration/redisstore/lettuce/LettuceClusterRedisClient.html" title="nablarch.integration.redisstore.lettuce.LettuceClusterRedisClient">LettuceClusterRedisClient</a></dt>
<dd>Cluster構成のRedisインスタンスに接続する場合に使用するクラス。</dd>
</dl>
<p>アプリケーションで使用するRedisの構成に合わせて、これらの中から使用するクライアントクラスを設定する必要がある。</p>
<div class="admonition tip">
<p class="first admonition-title">補足</p>
<p class="last">これらのクライアントクラスのコンポーネントは <code class="docutils literal"><span class="pre">redisstore-lettuce.xml</span></code> で定義されているので、利用者側で定義する必要はない。</p>
</div>
</div>
<div class="section" id="redisstore-redis-client-config-how-select-client">
<span id="id8"></span><h3><a class="toc-backref" href="#id24">使用するクライアントクラスを設定する</a><a class="headerlink" href="#redisstore-redis-client-config-how-select-client" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p>どのクライアントクラスを使用するかは、環境設定値 <code class="docutils literal"><span class="pre">nablarch.lettuce.clientType</span></code> で設定できるようになっている。</p>
<p>設定値と採用されるクライアントクラスの関係を、以下に表で示す。</p>
<table border="1" class="docutils">
<colgroup>
<col width="31%" />
<col width="69%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">設定値</th>
<th class="head">クライアントクラス</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td><code class="docutils literal"><span class="pre">simple</span></code></td>
<td><code class="docutils literal"><span class="pre">LettuceSimpleRedisClient</span></code></td>
</tr>
<tr class="row-odd"><td><code class="docutils literal"><span class="pre">masterReplica</span></code></td>
<td><code class="docutils literal"><span class="pre">LettuceMasterReplicaRedisClient</span></code></td>
</tr>
<tr class="row-even"><td><code class="docutils literal"><span class="pre">cluster</span></code></td>
<td><code class="docutils literal"><span class="pre">LettuceClusterRedisClient</span></code></td>
</tr>
</tbody>
</table>
<p>したがって、アプリケーションの環境設定ファイルで次のように設定することで、Cluster構成のRedisに接続できるようになる。</p>
<div class="highlight-properties"><div class="highlight"><pre><span></span><span class="na">nablarch.lettuce.clientType</span><span class="o">=</span><span class="s">cluster</span>
</pre></div>
</div>
<div class="admonition tip">
<p class="first admonition-title">補足</p>
<p class="last"><code class="docutils literal"><span class="pre">nablarch.lettuce.clientType</span></code> のデフォルト値は、 <code class="docutils literal"><span class="pre">redisstore-lettuce.config</span></code> で <code class="docutils literal"><span class="pre">simple</span></code> が設定されている。</p>
</div>
</div>
<div class="section" id="uri">
<span id="redisstore-redis-client-config-uri"></span><h3><a class="toc-backref" href="#id25">接続URIを設定する</a><a class="headerlink" href="#uri" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p>接続先のRedisの情報は、URIで指定する。</p>
<p>URIは、Redisの構成ごとに次の環境設定値で設定できるようになっている。</p>
<table border="1" class="docutils">
<colgroup>
<col width="10%" />
<col width="25%" />
<col width="66%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Redisの構成</th>
<th class="head">環境設定値</th>
<th class="head">デフォルト値(redisstore-lettuce.configで設定されている値)</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>単一</td>
<td><code class="docutils literal"><span class="pre">nablarch.lettuce.simple.uri</span></code></td>
<td><code class="docutils literal"><span class="pre">redis://localhost:6379</span></code></td>
</tr>
<tr class="row-odd"><td>Master-Replica</td>
<td><code class="docutils literal"><span class="pre">nablarch.lettuce.masterReplica.uri</span></code></td>
<td><code class="docutils literal"><span class="pre">redis-sentinel://localhost:26379,localhost:26380,localhost:26381?sentinelMasterId=masterGroupName</span></code></td>
</tr>
<tr class="row-even"><td>Cluster</td>
<td><code class="docutils literal"><span class="pre">nablarch.lettuce.cluster.uriList</span></code></td>
<td><code class="docutils literal"><span class="pre">redis://localhost:6379,redis://localhost:6380,redis://localhost:6381</span></code></td>
</tr>
</tbody>
</table>
<p>Clusterの設定値は、各ノードに接続するためのURIを半角カンマで列挙した値を設定する。
個々のURIのフォーマットの詳細については、 <a class="reference external" href="https://lettuce.io/core/5.3.0.RELEASE/reference/index.html#redisuri.uri-syntax">Lettuceのドキュメント(外部サイト、英語)</a> を参照。</p>
</div>
<div class="section" id="redisstore-redis-client-config-advanced">
<span id="id9"></span><h3><a class="toc-backref" href="#id26">より高度な設定を行う</a><a class="headerlink" href="#redisstore-redis-client-config-advanced" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p>環境設定値で指定できるのは、クライアントクラスの種類とURIのみとなっている。
より細かい設定を行いたい場合は、各クライアントクラスを継承したカスタムクライアントクラスを作成する必要がある。</p>
<p>各クライアントクラスには、Lettuceのインスタンスを生成するメソッドが <code class="docutils literal"><span class="pre">protected</span></code> で定義されている。
各クライアントクラスに用意されている、 <code class="docutils literal"><span class="pre">protected</span></code> メソッドを以下に表で示す。</p>
<table border="1" class="docutils">
<colgroup>
<col width="13%" />
<col width="15%" />
<col width="72%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">クライアントクラス</th>
<th class="head">メソッド</th>
<th class="head">戻り値の型</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td><code class="docutils literal"><span class="pre">LettuceSimpleRedisClient</span></code></td>
<td><code class="docutils literal"><span class="pre">createClient()</span></code></td>
<td><a class="reference external" href="https://lettuce.io/core/5.3.0.RELEASE/api/io/lettuce/core/RedisClient.html">RedisClient(外部サイト、英語)</a></td>
</tr>
<tr class="row-odd"><td></td>
<td><code class="docutils literal"><span class="pre">createConnection(RedisClient)</span></code></td>
<td><a class="reference external" href="https://lettuce.io/core/5.3.0.RELEASE/api/io/lettuce/core/api/StatefulRedisConnection.html">StatefulRedisConnection&lt;byte[], byte[]&gt;(外部サイト、英語)</a></td>
</tr>
<tr class="row-even"><td><code class="docutils literal"><span class="pre">LettuceMasterReplicaRedisClient</span></code></td>
<td><code class="docutils literal"><span class="pre">createClient()</span></code></td>
<td><a class="reference external" href="https://lettuce.io/core/5.3.0.RELEASE/api/io/lettuce/core/RedisClient.html">RedisClient(外部サイト、英語)</a></td>
</tr>
<tr class="row-odd"><td></td>
<td><code class="docutils literal"><span class="pre">createConnection(RedisClient)</span></code></td>
<td><a class="reference external" href="https://lettuce.io/core/5.3.0.RELEASE/api/io/lettuce/core/masterreplica/StatefulRedisMasterReplicaConnection.html">StatefulRedisMasterReplicaConnection&lt;byte[], byte[]&gt;(外部サイト、英語)</a></td>
</tr>
<tr class="row-even"><td><code class="docutils literal"><span class="pre">LettuceClusterRedisClient</span></code></td>
<td><code class="docutils literal"><span class="pre">createClient()</span></code></td>
<td><a class="reference external" href="https://lettuce.io/core/5.3.0.RELEASE/api/io/lettuce/core/cluster/RedisClusterClient.html">RedisClusterClient(外部サイト、英語)</a></td>
</tr>
<tr class="row-odd"><td></td>
<td><code class="docutils literal"><span class="pre">createConnection(RedisClusterClient)</span></code></td>
<td><a class="reference external" href="https://lettuce.io/core/5.3.0.RELEASE/api/io/lettuce/core/cluster/api/StatefulRedisClusterConnection.html">StatefulRedisClusterConnection&lt;byte[], byte[]&gt;(外部サイト、英語)</a></td>
</tr>
</tbody>
</table>
<p>これらのメソッドをカスタムクライアントクラスでオーバーライドし、独自の設定を行ったLettuceのインスタンスを返すように実装することで、任意の設定ができるようになる。</p>
<p>そして、元となったコンポーネントと同じ名前でカスタムクライアントクラスのコンポーネントを定義することで、クライアントクラスのコンポーネントを差し替えることができる。</p>
<p>各クライアントクラスのコンポーネント名を、以下に表で示す。</p>
<table border="1" class="docutils">
<colgroup>
<col width="49%" />
<col width="51%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">クライアントクラス</th>
<th class="head">コンポーネント名</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td><code class="docutils literal"><span class="pre">LettuceSimpleRedisClient</span></code></td>
<td><code class="docutils literal"><span class="pre">lettuceSimpleRedisClient</span></code></td>
</tr>
<tr class="row-odd"><td><code class="docutils literal"><span class="pre">LettuceMasterReplicaRedisClient</span></code></td>
<td><code class="docutils literal"><span class="pre">lettuceMasterReplicaRedisClient</span></code></td>
</tr>
<tr class="row-even"><td><code class="docutils literal"><span class="pre">LettuceClusterRedisClient</span></code></td>
<td><code class="docutils literal"><span class="pre">lettuceClusterRedisClient</span></code></td>
</tr>
</tbody>
</table>
<div class="section" id="cluster">
<span id="redisstore-redis-client-config-advanced-topology-refresh-example"></span><h4><a class="toc-backref" href="#id27">例：Clusterのトポロジ更新の監視を有効にする</a><a class="headerlink" href="#cluster" title="このヘッドラインへのパーマリンク">¶</a></h4>
<p>Clusterのトポロジ更新の監視を有効にする設定を例に、カスタムクライアントクラスの実装と設定方法を説明する。</p>
<p>まず、Cluster構成用のクライアントクラスである <code class="docutils literal"><span class="pre">LettuceClusterRedisClient</span></code> を継承して、カスタムクライアントクラス（<code class="docutils literal"><span class="pre">CustomClusterRedisClient</span></code>）を作成する。</p>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="kn">package</span> <span class="nn">com.nablarch.example.redisstore</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">io.lettuce.core.RedisURI</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">io.lettuce.core.cluster.ClusterClientOptions</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">io.lettuce.core.cluster.ClusterTopologyRefreshOptions</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">io.lettuce.core.cluster.RedisClusterClient</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">nablarch.integration.redisstore.lettuce.LettuceClusterRedisClient</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.time.Duration</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.stream.Collectors</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CustomClusterRedisClient</span> <span class="kd">extends</span> <span class="n">LettuceClusterRedisClient</span> <span class="o">{</span>

    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="n">RedisClusterClient</span> <span class="nf">createClient</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">List</span><span class="o">&lt;</span><span class="n">RedisURI</span><span class="o">&gt;</span> <span class="n">redisUriList</span> <span class="o">=</span> <span class="n">uriList</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="n">RedisURI</span><span class="o">::</span><span class="n">create</span><span class="o">).</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">());</span>
        <span class="n">RedisClusterClient</span> <span class="n">client</span> <span class="o">=</span> <span class="n">RedisClusterClient</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">redisUriList</span><span class="o">);</span>

        <span class="n">ClusterTopologyRefreshOptions</span> <span class="n">clusterTopologyRefreshOptions</span> <span class="o">=</span> <span class="n">ClusterTopologyRefreshOptions</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
                <span class="o">.</span><span class="na">enableAllAdaptiveRefreshTriggers</span><span class="o">()</span>
                <span class="o">.</span><span class="na">enablePeriodicRefresh</span><span class="o">(</span><span class="n">Duration</span><span class="o">.</span><span class="na">ofSeconds</span><span class="o">(</span><span class="mi">10</span><span class="o">))</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="n">ClusterClientOptions</span> <span class="n">clusterClientOptions</span> <span class="o">=</span> <span class="n">ClusterClientOptions</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
                <span class="o">.</span><span class="na">topologyRefreshOptions</span><span class="o">(</span><span class="n">clusterTopologyRefreshOptions</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>

        <span class="n">client</span><span class="o">.</span><span class="na">setOptions</span><span class="o">(</span><span class="n">clusterClientOptions</span><span class="o">);</span>

        <span class="k">return</span> <span class="n">client</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
<p>LettuceでClusterのトポロジ更新を監視できるようにするには、必要な設定を行った <a class="reference external" href="https://lettuce.io/core/5.3.0.RELEASE/api/io/lettuce/core/cluster/ClusterTopologyRefreshOptions.html">ClusterTopologyRefreshOptions（外部サイト、英語）</a> を <a class="reference external" href="https://lettuce.io/core/5.3.0.RELEASE/api/io/lettuce/core/cluster/RedisClusterClient.html">RedisClusterClient（外部サイト、英語）</a> に設定する必要がある。</p>
<p>したがって、 <code class="docutils literal"><span class="pre">CustomClusterRedisClient</span></code> では <code class="docutils literal"><span class="pre">RedisClusterClient</span></code> を生成する <code class="docutils literal"><span class="pre">createClient()</span></code> をオーバーライドして、必要な設定を行った <code class="docutils literal"><span class="pre">RedisClusterClient</span></code> のインスタンスを返すように実装する。</p>
<div class="admonition tip">
<p class="first admonition-title">補足</p>
<p class="last">Lettuceの設定の詳細については、 <a class="reference external" href="https://lettuce.io/core/5.3.0.RELEASE/reference/index.html#clientoptions.cluster-specific-options">Lettuceのドキュメント（外部サイト、英語）</a> を参照。</p>
</div>
<p>次に、このカスタムクライアントクラスをコンポーネント定義する。</p>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;import</span> <span class="na">file=</span><span class="s">&quot;nablarch/webui/redisstore-lettuce.xml&quot;</span> <span class="nt">/&gt;</span>

<span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;lettuceClusterRedisClient&quot;</span> <span class="na">class=</span><span class="s">&quot;com.nablarch.example.redisstore.CustomClusterRedisClient&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;uriList&quot;</span> <span class="na">ref=</span><span class="s">&quot;redisClusterUriListFactory&quot;</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
<p><code class="docutils literal"><span class="pre">CustomClusterRedisClient</span></code> の元となったクライアントクラスは <code class="docutils literal"><span class="pre">LettuceClusterRedisClient</span></code> なので、 <code class="docutils literal"><span class="pre">lettuceClusterRedisClient</span></code> という名前で定義することでコンポーネントを上書きできる。</p>
<p><code class="docutils literal"><span class="pre">uriList</span></code> プロパティの設定は、元となった <code class="docutils literal"><span class="pre">redisstore-lettuce.xml</span></code> での設定をそのまま流用している。
他のクライアントクラスを拡張したクラスを作る場合も、プロパティの設定は <code class="docutils literal"><span class="pre">redisstore-lettuce.xml</span></code> の設定をそのまま流用すること。</p>
<p>以上で、トポロジ更新の監視が可能となる。</p>
</div>
</div>
</div>
<div class="section" id="redisstore-mechanism-to-decide-client">
<span id="id13"></span><h2><a class="toc-backref" href="#id28">使用するクライアントクラスの決定の仕組み</a><a class="headerlink" href="#redisstore-mechanism-to-decide-client" title="このヘッドラインへのパーマリンク">¶</a></h2>
<p><a class="reference internal" href="#redisstore-redis-client-config-how-select-client"><span>使用するクライアントクラスを設定する</span></a> で、使用するクライアントクラスは環境設定値 <code class="docutils literal"><span class="pre">nablarch.lettuce.clientType</span></code> で設定できることを説明した。
ここでは、具体的にどのようにしてクライアントクラスが決定されているのか、仕組みを説明する。</p>
<p>３つのクライアントクラスのコンポーネントのうち、実際にどのコンポーネントを使用するかは <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/integration/redisstore/lettuce/LettuceRedisClientProvider.html" title="nablarch.integration.redisstore.lettuce.LettuceRedisClientProvider">LettuceRedisClientProvider</a> によって決定される。</p>
<p><code class="docutils literal"><span class="pre">LettuceRedisClientProvider</span></code> は、 <code class="docutils literal"><span class="pre">redisstore-lettuce.xml</span></code> で次のように定義されている。</p>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;lettuceRedisClientProvider&quot;</span> <span class="na">class=</span><span class="s">&quot;nablarch.integration.redisstore.lettuce.LettuceRedisClientProvider&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;clientType&quot;</span> <span class="na">value=</span><span class="s">&quot;${nablarch.lettuce.clientType}&quot;</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;clientList&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;list&gt;</span>
            <span class="nt">&lt;component-ref</span> <span class="na">name=</span><span class="s">&quot;lettuceSimpleRedisClient&quot;</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;component-ref</span> <span class="na">name=</span><span class="s">&quot;lettuceMasterReplicaRedisClient&quot;</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;component-ref</span> <span class="na">name=</span><span class="s">&quot;lettuceClusterRedisClient&quot;</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/list&gt;</span>
    <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
<p>このクラスは、 <code class="docutils literal"><span class="pre">clientList</span></code> と <code class="docutils literal"><span class="pre">clientType</span></code> という２つのプロパティを持っている。</p>
<p><code class="docutils literal"><span class="pre">clientList</span></code> には、候補となるクライアントクラスのコンポーネントがリストで設定されている。
そして <code class="docutils literal"><span class="pre">clientType</span></code> には、使用するクライアントクラスの識別子を設定する。</p>
<p>各クライアントクラスは <code class="docutils literal"><span class="pre">getType()</span></code> という自身の識別子を返すメソッドを持っている。
<code class="docutils literal"><span class="pre">LettuceRedisClientProvider</span></code> は <code class="docutils literal"><span class="pre">clientType</span></code> プロパティに設定された値と <code class="docutils literal"><span class="pre">clientList</span></code> プロパティに設定された各コンポーネントが返す <code class="docutils literal"><span class="pre">getType()</span></code> の値を比較する。
そして、値が一致したものを、実際に使用するコンポーネントとして決定している。</p>
<p><code class="docutils literal"><span class="pre">LettuceRedisClientProvider</span></code> は <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/repository/di/ComponentFactory.html" title="nablarch.core.repository.di.ComponentFactory">ComponentFactory</a> を実装しており、 <code class="docutils literal"><span class="pre">createObject()</span></code> メソッドは、決定されたクライアントクラス（<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/integration/redisstore/lettuce/LettuceRedisClient.html" title="nablarch.integration.redisstore.lettuce.LettuceRedisClient">LettuceRedisClient</a>）のコンポーネントを返すように実装されている。</p>
</div>
<div class="section" id="redisstore-initialize-client">
<span id="id14"></span><h2><a class="toc-backref" href="#id29">クライアントクラスの初期化</a><a class="headerlink" href="#redisstore-initialize-client" title="このヘッドラインへのパーマリンク">¶</a></h2>
<p>本アダプタが提供している３つのクライアントクラスは、いずれもRedisへの接続を確立するために初期化が必要となっている。</p>
<p>各クライアントクラスは <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/repository/initialization/Initializable.html" title="nablarch.core.repository.initialization.Initializable">Initializable</a> を実装しており、 <code class="docutils literal"><span class="pre">initialize()</span></code> メソッドを実行することでRedisへの接続が確立される。
したがって、使用するクライアントクラスのコンポーネントは、 <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/repository/initialization/BasicApplicationInitializer.html" title="nablarch.core.repository.initialization.BasicApplicationInitializer">BasicApplicationInitializer</a> の <code class="docutils literal"><span class="pre">initializeList</span></code> プロパティに設定しなければならない。</p>
<p>実際の <code class="docutils literal"><span class="pre">initializeList</span></code> への設定は、以下のように <a class="reference internal" href="#redisstore-mechanism-to-decide-client"><span>使用するクライアントクラスの決定の仕組み</span></a> で説明した <code class="docutils literal"><span class="pre">LettuceRedisClientProvider</span></code> のコンポーネントを使用する。</p>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="c">&lt;!-- 初期化が必要なコンポーネント --&gt;</span>
<span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;initializer&quot;</span>
           <span class="na">class=</span><span class="s">&quot;nablarch.core.repository.initialization.BasicApplicationInitializer&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;initializeList&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;list&gt;</span>
      <span class="c">&lt;!-- 省略 --&gt;</span>
      <span class="nt">&lt;component-ref</span> <span class="na">name=</span><span class="s">&quot;lettuceRedisClientProvider&quot;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;/list&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
<p>こうすることで、コンポーネント定義の記述を変更することなく、決定されたクライアントクラスのコンポーネントを初期化できる。</p>
</div>
<div class="section" id="id15">
<h2><a class="toc-backref" href="#id30">クライアントクラスの廃棄処理</a><a class="headerlink" href="#id15" title="このヘッドラインへのパーマリンク">¶</a></h2>
<p>各クライアントクラスは <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/repository/disposal/Disposable.html" title="nablarch.core.repository.disposal.Disposable">Disposable</a> を実装しており、 <code class="docutils literal"><span class="pre">dispose()</span></code> メソッドを実行することでRedisへの接続が閉じられる。
したがって、使用するクライアントクラスのコンポーネントを <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/repository/disposal/BasicApplicationDisposer.html" title="nablarch.core.repository.disposal.BasicApplicationDisposer">BasicApplicationDisposer</a> の <code class="docutils literal"><span class="pre">disposableList</span></code> プロパティに設定することで、アプリケーション終了時にRedisとの接続を閉じることができる。</p>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="c">&lt;!-- 廃棄が必要なコンポーネント --&gt;</span>
<span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;disposer&quot;</span>
           <span class="na">class=</span><span class="s">&quot;nablarch.core.repository.disposal.BasicApplicationDisposer&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;disposableList&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;list&gt;</span>
      <span class="c">&lt;!-- 省略 --&gt;</span>
      <span class="nt">&lt;component-ref</span> <span class="na">name=</span><span class="s">&quot;lettuceRedisClientProvider&quot;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;/list&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
<p><code class="docutils literal"><span class="pre">BasicApplicationInitializer</span></code> の <code class="docutils literal"><span class="pre">initializeList</span></code> と同様で、 <code class="docutils literal"><span class="pre">disposableList</span></code> プロパティに <code class="docutils literal"><span class="pre">LettuceRedisClientProvider</span></code> コンポーネントを指定することで、実際に使用されるクライアントクラスの廃棄処理が実行されるようになる。</p>
</div>
<div class="section" id="redisstore-session-persistence">
<span id="id16"></span><h2><a class="toc-backref" href="#id31">セッション情報の保存方法</a><a class="headerlink" href="#redisstore-session-persistence" title="このヘッドラインへのパーマリンク">¶</a></h2>
<p>Redisに保存されたセッション情報は、 <code class="docutils literal"><span class="pre">nablarch.session.&lt;セッションID&gt;</span></code> というキーで保存されている。</p>
<p>以下は、 <code class="docutils literal"><span class="pre">redis-cli</span></code> で保存されているキーを表示した様子を記載している。</p>
<div class="highlight-shell"><div class="highlight"><pre><span></span><span class="m">127</span>.0.0.1:6379&gt; keys *
<span class="m">1</span><span class="o">)</span> <span class="s2">&quot;nablarch.session.8b00bce5-d19f-4f63-b1fe-d14ecca9a4f6&quot;</span>
</pre></div>
</div>
<p>また、セッション情報（<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/web/session/SessionEntry.html" title="nablarch.common.web.session.SessionEntry">SessionEntry</a> のリスト）は、デフォルトでは <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/web/session/encoder/JavaSerializeStateEncoder.html" title="nablarch.common.web.session.encoder.JavaSerializeStateEncoder">JavaSerializeStateEncoder</a> でエンコードされたバイナリ形式で保存されている。</p>
<p>使用するエンコーダーは、 <code class="docutils literal"><span class="pre">serializeEncoder</span></code> という名前で別のエンコーダーのコンポーネントを定義することで変更できる。</p>
</div>
<div class="section" id="redisstore-expiration">
<span id="id17"></span><h2><a class="toc-backref" href="#id32">有効期限の管理方法</a><a class="headerlink" href="#redisstore-expiration" title="このヘッドラインへのパーマリンク">¶</a></h2>
<p>Redisには、保存したキーに対して有効期限を設定する仕組みが用意されている。
有効期限が切れたキーは自動的に削除される。</p>
<p>本アダプタは、セッションの有効期限の管理にこのRedisの有効期限の仕組みを使用している。
したがって、有効期限が切れたセッション情報は自動的に削除されるため、ゴミとして残ったセッション情報を削除するためのバッチを用意する必要はない。</p>
<p>以下は、セッション情報の有効期限を <a class="reference external" href="https://redis.io/commands/pttl">pttl コマンド（外部サイト、英語）</a> で確認している様子を記載している。</p>
<div class="highlight-shell"><div class="highlight"><pre><span></span><span class="m">127</span>.0.0.1:6379&gt; pttl <span class="s2">&quot;nablarch.session.8b00bce5-d19f-4f63-b1fe-d14ecca9a4f6&quot;</span>
<span class="o">(</span>integer<span class="o">)</span> <span class="m">879774</span>
</pre></div>
</div>
</div>
</div>


           </div>
           <div class="articleComments">
            
           </div>
          </div>
          <footer>

    <hr/>

    <div role="contentinfo">
        <p>
            &copy; Copyright 2010-2021, TIS Inc.
        </p>
    </div>
    Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org">Read the Docs</a>.

</footer>

        </div>
      </div>

    </section>

  </div>
  


  

    <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'../../../',
            VERSION:'5u19',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true,
            SOURCELINK_SUFFIX: ''
        };
    </script>
      <script type="text/javascript" src="../../../_static/jquery.js"></script>
      <script type="text/javascript" src="../../../_static/underscore.js"></script>
      <script type="text/javascript" src="../../../_static/doctools.js"></script>
      <script type="text/javascript" src="../../../_static/custom.js"></script>
      <script type="text/javascript" src="../../../_static/translations.js"></script>

  

  
  
    <script type="text/javascript" src="../../../_static/js/theme.js"></script>
  

  
  
  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>
   

</body>
</html>