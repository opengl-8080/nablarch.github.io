


<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->
<head>
  <meta charset="utf-8">
  <meta http-equiv='content-language' content='ja'>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>5.2.3.1. テーブルキューを監視し未処理データを取り込むアプリケーションの作成 &mdash; ∇Nablarch  5u19 ドキュメント</title>
  

  
  
  
  

  

  
  
    

  

  
  
    <link rel="stylesheet" href="../../../../../_static/custom.css" type="text/css" />
  

  

  
  <link rel="canonical" href="https://nablarch.github.io/docs/LATEST/doc/application_framework/application_framework/messaging/db/getting_started/table_queue.html" />
  
    <link rel="top" title="∇Nablarch  5u19 ドキュメント" href="../../../../../index.html"/>
        <link rel="up" title="5.2.3. Getting Started" href="../getting_started.html"/>
        <link rel="next" title="5.2.4. 機能詳細" href="../feature_details.html"/>
        <link rel="prev" title="5.2.3. Getting Started" href="../getting_started.html"/>
 

  
  <script src="../../../../../_static/js/modernizr.min.js"></script>

</head>

<body class="wy-body-for-nav" role="document">

   
  <div class="wy-grid-for-nav">

    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search">
          
  
  <a href="../../../../../index.html" id="sidebar-title" class="icon"> ∇Nablarch 
  

  
    <div id="sidebar-version">Version: 5u19</div>
  </a>

  <div role="search">
    <form id="google-search-form" class="wy-form" method="get" action="https://www.google.co.jp/search">
      <input type="text" name="text" placeholder="Search docs on google" id="text"/>
      <input type="hidden" name="q" id="q"/>
    </form>
  </div>
    
    

        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
  
  
    <ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../../../../about_nablarch/index.html">Nablarchについて</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../../about_nablarch/concept.html">Nablarchのコンセプト</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../about_nablarch/concept.html#robustness">Robustness</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../about_nablarch/concept.html#testability">Testability</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../about_nablarch/concept.html#ready-to-use">Ready-to-Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../about_nablarch/mvn_module.html">Nablarch のモジュール一覧</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../about_nablarch/license.html">Nablarchのライセンスについて</a></li>
</ul>
</li>
<li class="toctree-l1 current"><a class="reference internal" href="../../../../index.html">Nablarchアプリケーションフレームワーク</a><ul class="current">
<li class="toctree-l2 current"><a class="reference internal" href="../../../index.html">アプリケーションフレームワーク</a><ul class="current">
<li class="toctree-l3"><a class="reference internal" href="../../../nablarch/index.html">1. Nablarchアプリケーションフレームワークとは</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../web/index.html">2. ウェブアプリケーション編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../web_service/index.html">3. ウェブサービス編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../batch/index.html">4. バッチアプリケーション編</a></li>
<li class="toctree-l3 current"><a class="reference internal" href="../../index.html">5. メッセージング編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../handlers/index.html">6. Nablarchの提供する標準ハンドラ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../libraries/index.html">7. Nablarchが提供するライブラリ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../blank_project/index.html">8. ブランクプロジェクト</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../setting_guide/index.html">9. Nablarchアプリケーションフレームワーク設定ガイド</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../configuration/index.html">10. デフォルト設定一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../cloud_native/index.html">11. Nablarchクラウドネイティブ対応</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../adaptors/index.html">アダプタ</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/log_adaptor.html">logアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/router_adaptor.html">ルーティングアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/webspheremq_adaptor.html">IBM WebSphere MQアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/jaxrs_adaptor.html">JAX-RSアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/doma_adaptor.html">Domaアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/jsr310_adaptor.html">JSR310(Date and Time API)アダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/mail_sender_freemarker_adaptor.html">E-mail FreeMarkerアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/mail_sender_thymeleaf_adaptor.html">E-mail Thymeleafアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/mail_sender_velocity_adaptor.html">E-mail Velocityアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/web_thymeleaf_adaptor.html">ウェブアプリケーション Thymeleafアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/lettuce_adaptor.html">Lettuceアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/slf4j_adaptor.html">SLF4Jアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/micrometer_adaptor.html">Micrometerアダプタ</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../example/index.html">Example</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../example/index.html#id1">環境構築手順について</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../example/index.html#id2">アプリケーションの実行手順について</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../../extension_components/index.html">Nablarch拡張コンポーネント</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../../extension_components/report/index.html">1. 帳票ライブラリ</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../extension_components/report/index.html#id2">1.1. 概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../extension_components/report/index.html#id3">1.2. 要求</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../extension_components/report/index.html#id7">1.3. 構造</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../extension_components/report/index.html#report-template">1.4. 実装例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../extension_components/workflow/doc/index.html">2. ワークフローライブラリ</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../extension_components/workflow/doc/index.html#id3">2.1. 機能概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../extension_components/workflow/doc/index.html#id6">2.2. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../extension_components/workflow/doc/index.html#id7">2.3. 使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../extension_components/workflow/doc/index.html#xor">2.4. XORゲートウェイの進行先ノードの判定方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../extension_components/workflow/doc/index.html#workflow-multi-completion">2.5. マルチインスタンスの完了条件の判定方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../extension_components/workflow/tool/index.html">3. ワークフロー定義データ生成ツール</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../extension_components/workflow/tool/index.html#id3">3.1. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../extension_components/workflow/tool/index.html#id4">3.2. 使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../extension_components/etl/index.html">4. ETL</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../extension_components/etl/index.html#id3">4.1. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../extension_components/etl/index.html#etl-phase">4.2. ETLの各フェーズの仕様</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../extension_components/etl/index.html#id5">4.3. ETLを使用するバッチの設計ポイント</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../extension_components/etl/index.html#id9">4.4. 使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../extension_components/etl/index.html#id18">4.5. 拡張例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../extension_components/etl/etl_maven_plugin.html">5. ETL Mavenプラグイン</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../extension_components/etl/etl_maven_plugin.html#id2">5.1. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../extension_components/etl/etl_maven_plugin.html#id3">5.2. 使用方法</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../../development_tools/index.html">Nablarch開発ツール</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../../development_tools/java_static_analysis/index.html">1. 効率的なJava静的チェック</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/java_static_analysis/index.html#code-analysis">1.1. 構文チェックを行う</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/java_static_analysis/index.html#code-format">1.2. フォーマットを統一する</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/java_static_analysis/index.html#api">1.3. 許可していないAPIが使用されていないかチェックする</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../development_tools/ui_dev/index.html">2. フロントエンド上級者向けのUI開発基盤</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/ui_dev/doc/index.html">2.1. Nablarch UI開発基盤 解説書</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/ui_dev/guide/index.html">2.2. JSP/HTML作成ガイド</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/ui_dev/guide/widget_usage/widget_list.html">2.3. UI部品の実装サンプルで提供しているウィジェットの一覧</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../development_tools/testing_framework/index.html">3. テスティングフレームワーク</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/testing_framework/guide/development_guide/05_UnitTestGuide/index.html">3.1. 単体テスト実施方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/testing_framework/guide/development_guide/06_TestFWGuide/index.html">3.2. 自動テストフレームワークの使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/testing_framework/guide/development_guide/08_TestTools/index.html">3.3. プログラミング工程で使用するツール</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../development_tools/toolbox/index.html">4. アプリケーション開発時に使える便利なツール</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/toolbox/JspStaticAnalysis/index.html">4.1. JSP静的解析ツール</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/toolbox/SqlExecutor/SqlExecutor.html">4.2. Nablarch SQL Executor</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/toolbox/JspVerifier/JspVerifier.html">4.3. 業務画面JSP検証ツール</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../../examples/index.html">Nablarch実装例集</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/01/index.html">データベースを用いたパスワード認証機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/01/0101_PBKDF2PasswordEncryptor.html">PBKDF2を用いたパスワード暗号化機能サンプル</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/01/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/01/index.html#id4">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/01/index.html#id6">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/01/index.html#id12">使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/02/index.html">バリデーション機能の拡張</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/02/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/02/index.html#extendedvalidation-mailaddressvalidator">メールアドレスバリデーション</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/02/index.html#extendedvalidation-japanesetelnumbervalidator">日本電話番号バリデーション</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/02/index.html#id12">コード値精査</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/03/index.html">検索結果の一覧表示</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#id4">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#id5">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#id8">使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#listsearchinfo">ListSearchInfoクラス</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#listsearchresult">listSearchResultタグ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#listsearchresult-sort">検索結果の並び替え</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#listsearchresult-nopaging">1画面にすべての検索結果を一覧表示する場合の実装方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#listsearchresult-defaultcondition">デフォルトの検索条件で検索した結果を初期表示する場合の実装方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#listsearchresult-setting">検索結果の一覧表示機能のデフォルト値設定</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#listsearchresult-customize">業務アプリケーションへのサンプル実装(タグファイル)の取り込み方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#listsearchresult-tagreference">タグリファレンス</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/04/index.html">フォーマッタ機能の拡張</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/04/0401_ExtendedDataFormatter.html">データフォーマッタの拡張</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/04/0402_ExtendedFieldType.html">データフォーマッタ機能におけるフィールドタイプの拡張</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/05/index.html">データベースを用いたファイル管理機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/05/index.html#id2">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/05/index.html#id6">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/05/index.html#id7">機能</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/05/index.html#id10">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/05/index.html#id15">使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/06/index.html">CAPTCHA機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/06/06_Captcha_guide.html">CAPTCHA機能の組み込み手順</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/06/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/06/index.html#id4">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/06/index.html#id6">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/06/index.html#id21">使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/07/index.html">UserAgent情報取得機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/07/index.html#id1">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/07/index.html#id3">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/07/index.html#id8">設定の記述</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/07/index.html#id11">使用例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/08/index.html">HTMLメール送信機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/08/index.html#id1">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/08/index.html#id3">要求</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/08/index.html#id6">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/08/index.html#id14">実装例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/09/index.html">bouncycastleを使用した電子署名つきメールの送信サンプルの使用方法</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/09/index.html#id3">環境準備</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/09/index.html#id4">電子署名付きメール送信機能の構造</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/09/index.html#id5">設定ファイルの準備</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/09/index.html#id7">実行方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/10/index.html">ログ集計サンプルの使用方法</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/10/index.html#id3">提供サンプル一覧</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/11/index.html">メッセージング基盤テストシミュレータサンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/11/index.html#id4">用途</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/11/index.html#id8">特徴</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/11/index.html#id12">要求</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/11/index.html#id15">使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/11/index.html#id18">拡張例</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../../nablarch_api/index.html">Nablarch API</a></li>
</ul>

  

        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" role="navigation" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../../../../../index.html">∇Nablarch </a>
        
      </nav>


      
      <div class="wy-nav-content">
        <div class="rst-content">
          

 



<div role="navigation" aria-label="breadcrumbs navigation">
  <ul class="wy-breadcrumbs">
    <li><a href="../../../../../index.html">Docs</a> &raquo;</li>
      
          <li><a href="../../../../index.html">Nablarchアプリケーションフレームワーク</a> &raquo;</li>
      
          <li><a href="../../../index.html">アプリケーションフレームワーク</a> &raquo;</li>
      
          <li><a href="../../index.html">5. メッセージング編</a> &raquo;</li>
      
          <li><a href="../index.html">5.2. テーブルをキューとして使ったメッセージング</a> &raquo;</li>
      
          <li><a href="../getting_started.html">5.2.3. Getting Started</a> &raquo;</li>
      
    <li>5.2.3.1. テーブルキューを監視し未処理データを取り込むアプリケーションの作成</li>
    <li class="wy-breadcrumbs-aside">
      <a href="https://github.com/nablarch" class="fa fa-github">GitHub</a>
    </li>
    <li class="wy-breadcrumbs-aside">
        <a href="https://nablarch.github.io/docs/LATEST/doc/en/index.html" class="en">English</a>
    </li>
  </ul>
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  <div class="section" id="id1">
<h1>5.2.3.1. テーブルキューを監視し未処理データを取り込むアプリケーションの作成<a class="headerlink" href="#id1" title="このヘッドラインへのパーマリンク">¶</a></h1>
<p>Exampleアプリケーションを元にテーブルキューを監視し、未処理データを取り込むアプリケーションの解説を行う。</p>
<dl class="docutils">
<dt>作成する機能の概要</dt>
<dd><p class="first">テーブルキューを定期的に監視し、未処理データ(ステータス:<code class="docutils literal"><span class="pre">0</span></code>)のデータを取り込む。
テーブルキュー及び取り込み先テーブルの情報は以下の通り。</p>
<table class="last docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">監視対象のテーブルキュー:</th><td class="field-body">プロジェクト登録メッセージ受信(INS_PROJECT_RECEIVE_MESSAGE)</td>
</tr>
<tr class="field-even field"><th class="field-name">取り込み先テーブル:</th><td class="field-body">プロジェクト(PROJECT)</td>
</tr>
</tbody>
</table>
</dd>
<dt>Exampleアプリケーションの実行手順</dt>
<dd><p class="first">手順内で行っているSQLの実行については、任意のデータベースクライアントでH2に接続し、行うこと。
接続先情報は、 <code class="docutils literal"><span class="pre">config/database.properties</span></code> を参照。</p>
<ol class="arabic simple">
<li>プロジェクトテーブルのデータを削除する。</li>
</ol>
<div class="highlight-sql"><div class="highlight"><pre><span></span><span class="k">truncate</span> <span class="k">table</span> <span class="n">project</span>
</pre></div>
</div>
<ol class="arabic simple" start="2">
<li>アプリケーションを実行する。</li>
</ol>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="nv">$cd</span> nablarch-example-db-queue
<span class="nv">$mvn</span> clean package
<span class="nv">$mvn</span> exec:java -Dexec.mainClass<span class="o">=</span>nablarch.fw.launcher.Main ^
    -Dexec.args<span class="o">=</span><span class="s2">&quot;&#39;-diConfig&#39; &#39;com/nablarch/example/app/batch/project-creation-service.xml&#39; &#39;-requestPath&#39; &#39;ProjectCreationService&#39; &#39;-userId&#39; &#39;samp&#39;&quot;</span>
</pre></div>
</div>
<ol class="arabic simple" start="3">
<li>テーブルキューに未処理のデータを追加する。</li>
</ol>
<p>以下のSQLを実行し、監視対象のテーブルキューに未処理データを追加する。</p>
<div class="highlight-sql"><div class="highlight"><pre><span></span><span class="k">insert</span> <span class="k">into</span> <span class="n">ins_project_receive_message</span> <span class="p">(</span>
  <span class="n">received_message_sequence</span><span class="p">,</span>
  <span class="n">project_name</span><span class="p">,</span>
  <span class="n">project_type</span><span class="p">,</span>
  <span class="n">project_class</span><span class="p">,</span>
  <span class="n">project_start_date</span><span class="p">,</span>
  <span class="n">project_end_date</span><span class="p">,</span>
  <span class="n">client_id</span><span class="p">,</span>
  <span class="n">project_manager</span><span class="p">,</span>
  <span class="n">project_leader</span><span class="p">,</span>
  <span class="n">user_id</span><span class="p">,</span>
  <span class="n">note</span><span class="p">,</span>
  <span class="n">sales</span><span class="p">,</span>
  <span class="n">cost_of_goods_sold</span><span class="p">,</span>
  <span class="n">sga</span><span class="p">,</span>
  <span class="n">allocation_of_corp_expenses</span><span class="p">,</span>
  <span class="n">status</span>
<span class="p">)</span> <span class="k">values</span> <span class="p">(</span>
  <span class="mi">1</span><span class="p">,</span>
  <span class="s1">&#39;プロジェクト名&#39;</span><span class="p">,</span>
  <span class="s1">&#39;development&#39;</span><span class="p">,</span>
  <span class="s1">&#39;分類&#39;</span><span class="p">,</span>
  <span class="s1">&#39;2011-01-01&#39;</span><span class="p">,</span>
  <span class="s1">&#39;2020-12-31&#39;</span><span class="p">,</span>
  <span class="mi">1</span><span class="p">,</span>
  <span class="s1">&#39;admin&#39;</span><span class="p">,</span>
  <span class="s1">&#39;user1&#39;</span><span class="p">,</span>
  <span class="mi">1</span><span class="p">,</span>
  <span class="s1">&#39; &#39;</span><span class="p">,</span>
  <span class="mi">100</span><span class="p">,</span>
  <span class="mi">200</span><span class="p">,</span>
  <span class="mi">300</span><span class="p">,</span>
  <span class="mi">400</span><span class="p">,</span>
  <span class="s1">&#39;0&#39;</span>
<span class="p">)</span>
</pre></div>
</div>
<ol class="arabic simple" start="4">
<li>プロジェクトテーブルにデータが登録されていることを確認する。</li>
</ol>
<p>以下のSQLを実行し、未処理のデータがプロジェクトテーブルに取り込まれたことを確認する。</p>
<div class="highlight-sql"><div class="highlight"><pre><span></span><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">project</span>
</pre></div>
</div>
<ol class="arabic simple" start="5">
<li>アプリケーションを停止する。</li>
</ol>
<p class="last">アプリケーションを実行したコマンドプロンプトなどでプロセスを強制終了(Ctrl + Cなどで)する。</p>
</dd>
</dl>
<div class="section" id="db-queue-example-create-action">
<span id="id2"></span><h2>5.2.3.1.1. アクションクラスを作成する<a class="headerlink" href="#db-queue-example-create-action" title="このヘッドラインへのパーマリンク">¶</a></h2>
<p><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/action/BatchAction.html" title="nablarch.fw.action.BatchAction">BatchAction</a> を継承したアクションクラスを作成する。</p>
<dl class="docutils">
<dt>実装例</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProjectCreationServiceAction</span> <span class="kd">extends</span> <span class="n">BatchAction</span><span class="o">&lt;</span><span class="n">SqlRow</span><span class="o">&gt;</span> <span class="o">{</span>
  <span class="c1">// 中身の作成方法は後述</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
<dt>ポイント</dt>
<dd><ul class="first last simple">
<li>テーブルをキューとして扱うため、入力データはテーブルの検索結果となる。
このため、 <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/action/BatchAction.html" title="nablarch.fw.action.BatchAction">BatchAction</a> の型パラメータには <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/db/statement/SqlRow.html" title="nablarch.core.db.statement.SqlRow">SqlRow</a> を指定する。</li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="id3">
<h2>5.2.3.1.2. テーブルを監視するためのリーダを生成する<a class="headerlink" href="#id3" title="このヘッドラインへのパーマリンク">¶</a></h2>
<p><a class="reference internal" href="#db-queue-example-create-action"><span>アクションクラスを作成する</span></a> で作成したアクションクラスに、テーブルを監視するリーダを生成するメソッドを作成する。</p>
<p><a class="reference internal" href="../architecture.html#db-messaging-architecture-reader"><span>データベースキューで使用するリーダ</span></a> に記載がある通り、
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/reader/DatabaseTableQueueReader.html" title="nablarch.fw.reader.DatabaseTableQueueReader">DatabaseTableQueueReader</a> をリーダとして生成する。</p>
<dl class="docutils">
<dt>実装例</dt>
<dd><dl class="first last docutils">
<dt>アクションクラス</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="nd">@Override</span>
<span class="kd">public</span> <span class="n">DataReader</span><span class="o">&lt;</span><span class="n">SqlRow</span><span class="o">&gt;</span> <span class="nf">createReader</span><span class="o">(</span><span class="kd">final</span> <span class="n">ExecutionContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
    <span class="kd">final</span> <span class="n">DatabaseRecordReader</span> <span class="n">databaseRecordReader</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DatabaseRecordReader</span><span class="o">();</span>

    <span class="n">databaseRecordReader</span><span class="o">.</span><span class="na">setStatement</span><span class="o">(</span>
            <span class="n">getParameterizedSqlStatement</span><span class="o">(</span><span class="s">&quot;FIND_RECEIVED_PROJECTS&quot;</span><span class="o">),</span> <span class="n">PROCESS_MAP</span><span class="o">);</span>

    <span class="n">databaseRecordReader</span><span class="o">.</span><span class="na">setListener</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="o">{</span>
        <span class="kd">final</span> <span class="n">SimpleDbTransactionManager</span> <span class="n">transactionManager</span> <span class="o">=</span>
                <span class="n">SystemRepository</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;redundancyTransaction&quot;</span><span class="o">);</span>
        <span class="k">new</span> <span class="n">SimpleDbTransactionExecutor</span><span class="o">&lt;</span><span class="n">Void</span><span class="o">&gt;(</span><span class="n">transactionManager</span><span class="o">)</span> <span class="o">{</span>
            <span class="nd">@Override</span>
            <span class="kd">public</span> <span class="n">Void</span> <span class="nf">execute</span><span class="o">(</span><span class="kd">final</span> <span class="n">AppDbConnection</span> <span class="n">appDbConnection</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">appDbConnection</span>
                        <span class="o">.</span><span class="na">prepareParameterizedSqlStatementBySqlId</span><span class="o">(</span>
                                <span class="n">SQL_ID_PREFIX</span> <span class="o">+</span> <span class="s">&quot;UPDATE_PROCESS_ID&quot;</span><span class="o">)</span>
                        <span class="o">.</span><span class="na">executeUpdateByMap</span><span class="o">(</span><span class="n">PROCESS_MAP</span><span class="o">);</span>
                <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}.</span><span class="na">doTransaction</span><span class="o">();</span>
    <span class="o">});</span>

    <span class="k">return</span> <span class="k">new</span> <span class="n">DatabaseTableQueueReader</span><span class="o">(</span>
            <span class="n">databaseRecordReader</span><span class="o">,</span> <span class="mi">1000</span><span class="o">,</span> <span class="s">&quot;RECEIVED_MESSAGE_SEQUENCE&quot;</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
<dt>SQLファイル(ProjectCreationServiceAction.sql)</dt>
<dd><div class="first last highlight-sql"><div class="highlight"><pre><span></span><span class="c1">-- 未処理の受信データを悲観ロックするSQL</span>
<span class="n">UPDATE_PROCESS_ID</span><span class="o">=</span>
<span class="k">update</span>
  <span class="n">ins_project_receive_message</span>
<span class="k">set</span>
  <span class="n">process_id</span> <span class="o">=</span> <span class="p">:</span><span class="n">processId</span>
<span class="k">where</span>
  <span class="n">status</span> <span class="o">=</span> <span class="s1">&#39;0&#39;</span> <span class="k">and</span> <span class="n">process_id</span> <span class="k">is</span> <span class="k">null</span>

<span class="c1">-- 未処理の受信データを取得するSQL</span>
<span class="n">FIND_RECEIVED_PROJECTS</span><span class="o">=</span>
<span class="k">select</span>
  <span class="n">received_message_sequence</span>
<span class="k">from</span>
  <span class="n">ins_project_receive_message</span>
<span class="k">where</span>
  <span class="n">status</span> <span class="o">=</span> <span class="s1">&#39;0&#39;</span> <span class="k">and</span> <span class="n">process_id</span> <span class="o">=</span> <span class="p">:</span><span class="n">processId</span>
</pre></div>
</div>
</dd>
</dl>
</dd>
<dt>ポイント</dt>
<dd><ul class="first last simple">
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/action/BatchAction.html#createReader-nablarch.fw.ExecutionContext-" title="nablarch.fw.action.BatchAction.createReader(nablarch.fw.ExecutionContext)">createReader</a> を実装し、
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/reader/DatabaseTableQueueReader.html" title="nablarch.fw.reader.DatabaseTableQueueReader">DatabaseTableQueueReader</a> を生成する。</li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/reader/DatabaseTableQueueReader.html" title="nablarch.fw.reader.DatabaseTableQueueReader">DatabaseTableQueueReader</a> には以下を指定する。<ul>
<li>データベースから検索を行うためのリーダ(<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/reader/DatabaseRecordReader.html" title="nablarch.fw.reader.DatabaseRecordReader">DatabaseRecordReader</a>)</li>
<li>未処理データが存在しない場合の待機時間(この例では1秒)</li>
<li>主キーのカラム名のリスト</li>
</ul>
</li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/reader/DatabaseRecordReader.html" title="nablarch.fw.reader.DatabaseRecordReader">DatabaseRecordReader</a> には以下を指定する。<ul>
<li>未処理データを検索するための <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/db/statement/SqlPStatement.html" title="nablarch.core.db.statement.SqlPStatement">SqlPStatement</a></li>
<li>未処理データの悲観ロックを行う
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/reader/DatabaseRecordListener.html" title="nablarch.fw.reader.DatabaseRecordListener">DatabaseRecordListener</a> の実装クラス。
詳細は、<a class="reference internal" href="../feature_details/multiple_process.html#db-messaging-multiple-process"><span>マルチプロセス化</span></a> を参照。</li>
</ul>
</li>
<li>SQLファイルでは、以下のSQLを定義する。<ul>
<li>他のプロセスの処理対象となることを防ぐため、未処理データを悲観ロックするSQL</li>
<li>自身のプロセスの処理対象となる未処理データを取得するため、
<code class="docutils literal"><span class="pre">STATUS</span></code> カラムの値が <code class="docutils literal"><span class="pre">0</span></code> 、かつ <code class="docutils literal"><span class="pre">PROCESS_ID</span></code> カラムの値が自身のプロセスIDであるレコードを取得するSQL</li>
</ul>
</li>
<li>SQLファイルへのSQLの記述ルールは、 <a class="reference internal" href="../../../libraries/database/database.html#database-use-sql-file"><span>SQLをファイルで管理する</span></a> を参照。</li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="id4">
<h2>5.2.3.1.3. 未処理データを元に業務処理を実行する<a class="headerlink" href="#id4" title="このヘッドラインへのパーマリンク">¶</a></h2>
<p><a class="reference internal" href="#db-queue-example-create-action"><span>アクションクラスを作成する</span></a> で作成したアクションクラスに、業務処理を実装するメソッドを作成する。</p>
<dl class="docutils">
<dt>実装例</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="nd">@Override</span>
<span class="kd">public</span> <span class="n">Result</span> <span class="nf">handle</span><span class="o">(</span><span class="kd">final</span> <span class="n">SqlRow</span> <span class="n">inputData</span><span class="o">,</span> <span class="kd">final</span> <span class="n">ExecutionContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>

  <span class="c1">// 未処理データの主キーを元に属性データを取得する</span>
  <span class="kd">final</span> <span class="n">Project</span> <span class="n">project</span> <span class="o">=</span> <span class="n">UniversalDao</span><span class="o">.</span><span class="na">findBySqlFile</span><span class="o">(</span>
      <span class="n">Project</span><span class="o">.</span><span class="na">class</span><span class="o">,</span>
      <span class="n">SQL_ID</span> <span class="o">+</span> <span class="s">&quot;GET_RECEIVED_PROJECT&quot;</span><span class="o">,</span>
      <span class="n">inputData</span><span class="o">);</span>

  <span class="k">if</span> <span class="o">(!</span><span class="n">isValidProjectPeriod</span><span class="o">(</span><span class="n">project</span><span class="o">))</span> <span class="o">{</span>
    <span class="k">throw</span> <span class="k">new</span> <span class="n">ApplicationException</span><span class="o">(</span>
        <span class="n">MessageUtil</span><span class="o">.</span><span class="na">createMessage</span><span class="o">(</span><span class="n">MessageLevel</span><span class="o">.</span><span class="na">ERROR</span><span class="o">,</span> <span class="s">&quot;abnormal.project.period&quot;</span><span class="o">));</span>
  <span class="o">}</span>

  <span class="c1">// プロジェクトテーブルへ登録する</span>
  <span class="n">UniversalDao</span><span class="o">.</span><span class="na">insert</span><span class="o">(</span><span class="n">project</span><span class="o">);</span>

  <span class="k">return</span> <span class="k">new</span> <span class="n">Result</span><span class="o">.</span><span class="na">Success</span><span class="o">();</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
<dt>ポイント</dt>
<dd><ul class="first last simple">
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/action/BatchAction.html#handle-D-nablarch.fw.ExecutionContext-" title="nablarch.fw.action.BatchAction.handle(D-nablarch.fw.ExecutionContext)">handle</a> メソッドに業務処理を実装する。
(処理内容の詳細な説明は、Example依存のため省略する。)</li>
<li>正常に処理したことを示す <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/Result.Success.html" title="nablarch.fw.Result.Success">Result.Success</a> を返却する。
処理が失敗した場合、例外を送出するため、常に <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/Result.Success.html" title="nablarch.fw.Result.Success">Result.Success</a> を返却すれば良い。</li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="id5">
<h2>5.2.3.1.4. 処理済みデータのステータスを更新する<a class="headerlink" href="#id5" title="このヘッドラインへのパーマリンク">¶</a></h2>
<p><a class="reference internal" href="#db-queue-example-create-action"><span>アクションクラスを作成する</span></a> で作成したアクションクラスに、ステータスを更新するメソッドを作成する。</p>
<dl class="docutils">
<dt>実装例</dt>
<dd><dl class="first last docutils">
<dt>アクションクラス</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="nd">@Override</span>
<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">transactionSuccess</span><span class="o">(</span><span class="kd">final</span> <span class="n">SqlRow</span> <span class="n">inputData</span><span class="o">,</span> <span class="kd">final</span> <span class="n">ExecutionContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
  <span class="c1">// ステータスを正常に更新する</span>
  <span class="n">updateStatus</span><span class="o">(</span><span class="n">inputData</span><span class="o">,</span> <span class="n">StatusUpdateDto</span><span class="o">::</span><span class="n">createNormalEnd</span><span class="o">);</span>
<span class="o">}</span>

<span class="nd">@Override</span>
<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">transactionFailure</span><span class="o">(</span><span class="kd">final</span> <span class="n">SqlRow</span> <span class="n">inputData</span><span class="o">,</span> <span class="kd">final</span> <span class="n">ExecutionContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
  <span class="c1">// ステータスを異常(失敗)に更新する</span>
  <span class="n">updateStatus</span><span class="o">(</span><span class="n">inputData</span><span class="o">,</span> <span class="n">StatusUpdateDto</span><span class="o">::</span><span class="n">createAbnormalEnd</span><span class="o">);</span>
<span class="o">}</span>

<span class="kd">private</span> <span class="kt">void</span> <span class="nf">updateStatus</span><span class="o">(</span>
    <span class="kd">final</span> <span class="n">SqlRow</span> <span class="n">inputData</span><span class="o">,</span> <span class="kd">final</span> <span class="n">Function</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">StatusUpdateDto</span><span class="o">&gt;</span> <span class="n">function</span><span class="o">)</span> <span class="o">{</span>
  <span class="n">getParameterizedSqlStatement</span><span class="o">(</span><span class="s">&quot;UPDATE_STATUS&quot;</span><span class="o">)</span>
      <span class="o">.</span><span class="na">executeUpdateByObject</span><span class="o">(</span>
          <span class="n">function</span><span class="o">.</span><span class="na">apply</span><span class="o">(</span><span class="n">inputData</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">&quot;RECEIVED_MESSAGE_SEQUENCE&quot;</span><span class="o">)));</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kd">class</span> <span class="nc">StatusUpdateDto</span> <span class="o">{</span>
  <span class="c1">// プロパティ及びアクセッサ、Javadocは省略</span>

  <span class="kd">private</span> <span class="kd">static</span> <span class="n">StatusUpdateDto</span> <span class="nf">createNormalEnd</span><span class="o">(</span><span class="n">String</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">return</span> <span class="k">new</span> <span class="n">StatusUpdateDto</span><span class="o">(</span><span class="n">id</span><span class="o">,</span> <span class="s">&quot;1&quot;</span><span class="o">);</span>
  <span class="o">}</span>

  <span class="kd">private</span> <span class="kd">static</span> <span class="n">StatusUpdateDto</span> <span class="nf">createAbnormalEnd</span><span class="o">(</span><span class="n">String</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">return</span> <span class="k">new</span> <span class="n">StatusUpdateDto</span><span class="o">(</span><span class="n">id</span><span class="o">,</span> <span class="s">&quot;2&quot;</span><span class="o">);</span>
  <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
<dt>SQLファイル(ProjectCreationServiceAction.sql)</dt>
<dd><div class="first last highlight-sql"><div class="highlight"><pre><span></span><span class="c1">-- ステータスを更新するSQL</span>
<span class="n">UPDATE_STATUS</span> <span class="o">=</span>
<span class="k">update</span>
  <span class="n">ins_project_receive_message</span>
<span class="k">set</span>
  <span class="n">status</span> <span class="o">=</span> <span class="p">:</span><span class="n">newStatus</span>
<span class="k">where</span>
  <span class="n">received_message_sequence</span> <span class="o">=</span> <span class="p">:</span><span class="n">id</span>
</pre></div>
</div>
</dd>
</dl>
</dd>
<dt>ポイント</dt>
<dd><ul class="first last simple">
<li>正常に処理できたレコードの更新処理は、 <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/action/BatchActionBase.html#transactionSuccess-D-nablarch.fw.ExecutionContext-" title="nablarch.fw.action.BatchActionBase.transactionSuccess(D-nablarch.fw.ExecutionContext)">transactionSuccess</a> に実装する。
(正常に処理できた場合(例外が送出されなかった場合)、このメソッドがNablarchによりコールバックされる。)</li>
<li>正常に処理できなかったレコードの更新処理は、 <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/action/BatchActionBase.html#transactionSuccess-D-nablarch.fw.ExecutionContext-" title="nablarch.fw.action.BatchActionBase.transactionSuccess(D-nablarch.fw.ExecutionContext)">transactionFailure</a> に実装する。
(処理中に例外やエラーが送出されたレコードの場合、このメソッドがNablarchによりコールバックされる)</li>
<li>SQLでは、指定のレコードのステータスを更新する。</li>
<li>SQLファイルへのSQLの記述ルールは、 <a class="reference internal" href="../../../libraries/database/database.html#database-use-sql-file"><span>SQLをファイルで管理する</span></a> を参照。</li>
</ul>
</dd>
</dl>
</div>
</div>


           </div>
           <div class="articleComments">
            
           </div>
          </div>
          <footer>

    <hr/>

    <div role="contentinfo">
        <p>
            &copy; Copyright 2010-2021, TIS Inc.
        </p>
    </div>
    Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org">Read the Docs</a>.

</footer>

        </div>
      </div>

    </section>

  </div>
  


  

    <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'../../../../../',
            VERSION:'5u19',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true,
            SOURCELINK_SUFFIX: ''
        };
    </script>
      <script type="text/javascript" src="../../../../../_static/jquery.js"></script>
      <script type="text/javascript" src="../../../../../_static/underscore.js"></script>
      <script type="text/javascript" src="../../../../../_static/doctools.js"></script>
      <script type="text/javascript" src="../../../../../_static/custom.js"></script>
      <script type="text/javascript" src="../../../../../_static/translations.js"></script>

  

  
  
    <script type="text/javascript" src="../../../../../_static/js/theme.js"></script>
  

  
  
  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>
   

</body>
</html>