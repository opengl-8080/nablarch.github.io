


<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->
<head>
  <meta charset="utf-8">
  <meta http-equiv='content-language' content='ja'>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>7.6.2. HTTPメッセージング &mdash; ∇Nablarch  5u19 ドキュメント</title>
  

  
  
  
  

  

  
  
    

  

  
  
    <link rel="stylesheet" href="../../../../_static/custom.css" type="text/css" />
  

  

  
  <link rel="canonical" href="https://nablarch.github.io/docs/LATEST/doc/application_framework/application_framework/libraries/system_messaging/http_system_messaging.html" />
  
    <link rel="top" title="∇Nablarch  5u19 ドキュメント" href="../../../../index.html"/>
        <link rel="up" title="7.6. システム間メッセージング" href="../system_messaging.html"/>
        <link rel="next" title="7.7. メール送信" href="../mail.html"/>
        <link rel="prev" title="7.6.1. MOMメッセージング" href="mom_system_messaging.html"/>
 

  
  <script src="../../../../_static/js/modernizr.min.js"></script>

</head>

<body class="wy-body-for-nav" role="document">

   
  <div class="wy-grid-for-nav">

    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search">
          
  
  <a href="../../../../index.html" id="sidebar-title" class="icon"> ∇Nablarch 
  

  
    <div id="sidebar-version">Version: 5u19</div>
  </a>

  <div role="search">
    <form id="google-search-form" class="wy-form" method="get" action="https://www.google.co.jp/search">
      <input type="text" name="text" placeholder="Search docs on google" id="text"/>
      <input type="hidden" name="q" id="q"/>
    </form>
  </div>
    
    

        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
  
  
    <ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../../../about_nablarch/index.html">Nablarchについて</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../about_nablarch/concept.html">Nablarchのコンセプト</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../about_nablarch/concept.html#robustness">Robustness</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../about_nablarch/concept.html#testability">Testability</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../about_nablarch/concept.html#ready-to-use">Ready-to-Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../about_nablarch/mvn_module.html">Nablarch のモジュール一覧</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../about_nablarch/license.html">Nablarchのライセンスについて</a></li>
</ul>
</li>
<li class="toctree-l1 current"><a class="reference internal" href="../../../index.html">Nablarchアプリケーションフレームワーク</a><ul class="current">
<li class="toctree-l2 current"><a class="reference internal" href="../../index.html">アプリケーションフレームワーク</a><ul class="current">
<li class="toctree-l3"><a class="reference internal" href="../../nablarch/index.html">1. Nablarchアプリケーションフレームワークとは</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../web/index.html">2. ウェブアプリケーション編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../web_service/index.html">3. ウェブサービス編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../batch/index.html">4. バッチアプリケーション編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../messaging/index.html">5. メッセージング編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../handlers/index.html">6. Nablarchの提供する標準ハンドラ</a></li>
<li class="toctree-l3 current"><a class="reference internal" href="../index.html">7. Nablarchが提供するライブラリ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../blank_project/index.html">8. ブランクプロジェクト</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../setting_guide/index.html">9. Nablarchアプリケーションフレームワーク設定ガイド</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../configuration/index.html">10. デフォルト設定一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../cloud_native/index.html">11. Nablarchクラウドネイティブ対応</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../adaptors/index.html">アダプタ</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/log_adaptor.html">logアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/router_adaptor.html">ルーティングアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/webspheremq_adaptor.html">IBM WebSphere MQアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/jaxrs_adaptor.html">JAX-RSアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/doma_adaptor.html">Domaアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/jsr310_adaptor.html">JSR310(Date and Time API)アダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/mail_sender_freemarker_adaptor.html">E-mail FreeMarkerアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/mail_sender_thymeleaf_adaptor.html">E-mail Thymeleafアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/mail_sender_velocity_adaptor.html">E-mail Velocityアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/web_thymeleaf_adaptor.html">ウェブアプリケーション Thymeleafアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/lettuce_adaptor.html">Lettuceアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/slf4j_adaptor.html">SLF4Jアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/micrometer_adaptor.html">Micrometerアダプタ</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../example/index.html">Example</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../example/index.html#id1">環境構築手順について</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../example/index.html#id2">アプリケーションの実行手順について</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../extension_components/index.html">Nablarch拡張コンポーネント</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/report/index.html">1. 帳票ライブラリ</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/report/index.html#id2">1.1. 概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/report/index.html#id3">1.2. 要求</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/report/index.html#id7">1.3. 構造</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/report/index.html#report-template">1.4. 実装例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/workflow/doc/index.html">2. ワークフローライブラリ</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/workflow/doc/index.html#id3">2.1. 機能概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/workflow/doc/index.html#id6">2.2. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/workflow/doc/index.html#id7">2.3. 使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/workflow/doc/index.html#xor">2.4. XORゲートウェイの進行先ノードの判定方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/workflow/doc/index.html#workflow-multi-completion">2.5. マルチインスタンスの完了条件の判定方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/workflow/tool/index.html">3. ワークフロー定義データ生成ツール</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/workflow/tool/index.html#id3">3.1. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/workflow/tool/index.html#id4">3.2. 使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/etl/index.html">4. ETL</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/etl/index.html#id3">4.1. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/etl/index.html#etl-phase">4.2. ETLの各フェーズの仕様</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/etl/index.html#id5">4.3. ETLを使用するバッチの設計ポイント</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/etl/index.html#id9">4.4. 使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/etl/index.html#id18">4.5. 拡張例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/etl/etl_maven_plugin.html">5. ETL Mavenプラグイン</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/etl/etl_maven_plugin.html#id2">5.1. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/etl/etl_maven_plugin.html#id3">5.2. 使用方法</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../development_tools/index.html">Nablarch開発ツール</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html">1. 効率的なJava静的チェック</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html#code-analysis">1.1. 構文チェックを行う</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html#code-format">1.2. フォーマットを統一する</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html#api">1.3. 許可していないAPIが使用されていないかチェックする</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/ui_dev/index.html">2. フロントエンド上級者向けのUI開発基盤</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/ui_dev/doc/index.html">2.1. Nablarch UI開発基盤 解説書</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/ui_dev/guide/index.html">2.2. JSP/HTML作成ガイド</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/ui_dev/guide/widget_usage/widget_list.html">2.3. UI部品の実装サンプルで提供しているウィジェットの一覧</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/testing_framework/index.html">3. テスティングフレームワーク</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/testing_framework/guide/development_guide/05_UnitTestGuide/index.html">3.1. 単体テスト実施方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/testing_framework/guide/development_guide/06_TestFWGuide/index.html">3.2. 自動テストフレームワークの使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/testing_framework/guide/development_guide/08_TestTools/index.html">3.3. プログラミング工程で使用するツール</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/toolbox/index.html">4. アプリケーション開発時に使える便利なツール</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/toolbox/JspStaticAnalysis/index.html">4.1. JSP静的解析ツール</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/toolbox/SqlExecutor/SqlExecutor.html">4.2. Nablarch SQL Executor</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/toolbox/JspVerifier/JspVerifier.html">4.3. 業務画面JSP検証ツール</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../examples/index.html">Nablarch実装例集</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/01/index.html">データベースを用いたパスワード認証機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/0101_PBKDF2PasswordEncryptor.html">PBKDF2を用いたパスワード暗号化機能サンプル</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#id4">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#id6">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#id12">使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/02/index.html">バリデーション機能の拡張</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#extendedvalidation-mailaddressvalidator">メールアドレスバリデーション</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#extendedvalidation-japanesetelnumbervalidator">日本電話番号バリデーション</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#id12">コード値精査</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/03/index.html">検索結果の一覧表示</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#id4">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#id5">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#id8">使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchinfo">ListSearchInfoクラス</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchresult">listSearchResultタグ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchresult-sort">検索結果の並び替え</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchresult-nopaging">1画面にすべての検索結果を一覧表示する場合の実装方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchresult-defaultcondition">デフォルトの検索条件で検索した結果を初期表示する場合の実装方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchresult-setting">検索結果の一覧表示機能のデフォルト値設定</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchresult-customize">業務アプリケーションへのサンプル実装(タグファイル)の取り込み方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchresult-tagreference">タグリファレンス</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/04/index.html">フォーマッタ機能の拡張</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/04/0401_ExtendedDataFormatter.html">データフォーマッタの拡張</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/04/0402_ExtendedFieldType.html">データフォーマッタ機能におけるフィールドタイプの拡張</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/05/index.html">データベースを用いたファイル管理機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#id2">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#id6">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#id7">機能</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#id10">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#id15">使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/06/index.html">CAPTCHA機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/06_Captcha_guide.html">CAPTCHA機能の組み込み手順</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#id4">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#id6">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#id21">使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/07/index.html">UserAgent情報取得機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#id1">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#id3">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#id8">設定の記述</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#id11">使用例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/08/index.html">HTMLメール送信機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#id1">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#id3">要求</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#id6">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#id14">実装例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/09/index.html">bouncycastleを使用した電子署名つきメールの送信サンプルの使用方法</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#id3">環境準備</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#id4">電子署名付きメール送信機能の構造</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#id5">設定ファイルの準備</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#id7">実行方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/10/index.html">ログ集計サンプルの使用方法</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/10/index.html#id3">提供サンプル一覧</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/11/index.html">メッセージング基盤テストシミュレータサンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#id4">用途</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#id8">特徴</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#id12">要求</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#id15">使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#id18">拡張例</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../nablarch_api/index.html">Nablarch API</a></li>
</ul>

  

        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" role="navigation" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../../../../index.html">∇Nablarch </a>
        
      </nav>


      
      <div class="wy-nav-content">
        <div class="rst-content">
          

 



<div role="navigation" aria-label="breadcrumbs navigation">
  <ul class="wy-breadcrumbs">
    <li><a href="../../../../index.html">Docs</a> &raquo;</li>
      
          <li><a href="../../../index.html">Nablarchアプリケーションフレームワーク</a> &raquo;</li>
      
          <li><a href="../../index.html">アプリケーションフレームワーク</a> &raquo;</li>
      
          <li><a href="../index.html">7. Nablarchが提供するライブラリ</a> &raquo;</li>
      
          <li><a href="../system_messaging.html">7.6. システム間メッセージング</a> &raquo;</li>
      
    <li>7.6.2. HTTPメッセージング</li>
    <li class="wy-breadcrumbs-aside">
      <a href="https://github.com/nablarch" class="fa fa-github">GitHub</a>
    </li>
    <li class="wy-breadcrumbs-aside">
        <a href="https://nablarch.github.io/docs/LATEST/doc/en/index.html" class="en">English</a>
    </li>
  </ul>
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  <div class="section" id="http">
<span id="http-system-messaging"></span><h1>7.6.2. HTTPメッセージング<a class="headerlink" href="#http" title="このヘッドラインへのパーマリンク">¶</a></h1>
<div class="contents local topic" id="id1">
<p class="topic-title first">目次</p>
<ul class="simple">
<li><a class="reference internal" href="#id2" id="id11">機能概要</a><ul>
<li><a class="reference internal" href="#mom-system-messaging" id="id12"><a class="reference internal" href="mom_system_messaging.html#mom-system-messaging"><span>MOMメッセージング</span></a> と同じ作り方ができる</a></li>
</ul>
</li>
<li><a class="reference internal" href="#id3" id="id13">モジュール一覧</a></li>
<li><a class="reference internal" href="#id4" id="id14">使用方法</a><ul>
<li><a class="reference internal" href="#http-system-messaging-settings" id="id15">HTTPメッセージングを使うための設定を行う</a></li>
<li><a class="reference internal" href="#http-system-messaging-message-receive" id="id16">メッセージを受信する(HTTPメッセージ受信)</a></li>
<li><a class="reference internal" href="#http-system-messaging-message-send" id="id17">メッセージを送信する(HTTPメッセージ送信)</a></li>
</ul>
</li>
<li><a class="reference internal" href="#id8" id="id18">拡張例</a><ul>
<li><a class="reference internal" href="#http-system-messaging-change-fw-header" id="id19">フレームワーク制御ヘッダの読み書きを変更する</a></li>
<li><a class="reference internal" href="#httphttp" id="id20">HTTPメッセージ送信のHTTPクライアント処理を変更する</a></li>
</ul>
</li>
<li><a class="reference internal" href="#http-system-messaging-data-model" id="id21">送受信電文のデータモデル</a></li>
</ul>
</div>
<p>HTTPを使ったメッセージの送受信を行う機能を提供する。</p>
<p>HTTPメッセージングでは、 <a class="reference internal" href="#http-system-messaging-data-model"><span>送受信電文のデータモデル</span></a> に示したデータモデルを前提としている。
また、メッセージのフォーマットには、 <a class="reference internal" href="../data_io/data_format.html#data-format"><span>汎用データフォーマット</span></a> を使用する。</p>
<div class="admonition important">
<p class="first admonition-title">重要</p>
<p><a class="reference internal" href="#http-system-messaging-data-model"><span>送受信電文のデータモデル</span></a> の中で、
<a class="reference internal" href="mom_system_messaging.html#mom-system-messaging-fw-header"><span>フレームワーク制御ヘッダ</span></a> については、
Nablarchで独自に規定している項目となり、 <a class="reference internal" href="#http-system-messaging-message-body"><span>メッセージボディ</span></a> に含めることを想定している。</p>
<p>プロジェクト側で電文フォーマットを設計できる場合は問題ないが、外部システムにより既に電文フォーマットが規定されている場合は、この想定が適合しない場合がある。</p>
<p>このため、本機能ではなく以下の機能を使用することを推奨する。</p>
<ul class="simple">
<li>サーバサイド(メッセージ受信)については、 <a class="reference internal" href="../../web_service/rest/index.html#restful-web-service"><span>RESTfulウェブサービス</span></a> の使用を推奨する。</li>
<li>クライアントサイド(メッセージ送信)については、JSR339(JAX-RS2.0)にて提供されるClient機能の使用を推奨する。</li>
</ul>
<p class="last">なお、本機能をやむを得ない事情にて使用しなければならない場合は、 <a class="reference internal" href="#http-system-messaging-change-fw-header"><span>フレームワーク制御ヘッダの読み書きを変更する</span></a> を参照し、プロジェクトで実装を追加して対応すること。</p>
</div>
<p>HTTPメッセージングは送受信の種類により、想定している実行制御基盤が異なる。</p>
<table border="1" class="colwidths-given white-space-normal docutils">
<colgroup>
<col width="50%" />
<col width="50%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">送受信の種類</th>
<th class="head">実行制御基盤</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td><a class="reference internal" href="#http-system-messaging-message-receive"><span>HTTPメッセージ受信</span></a></td>
<td><a class="reference internal" href="../../web_service/http_messaging/index.html#http-messaging"><span>HTTPメッセージング</span></a></td>
</tr>
<tr class="row-odd"><td><a class="reference internal" href="#http-system-messaging-message-send"><span>HTTPメッセージ送信</span></a></td>
<td>実行制御基盤に依存しない</td>
</tr>
</tbody>
</table>
<div class="section" id="id2">
<h2><a class="toc-backref" href="#id11">7.6.2.1. 機能概要</a><a class="headerlink" href="#id2" title="このヘッドラインへのパーマリンク">¶</a></h2>
<div class="section" id="mom-system-messaging">
<h3><a class="toc-backref" href="#id12">7.6.2.1.1. <a class="reference internal" href="mom_system_messaging.html#mom-system-messaging"><span>MOMメッセージング</span></a> と同じ作り方ができる</a><a class="headerlink" href="#mom-system-messaging" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p>HTTPメッセージングでは、メッセージの送受信の実装を <a class="reference internal" href="mom_system_messaging.html#mom-system-messaging"><span>MOMメッセージング</span></a> と同じ以下のAPIで行う。
そのため、 <a class="reference internal" href="mom_system_messaging.html#mom-system-messaging"><span>MOMメッセージング</span></a> の経験があれば、少ない学習時間で実装することができる。</p>
<ul class="simple">
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/MessagingAction.html" title="nablarch.fw.messaging.action.MessagingAction">MessagingAction</a></li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/MessageSender.html" title="nablarch.fw.messaging.MessageSender">MessageSender</a></li>
</ul>
</div>
</div>
<div class="section" id="id3">
<h2><a class="toc-backref" href="#id13">7.6.2.2. モジュール一覧</a><a class="headerlink" href="#id3" title="このヘッドラインへのパーマリンク">¶</a></h2>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>com.nablarch.framework<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>nablarch-fw-messaging<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
<span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>com.nablarch.framework<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>nablarch-fw-messaging-http<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</pre></div>
</div>
</div>
<div class="section" id="id4">
<h2><a class="toc-backref" href="#id14">7.6.2.3. 使用方法</a><a class="headerlink" href="#id4" title="このヘッドラインへのパーマリンク">¶</a></h2>
<div class="section" id="http-system-messaging-settings">
<span id="id5"></span><h3><a class="toc-backref" href="#id15">7.6.2.3.1. HTTPメッセージングを使うための設定を行う</a><a class="headerlink" href="#http-system-messaging-settings" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p>メッセージ受信の場合は、実行制御基盤のハンドラ構成以外に特に設定は不要である。</p>
<p>メッセージ送信の場合は、以下のクラスをコンポーネント定義に追加する。</p>
<ul class="simple">
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/MessageSenderClient.html" title="nablarch.fw.messaging.MessageSenderClient">MessageSenderClient</a> の実装クラス (HTTPの送受信)</li>
</ul>
<p>以下に設定例を示す。</p>
<dl class="docutils">
<dt>ポイント</dt>
<dd><ul class="first last simple">
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/MessageSenderClient.html" title="nablarch.fw.messaging.MessageSenderClient">MessageSenderClient</a> のデフォルト実装として
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/realtime/http/client/HttpMessagingClient.html" title="nablarch.fw.messaging.realtime.http.client.HttpMessagingClient">HttpMessagingClient</a> を提供している。</li>
<li>ルックアップして使用されるため、コンポーネント名は <code class="docutils literal"><span class="pre">messageSenderClient</span></code> と指定する。</li>
</ul>
</dd>
</dl>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;messageSenderClient&quot;</span>
           <span class="na">class=</span><span class="s">&quot;nablarch.fw.messaging.realtime.http.client.HttpMessagingClient&quot;</span> <span class="nt">/&gt;</span>
</pre></div>
</div>
</div>
<div class="section" id="http-system-messaging-message-receive">
<span id="id6"></span><h3><a class="toc-backref" href="#id16">7.6.2.3.2. メッセージを受信する(HTTPメッセージ受信)</a><a class="headerlink" href="#http-system-messaging-message-receive" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p>外部システムからメッセージを受信し、その応答を送信する。</p>
<a class="reference internal image-reference" href="../../../../_images/http_system_messaging-message_receive.png"><img alt="../../../../_images/http_system_messaging-message_receive.png" src="../../../../_images/http_system_messaging-message_receive.png" /></a>
<dl class="docutils">
<dt>実装例</dt>
<dd><dl class="first docutils">
<dt>ポイント</dt>
<dd><ul class="first last simple">
<li>HTTPメッセージ受信は、 <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/MessagingAction.html" title="nablarch.fw.messaging.action.MessagingAction">MessagingAction</a> で作成する。</li>
<li>応答電文は、 <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/RequestMessage.html#reply--" title="nablarch.fw.messaging.RequestMessage.reply()">RequestMessage.reply</a> で作成する。</li>
</ul>
</dd>
</dl>
<div class="last highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SampleAction</span> <span class="kd">extends</span> <span class="n">MessagingAction</span> <span class="o">{</span>
    <span class="kd">protected</span> <span class="n">ResponseMessage</span> <span class="nf">onReceive</span><span class="o">(</span><span class="n">RequestMessage</span> <span class="n">request</span><span class="o">,</span>
                                        <span class="n">ExecutionContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// 受信データ処理</span>
        <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">reqData</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParamMap</span><span class="o">();</span>

        <span class="c1">// (省略)</span>

        <span class="c1">// 応答データ返却</span>
        <span class="k">return</span> <span class="n">request</span><span class="o">.</span><span class="na">reply</span><span class="o">()</span>
                <span class="o">.</span><span class="na">setStatusCodeHeader</span><span class="o">(</span><span class="s">&quot;200&quot;</span><span class="o">)</span>
                <span class="o">.</span><span class="na">addRecord</span><span class="o">(</span><span class="k">new</span> <span class="n">HashMap</span><span class="o">()</span> <span class="o">{{</span>     <span class="c1">// メッセージボディの内容</span>
                     <span class="n">put</span><span class="o">(</span><span class="s">&quot;FIcode&quot;</span><span class="o">,</span>     <span class="s">&quot;9999&quot;</span><span class="o">);</span>
                     <span class="n">put</span><span class="o">(</span><span class="s">&quot;FIname&quot;</span><span class="o">,</span>     <span class="s">&quot;ﾅﾌﾞﾗｰｸｷﾞﾝｺｳ&quot;</span><span class="o">);</span>
                     <span class="n">put</span><span class="o">(</span><span class="s">&quot;officeCode&quot;</span><span class="o">,</span> <span class="s">&quot;111&quot;</span><span class="o">);</span>
                     <span class="cm">/*</span>
<span class="cm">                      * (後略)</span>
<span class="cm">                      */</span>
                  <span class="o">}});</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
</dl>
</div>
<div class="section" id="http-system-messaging-message-send">
<span id="id7"></span><h3><a class="toc-backref" href="#id17">7.6.2.3.3. メッセージを送信する(HTTPメッセージ送信)</a><a class="headerlink" href="#http-system-messaging-message-send" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p>外部システムに対してメッセージを送信し、その応答を受信する。
応答メッセージを受信するか、待機タイムアウト時間が経過するまで待機する。</p>
<p>規定時間内に応答を受信できずにタイムアウトした場合は、何らかの補償処理を行う必要がある。</p>
<a class="reference internal image-reference" href="../../../../_images/http_system_messaging-message_send.png"><img alt="../../../../_images/http_system_messaging-message_send.png" src="../../../../_images/http_system_messaging-message_send.png" /></a>
<dl class="docutils">
<dt>実装例</dt>
<dd><dl class="first docutils">
<dt>ポイント</dt>
<dd><ul class="first last simple">
<li>要求電文は、 <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/SyncMessage.html" title="nablarch.fw.messaging.SyncMessage">SyncMessage</a> で作成する。</li>
<li>メッセージ送信には、 <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/MessageSender.html#sendSync-nablarch.fw.messaging.SyncMessage-" title="nablarch.fw.messaging.MessageSender.sendSync(nablarch.fw.messaging.SyncMessage)">MessageSender#sendSync</a> を使用する。
使い方の詳細は、リンク先のJavadocを参照。</li>
</ul>
</dd>
</dl>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="c1">// 要求電文の作成</span>
<span class="n">SyncMessage</span> <span class="n">requestMessage</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SyncMessage</span><span class="o">(</span><span class="s">&quot;RM11AC0202&quot;</span><span class="o">)</span>        <span class="c1">// メッセージIDを設定</span>
                               <span class="o">.</span><span class="na">addDataRecord</span><span class="o">(</span><span class="k">new</span> <span class="n">HashMap</span><span class="o">()</span> <span class="o">{{</span>    <span class="c1">// メッセージボディの内容</span>
                                    <span class="n">put</span><span class="o">(</span><span class="s">&quot;FIcode&quot;</span><span class="o">,</span>     <span class="s">&quot;9999&quot;</span><span class="o">);</span>
                                    <span class="n">put</span><span class="o">(</span><span class="s">&quot;FIname&quot;</span><span class="o">,</span>     <span class="s">&quot;ﾅﾌﾞﾗｰｸｷﾞﾝｺｳ&quot;</span><span class="o">);</span>
                                    <span class="n">put</span><span class="o">(</span><span class="s">&quot;officeCode&quot;</span><span class="o">,</span> <span class="s">&quot;111&quot;</span><span class="o">);</span>
                                    <span class="cm">/*</span>
<span class="cm">                                     * (後略)</span>
<span class="cm">                                     */</span>
                                <span class="o">}})</span>
<span class="c1">// 要求電文の送信</span>
<span class="n">SyncMessage</span> <span class="n">responseMessage</span> <span class="o">=</span> <span class="n">MessageSender</span><span class="o">.</span><span class="na">sendSync</span><span class="o">(</span><span class="n">requestMessage</span><span class="o">);</span>
</pre></div>
</div>
<p>また、HTTPヘッダーとして独自の項目を送信したい場合は、下記のように作成したメッセージのヘッダレコードに設定する。</p>
<div class="last highlight-java"><div class="highlight"><pre><span></span><span class="c1">// メッセージヘッダの内容</span>
<span class="n">requestMessage</span><span class="o">.</span><span class="na">getHeaderRecord</span><span class="o">().</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;Accept-Charset&quot;</span><span class="o">,</span> <span class="s">&quot;UTF-8&quot;</span><span class="o">);</span>
</pre></div>
</div>
</dd>
</dl>
</div>
</div>
<div class="section" id="id8">
<h2><a class="toc-backref" href="#id18">7.6.2.4. 拡張例</a><a class="headerlink" href="#id8" title="このヘッドラインへのパーマリンク">¶</a></h2>
<div class="section" id="http-system-messaging-change-fw-header">
<span id="id9"></span><h3><a class="toc-backref" href="#id19">7.6.2.4.1. フレームワーク制御ヘッダの読み書きを変更する</a><a class="headerlink" href="#http-system-messaging-change-fw-header" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p>外部システムで既に電文フォーマットが規定されている場合など、
フレームワーク制御ヘッダの読み書きを変更したい場合がある。
この場合は、プロジェクトで実装を追加することで対応する。
以下に、送受信の種類ごとに対応方法を示す。</p>
<dl class="docutils">
<dt>HTTPメッセージ送信の場合</dt>
<dd>フレームワーク制御ヘッダの読み書きは、メッセージボディのフォーマット定義により行う。
そのため、変更内容に合わせてメッセージボディのフォーマット定義を変更すればよい。</dd>
<dt>HTTPメッセージ受信の場合</dt>
<dd><p class="first">フレームワーク制御ヘッダの読み書きは、
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/FwHeaderDefinition.html" title="nablarch.fw.messaging.FwHeaderDefinition">FwHeaderDefinition</a> インタフェースを実装したクラスが行う。
デフォルトでは、 <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/StandardFwHeaderDefinition.html" title="nablarch.fw.messaging.StandardFwHeaderDefinition">StandardFwHeaderDefinition</a> が使用される。</p>
<p class="last">そのため、 <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/StandardFwHeaderDefinition.html" title="nablarch.fw.messaging.StandardFwHeaderDefinition">StandardFwHeaderDefinition</a> を参考に、
プロジェクトで <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/FwHeaderDefinition.html" title="nablarch.fw.messaging.FwHeaderDefinition">FwHeaderDefinition</a> インタフェースを実装したクラスを作成し、
<a class="reference internal" href="../../handlers/http_messaging/http_messaging_request_parsing_handler.html#http-messaging-request-parsing-handler"><span>HTTPメッセージングリクエスト変換ハンドラ</span></a> と <a class="reference internal" href="../../handlers/http_messaging/http_messaging_response_building_handler.html#http-messaging-response-building-handler"><span>HTTPメッセージングレスポンス変換ハンドラ</span></a> に設定すればよい。</p>
</dd>
</dl>
<div class="admonition tip">
<p class="first admonition-title">補足</p>
<p class="last">フレームワーク制御ヘッダを使用するか否かは任意に選択できる。
このため、特別要件がない限りフレームワーク制御ヘッダを使用する必要はない。</p>
</div>
</div>
<div class="section" id="httphttp">
<span id="http-system-messaging-change-http-client-process"></span><h3><a class="toc-backref" href="#id20">7.6.2.4.2. HTTPメッセージ送信のHTTPクライアント処理を変更する</a><a class="headerlink" href="#httphttp" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p>HTTPメッセージ送信では、 <a class="reference internal" href="#http-system-messaging-settings"><span>HTTPメッセージングを使うための設定を行う</span></a> で説明した通り、
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/realtime/http/client/HttpMessagingClient.html" title="nablarch.fw.messaging.realtime.http.client.HttpMessagingClient">HttpMessagingClient</a> を使用している。</p>
<p><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/realtime/http/client/HttpMessagingClient.html" title="nablarch.fw.messaging.realtime.http.client.HttpMessagingClient">HttpMessagingClient</a>
では、HTTPクライアントとして様々な処理を行っている。
例えば、送信するメッセージのHTTPヘッダに、 <code class="docutils literal"><span class="pre">Accept:</span> <span class="pre">text/json,text/xml</span></code> が固定で設定される。</p>
<p>もし、<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/realtime/http/client/HttpMessagingClient.html" title="nablarch.fw.messaging.realtime.http.client.HttpMessagingClient">HttpMessagingClient</a>
のデフォルト動作がプロジェクトの要件に合わない場合は、
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/realtime/http/client/HttpMessagingClient.html" title="nablarch.fw.messaging.realtime.http.client.HttpMessagingClient">HttpMessagingClient</a>
を継承したクラスを作成し、 <a class="reference internal" href="#http-system-messaging-settings"><span>HTTPメッセージングを使うための設定を行う</span></a> に示した方法でコンポーネント定義に追加することでカスタマイズを行うこと。</p>
</div>
</div>
<div class="section" id="http-system-messaging-data-model">
<span id="id10"></span><h2><a class="toc-backref" href="#id21">7.6.2.5. 送受信電文のデータモデル</a><a class="headerlink" href="#http-system-messaging-data-model" title="このヘッドラインへのパーマリンク">¶</a></h2>
<p>HTTPメッセージングでは、送受信電文の内容を以下のデータモデルで表現する。</p>
<a class="reference internal image-reference" href="../../../../_images/http_system_messaging-data_model.png"><img alt="../../../../_images/http_system_messaging-data_model.png" src="../../../../_images/http_system_messaging-data_model.png" /></a>
<dl class="docutils" id="http-system-messaging-protocol-header">
<dt>プロトコルヘッダ</dt>
<dd>主にウェブコンテナによるメッセージ送受信処理において使用される情報を格納したヘッダ領域である。
プロトコルヘッダはMapインターフェースでアクセスすることが可能となっている。</dd>
</dl>
<dl class="docutils" id="http-system-messaging-common-protocol-header">
<dt>共通プロトコルヘッダ</dt>
<dd><p class="first">プロトコルヘッダのうち、フレームワークが使用する以下のヘッダについては、特定のキー名でアクセスすることができる。
キー名をカッコで示す。</p>
<dl class="last docutils">
<dt>メッセージID(X-Message-Id)</dt>
<dd><p class="first">電文ごとに一意採番される文字列</p>
<table class="last docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">送信時:</th><td class="field-body">送信処理の際に採番した値</td>
</tr>
<tr class="field-even field"><th class="field-name">受信時:</th><td class="field-body">送信側が発番した値</td>
</tr>
</tbody>
</table>
</dd>
<dt>関連メッセージID(X-Correlation-Id)</dt>
<dd><p class="first">電文が関連する電文のメッセージID</p>
<table class="last docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">応答電文:</th><td class="field-body">要求電文のメッセージID</td>
</tr>
<tr class="field-even field"><th class="field-name">再送要求:</th><td class="field-body">応答再送を要求する要求電文のメッセージID</td>
</tr>
</tbody>
</table>
</dd>
</dl>
</dd>
</dl>
<dl class="docutils" id="http-system-messaging-message-body">
<dt>メッセージボディ</dt>
<dd><p class="first">HTTPリクエストのデータ領域をメッセージボディと呼ぶ。
フレームワーク機能は、原則としてプロトコルヘッダ領域のみを使用する。
それ以外のデータ領域については、未解析の単なるバイナリデータとして扱うものとする。</p>
<p class="last">メッセージボディの解析は、 <a class="reference internal" href="../data_io/data_format.html#data-format"><span>汎用データフォーマット</span></a> によって行う。
これにより、電文の内容をフィールド名をキーとするMap形式で読み書きすることが可能である。</p>
</dd>
</dl>
<dl class="docutils" id="http-system-messaging-fw-header">
<dt>フレームワーク制御ヘッダ</dt>
<dd><p class="first">本フレームワークが提供する機能の中には、電文中に特定の制御項目が定義されていることを前提として設計されているものが多く存在する。
そのような制御項目のことを <code class="docutils literal"><span class="pre">フレームワーク制御ヘッダ</span></code> とよぶ。</p>
<p>フレームワーク制御ヘッダとそれを使用するハンドラの対応は以下のとおり。</p>
<dl class="docutils">
<dt>リクエストID</dt>
<dd><p class="first">この電文を受信したアプリケーションが実行すべき業務処理を識別するためのID。</p>
<p>このヘッダを使用する主要なハンドラ：</p>
<div class="last line-block">
<div class="line"><a class="reference internal" href="../../handlers/common/request_path_java_package_mapping.html#request-path-java-package-mapping"><span>リクエストディスパッチハンドラ</span></a></div>
<div class="line"><a class="reference internal" href="../../handlers/mom_messaging/message_resend_handler.html#message-resend-handler"><span>再送電文制御ハンドラ</span></a></div>
<div class="line"><a class="reference internal" href="../../handlers/common/permission_check_handler.html#permission-check-handler"><span>認可チェックハンドラ</span></a></div>
<div class="line"><a class="reference internal" href="../../handlers/common/ServiceAvailabilityCheckHandler.html#serviceavailabilitycheckhandler"><span>サービス提供可否チェックハンドラ</span></a></div>
</div>
</dd>
<dt>ユーザID</dt>
<dd><p class="first">この電文の実行権限を表す文字列</p>
<p>このヘッダを使用する主要なハンドラ：</p>
<div class="last line-block">
<div class="line"><a class="reference internal" href="../../handlers/common/permission_check_handler.html#permission-check-handler"><span>認可チェックハンドラ</span></a></div>
</div>
</dd>
<dt>再送要求フラグ</dt>
<dd><p class="first">再送要求電文送信時に設定されるフラグ</p>
<p>このヘッダを使用する主要なハンドラ：</p>
<div class="last line-block">
<div class="line"><a class="reference internal" href="../../handlers/mom_messaging/message_resend_handler.html#message-resend-handler"><span>再送電文制御ハンドラ</span></a></div>
</div>
</dd>
<dt>ステータスコード</dt>
<dd><p class="first">要求電文に対する処理結果を表すコード値</p>
<p>このヘッダを使用する主要なハンドラ：</p>
<div class="last line-block">
<div class="line"><a class="reference internal" href="../../handlers/mom_messaging/message_reply_handler.html#message-reply-handler"><span>電文応答制御ハンドラ</span></a></div>
</div>
</dd>
</dl>
<p>フレームワーク制御ヘッダは、デフォルトの設定では、
メッセージボディの最初のデータレコード中に、それぞれ以下のフィールド名で定義されている必要がある。</p>
<blockquote>
<div><table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">リクエストID:</th><td class="field-body">requestId</td>
</tr>
<tr class="field-even field"><th class="field-name">ユーザID:</th><td class="field-body">userId</td>
</tr>
<tr class="field-odd field"><th class="field-name">再送要求フラグ:</th><td class="field-body">resendFlag</td>
</tr>
<tr class="field-even field"><th class="field-name">ステータスコード:</th><td class="field-body">statusCode</td>
</tr>
</tbody>
</table>
</div></blockquote>
<p>以下は、標準的なフレームワーク制御ヘッダの定義例である。</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="c1">#===================================================================</span>
<span class="c1"># フレームワーク制御ヘッダ部 (50byte)</span>
<span class="c1">#===================================================================</span>
<span class="o">[</span>NablarchHeader<span class="o">]</span>
<span class="m">1</span>   requestId   X<span class="o">(</span><span class="m">10</span><span class="o">)</span>       <span class="c1"># リクエストID</span>
<span class="m">11</span>  userId      X<span class="o">(</span><span class="m">10</span><span class="o">)</span>       <span class="c1"># ユーザID</span>
<span class="m">21</span>  resendFlag  X<span class="o">(</span><span class="m">1</span><span class="o">)</span>  <span class="s2">&quot;0&quot;</span>   <span class="c1"># 再送要求フラグ (0: 初回送信 1: 再送要求)</span>
<span class="m">22</span>  statusCode  X<span class="o">(</span><span class="m">4</span><span class="o">)</span>  <span class="s2">&quot;200&quot;</span> <span class="c1"># ステータスコード</span>
<span class="m">26</span> ?filler      X<span class="o">(</span><span class="m">25</span><span class="o">)</span>       <span class="c1"># 予備領域</span>
<span class="c1">#====================================================================</span>
</pre></div>
</div>
<p>フォーマット定義にフレームワーク制御ヘッダ以外の項目を含めた場合、
フレームワーク制御ヘッダの任意ヘッダ項目としてアクセスすることができ、
プロジェクト毎にフレームワーク制御ヘッダを簡易的に拡張する目的で使用することができる。</p>
<p class="last">また、将来的な任意項目の追加およびフレームワークの機能追加に伴うヘッダ追加に対応するため、
予備領域を設けておくことを強く推奨する。</p>
</dd>
</dl>
</div>
</div>


           </div>
           <div class="articleComments">
            
           </div>
          </div>
          <footer>

    <hr/>

    <div role="contentinfo">
        <p>
            &copy; Copyright 2010-2021, TIS Inc.
        </p>
    </div>
    Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org">Read the Docs</a>.

</footer>

        </div>
      </div>

    </section>

  </div>
  


  

    <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'../../../../',
            VERSION:'5u19',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true,
            SOURCELINK_SUFFIX: ''
        };
    </script>
      <script type="text/javascript" src="../../../../_static/jquery.js"></script>
      <script type="text/javascript" src="../../../../_static/underscore.js"></script>
      <script type="text/javascript" src="../../../../_static/doctools.js"></script>
      <script type="text/javascript" src="../../../../_static/custom.js"></script>
      <script type="text/javascript" src="../../../../_static/translations.js"></script>

  

  
  
    <script type="text/javascript" src="../../../../_static/js/theme.js"></script>
  

  
  
  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>
   

</body>
</html>