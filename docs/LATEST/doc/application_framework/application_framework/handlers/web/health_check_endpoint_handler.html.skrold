


<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->
<head>
  <meta charset="utf-8">
  <meta http-equiv='content-language' content='ja'>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>6.2.19. ヘルスチェックエンドポイントハンドラ &mdash; ∇Nablarch  5u19 ドキュメント</title>
  

  
  
  
  

  

  
  
    

  

  
  
    <link rel="stylesheet" href="../../../../_static/custom.css" type="text/css" />
  

  

  
  <link rel="canonical" href="https://nablarch.github.io/docs/LATEST/doc/application_framework/application_framework/handlers/web/health_check_endpoint_handler.html" />
  
    <link rel="top" title="∇Nablarch  5u19 ドキュメント" href="../../../../index.html"/>
        <link rel="up" title="6.2. ウェブアプリケーション専用ハンドラ" href="index.html"/>
        <link rel="next" title="6.3. ウェブアプリケーション専用インターセプター" href="../web_interceptor/index.html"/>
        <link rel="prev" title="6.2.18. CSRFトークン検証ハンドラ" href="csrf_token_verification_handler.html"/>
 

  
  <script src="../../../../_static/js/modernizr.min.js"></script>

</head>

<body class="wy-body-for-nav" role="document">

   
  <div class="wy-grid-for-nav">

    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search">
          
  
  <a href="../../../../index.html" id="sidebar-title" class="icon"> ∇Nablarch 
  

  
    <div id="sidebar-version">Version: 5u19</div>
  </a>

  <div role="search">
    <form id="google-search-form" class="wy-form" method="get" action="https://www.google.co.jp/search">
      <input type="text" name="text" placeholder="Search docs on google" id="text"/>
      <input type="hidden" name="q" id="q"/>
    </form>
  </div>
    
    

        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
  
  
    <ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../../../about_nablarch/index.html">Nablarchについて</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../about_nablarch/concept.html">Nablarchのコンセプト</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../about_nablarch/concept.html#robustness">Robustness</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../about_nablarch/concept.html#testability">Testability</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../about_nablarch/concept.html#ready-to-use">Ready-to-Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../about_nablarch/mvn_module.html">Nablarch のモジュール一覧</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../about_nablarch/license.html">Nablarchのライセンスについて</a></li>
</ul>
</li>
<li class="toctree-l1 current"><a class="reference internal" href="../../../index.html">Nablarchアプリケーションフレームワーク</a><ul class="current">
<li class="toctree-l2 current"><a class="reference internal" href="../../index.html">アプリケーションフレームワーク</a><ul class="current">
<li class="toctree-l3"><a class="reference internal" href="../../nablarch/index.html">1. Nablarchアプリケーションフレームワークとは</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../web/index.html">2. ウェブアプリケーション編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../web_service/index.html">3. ウェブサービス編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../batch/index.html">4. バッチアプリケーション編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../messaging/index.html">5. メッセージング編</a></li>
<li class="toctree-l3 current"><a class="reference internal" href="../index.html">6. Nablarchの提供する標準ハンドラ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../libraries/index.html">7. Nablarchが提供するライブラリ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../blank_project/index.html">8. ブランクプロジェクト</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../setting_guide/index.html">9. Nablarchアプリケーションフレームワーク設定ガイド</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../configuration/index.html">10. デフォルト設定一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../cloud_native/index.html">11. Nablarchクラウドネイティブ対応</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../adaptors/index.html">アダプタ</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/log_adaptor.html">logアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/router_adaptor.html">ルーティングアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/webspheremq_adaptor.html">IBM WebSphere MQアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/jaxrs_adaptor.html">JAX-RSアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/doma_adaptor.html">Domaアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/jsr310_adaptor.html">JSR310(Date and Time API)アダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/mail_sender_freemarker_adaptor.html">E-mail FreeMarkerアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/mail_sender_thymeleaf_adaptor.html">E-mail Thymeleafアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/mail_sender_velocity_adaptor.html">E-mail Velocityアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/web_thymeleaf_adaptor.html">ウェブアプリケーション Thymeleafアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/lettuce_adaptor.html">Lettuceアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/slf4j_adaptor.html">SLF4Jアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/micrometer_adaptor.html">Micrometerアダプタ</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../example/index.html">Example</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../example/index.html#id1">環境構築手順について</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../example/index.html#id2">アプリケーションの実行手順について</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../extension_components/index.html">Nablarch拡張コンポーネント</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/report/index.html">1. 帳票ライブラリ</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/report/index.html#id2">1.1. 概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/report/index.html#id3">1.2. 要求</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/report/index.html#id7">1.3. 構造</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/report/index.html#report-template">1.4. 実装例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/workflow/doc/index.html">2. ワークフローライブラリ</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/workflow/doc/index.html#id3">2.1. 機能概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/workflow/doc/index.html#id6">2.2. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/workflow/doc/index.html#id7">2.3. 使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/workflow/doc/index.html#xor">2.4. XORゲートウェイの進行先ノードの判定方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/workflow/doc/index.html#workflow-multi-completion">2.5. マルチインスタンスの完了条件の判定方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/workflow/tool/index.html">3. ワークフロー定義データ生成ツール</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/workflow/tool/index.html#id3">3.1. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/workflow/tool/index.html#id4">3.2. 使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/etl/index.html">4. ETL</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/etl/index.html#id3">4.1. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/etl/index.html#etl-phase">4.2. ETLの各フェーズの仕様</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/etl/index.html#id5">4.3. ETLを使用するバッチの設計ポイント</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/etl/index.html#id9">4.4. 使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/etl/index.html#id18">4.5. 拡張例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/etl/etl_maven_plugin.html">5. ETL Mavenプラグイン</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/etl/etl_maven_plugin.html#id2">5.1. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../extension_components/etl/etl_maven_plugin.html#id3">5.2. 使用方法</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../development_tools/index.html">Nablarch開発ツール</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html">1. 効率的なJava静的チェック</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html#code-analysis">1.1. 構文チェックを行う</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html#code-format">1.2. フォーマットを統一する</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html#api">1.3. 許可していないAPIが使用されていないかチェックする</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/ui_dev/index.html">2. フロントエンド上級者向けのUI開発基盤</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/ui_dev/doc/index.html">2.1. Nablarch UI開発基盤 解説書</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/ui_dev/guide/index.html">2.2. JSP/HTML作成ガイド</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/ui_dev/guide/widget_usage/widget_list.html">2.3. UI部品の実装サンプルで提供しているウィジェットの一覧</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/testing_framework/index.html">3. テスティングフレームワーク</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/testing_framework/guide/development_guide/05_UnitTestGuide/index.html">3.1. 単体テスト実施方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/testing_framework/guide/development_guide/06_TestFWGuide/index.html">3.2. 自動テストフレームワークの使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/testing_framework/guide/development_guide/08_TestTools/index.html">3.3. プログラミング工程で使用するツール</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/toolbox/index.html">4. アプリケーション開発時に使える便利なツール</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/toolbox/JspStaticAnalysis/index.html">4.1. JSP静的解析ツール</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/toolbox/SqlExecutor/SqlExecutor.html">4.2. Nablarch SQL Executor</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/toolbox/JspVerifier/JspVerifier.html">4.3. 業務画面JSP検証ツール</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../examples/index.html">Nablarch実装例集</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/01/index.html">データベースを用いたパスワード認証機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/0101_PBKDF2PasswordEncryptor.html">PBKDF2を用いたパスワード暗号化機能サンプル</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#id4">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#id6">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#id12">使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/02/index.html">バリデーション機能の拡張</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#extendedvalidation-mailaddressvalidator">メールアドレスバリデーション</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#extendedvalidation-japanesetelnumbervalidator">日本電話番号バリデーション</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#id12">コード値精査</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/03/index.html">検索結果の一覧表示</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#id4">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#id5">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#id8">使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchinfo">ListSearchInfoクラス</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchresult">listSearchResultタグ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchresult-sort">検索結果の並び替え</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchresult-nopaging">1画面にすべての検索結果を一覧表示する場合の実装方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchresult-defaultcondition">デフォルトの検索条件で検索した結果を初期表示する場合の実装方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchresult-setting">検索結果の一覧表示機能のデフォルト値設定</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchresult-customize">業務アプリケーションへのサンプル実装(タグファイル)の取り込み方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchresult-tagreference">タグリファレンス</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/04/index.html">フォーマッタ機能の拡張</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/04/0401_ExtendedDataFormatter.html">データフォーマッタの拡張</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/04/0402_ExtendedFieldType.html">データフォーマッタ機能におけるフィールドタイプの拡張</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/05/index.html">データベースを用いたファイル管理機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#id2">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#id6">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#id7">機能</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#id10">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#id15">使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/06/index.html">CAPTCHA機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/06_Captcha_guide.html">CAPTCHA機能の組み込み手順</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#id4">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#id6">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#id21">使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/07/index.html">UserAgent情報取得機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#id1">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#id3">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#id8">設定の記述</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#id11">使用例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/08/index.html">HTMLメール送信機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#id1">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#id3">要求</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#id6">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#id14">実装例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/09/index.html">bouncycastleを使用した電子署名つきメールの送信サンプルの使用方法</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#id3">環境準備</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#id4">電子署名付きメール送信機能の構造</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#id5">設定ファイルの準備</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#id7">実行方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/10/index.html">ログ集計サンプルの使用方法</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/10/index.html#id3">提供サンプル一覧</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/11/index.html">メッセージング基盤テストシミュレータサンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#id4">用途</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#id8">特徴</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#id12">要求</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#id15">使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#id18">拡張例</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../nablarch_api/index.html">Nablarch API</a></li>
</ul>

  

        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" role="navigation" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../../../../index.html">∇Nablarch </a>
        
      </nav>


      
      <div class="wy-nav-content">
        <div class="rst-content">
          

 



<div role="navigation" aria-label="breadcrumbs navigation">
  <ul class="wy-breadcrumbs">
    <li><a href="../../../../index.html">Docs</a> &raquo;</li>
      
          <li><a href="../../../index.html">Nablarchアプリケーションフレームワーク</a> &raquo;</li>
      
          <li><a href="../../index.html">アプリケーションフレームワーク</a> &raquo;</li>
      
          <li><a href="../index.html">6. Nablarchの提供する標準ハンドラ</a> &raquo;</li>
      
          <li><a href="index.html">6.2. ウェブアプリケーション専用ハンドラ</a> &raquo;</li>
      
    <li>6.2.19. ヘルスチェックエンドポイントハンドラ</li>
    <li class="wy-breadcrumbs-aside">
      <a href="https://github.com/nablarch" class="fa fa-github">GitHub</a>
    </li>
    <li class="wy-breadcrumbs-aside">
        <a href="https://nablarch.github.io/docs/LATEST/doc/en/index.html" class="en">English</a>
    </li>
  </ul>
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  <div class="section" id="health-check-endpoint-handler">
<span id="id1"></span><h1>6.2.19. ヘルスチェックエンドポイントハンドラ<a class="headerlink" href="#health-check-endpoint-handler" title="このヘッドラインへのパーマリンク">¶</a></h1>
<div class="contents local topic" id="id2">
<p class="topic-title first">目次</p>
<ul class="simple">
<li><a class="reference internal" href="#id3" id="id9">ハンドラクラス名</a></li>
<li><a class="reference internal" href="#id4" id="id10">モジュール一覧</a></li>
<li><a class="reference internal" href="#id5" id="id11">制約</a></li>
<li><a class="reference internal" href="#health-check-endpoint-handler-health-check-endpoint" id="id12">ヘルスチェックのエンドポイントを作る</a></li>
<li><a class="reference internal" href="#health-check-endpoint-handler-add-health-checker" id="id13">ヘルスチェックを追加する</a></li>
<li><a class="reference internal" href="#health-check-endpoint-handler-change-response" id="id14">ヘルスチェック結果のレスポンスを変更する</a></li>
</ul>
</div>
<p>本ハンドラは、アプリケーションのヘルスチェックを行うための機能を提供する。
本ハンドラを使用して、 <a class="reference internal" href="../../web/index.html#web-application"><span>Webアプリケーション</span></a> と <a class="reference internal" href="../../web_service/rest/index.html#restful-web-service"><span>RESTfulウェブサービス</span></a>
のヘルスチェックを行うエンドポイントを実現できる。</p>
<p>ヘルスチェックのデフォルト実装として <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/handler/health/DbHealthChecker.html" title="nablarch.fw.web.handler.health.DbHealthChecker">DB</a> と
<a class="reference internal" href="../../../adaptors/lettuce_adaptor.html#lettuce-adaptor"><span>Redis</span></a> のヘルスチェックを提供している。</p>
<p>本ハンドラでは、以下の処理を行う。</p>
<ul class="simple">
<li>ヘルスチェックを行い、チェック結果をレスポンスとして返す。</li>
</ul>
<p>処理の流れは以下のとおり。</p>
<a class="reference internal image-reference" href="../../../../_images/flow28.png"><img alt="../../../../_images/flow28.png" src="../../../../_images/flow28.png" /></a>
<p>本ハンドラはヘルスチェックを行うエンドポイントとなるため、後続ハンドラの呼び出しは行わない。</p>
<div class="section" id="id3">
<h2><a class="toc-backref" href="#id9">6.2.19.1. ハンドラクラス名</a><a class="headerlink" href="#id3" title="このヘッドラインへのパーマリンク">¶</a></h2>
<ul class="simple">
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/handler/HealthCheckEndpointHandler.html" title="nablarch.fw.web.handler.HealthCheckEndpointHandler">nablarch.fw.web.handler.HealthCheckEndpointHandler</a></li>
</ul>
</div>
<div class="section" id="id4">
<h2><a class="toc-backref" href="#id10">6.2.19.2. モジュール一覧</a><a class="headerlink" href="#id4" title="このヘッドラインへのパーマリンク">¶</a></h2>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>com.nablarch.framework<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>nablarch-fw-web<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>

<span class="c">&lt;!-- DBのヘルスチェックを行う場合 --&gt;</span>
<span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>com.nablarch.framework<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>nablarch-core-jdbc<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</pre></div>
</div>
</div>
<div class="section" id="id5">
<h2><a class="toc-backref" href="#id11">6.2.19.3. 制約</a><a class="headerlink" href="#id5" title="このヘッドラインへのパーマリンク">¶</a></h2>
<dl class="docutils">
<dt><a class="reference internal" href="http_response_handler.html#http-response-handler"><span>HTTPレスポンスハンドラ</span></a> または <a class="reference internal" href="../rest/jaxrs_response_handler.html#jaxrs-response-handler"><span>JAX-RSレスポンスハンドラ</span></a> より後ろに配置すること</dt>
<dd>本ハンドラで生成した <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/HttpResponse.html" title="nablarch.fw.web.HttpResponse">HttpResponse</a> を
<a class="reference internal" href="http_response_handler.html#http-response-handler"><span>HTTPレスポンスハンドラ</span></a> または <a class="reference internal" href="../rest/jaxrs_response_handler.html#jaxrs-response-handler"><span>JAX-RSレスポンスハンドラ</span></a> が処理するため、
本ハンドラは <a class="reference internal" href="http_response_handler.html#http-response-handler"><span>HTTPレスポンスハンドラ</span></a> または <a class="reference internal" href="../rest/jaxrs_response_handler.html#jaxrs-response-handler"><span>JAX-RSレスポンスハンドラ</span></a> より後ろに配置する必要がある。</dd>
</dl>
</div>
<div class="section" id="health-check-endpoint-handler-health-check-endpoint">
<span id="id6"></span><h2><a class="toc-backref" href="#id12">6.2.19.4. ヘルスチェックのエンドポイントを作る</a><a class="headerlink" href="#health-check-endpoint-handler-health-check-endpoint" title="このヘッドラインへのパーマリンク">¶</a></h2>
<p>本ハンドラをハンドラ構成に追加するとヘルスチェックを行うエンドポイントとなる。
本ハンドラの設定例を以下に示す。</p>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="c">&lt;!-- ハンドラ構成 --&gt;</span>
<span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;webFrontController&quot;</span> <span class="na">class=</span><span class="s">&quot;nablarch.fw.web.servlet.WebFrontController&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;handlerQueue&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;list&gt;</span>
      <span class="c">&lt;!-- 他のハンドラは省略 --&gt;</span>

      <span class="c">&lt;!-- HTTPレスポンスハンドラ --&gt;</span>
      <span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.fw.web.handler.HttpResponseHandler&quot;</span><span class="nt">/&gt;</span>

      <span class="c">&lt;!--</span>
<span class="c">           ヘルスチェックエンドポイントハンドラ</span>
<span class="c">           RequestHandlerEntryを使用して特定のパスの場合のみ実行するように設定する。</span>
<span class="c">      --&gt;</span>
      <span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.fw.RequestHandlerEntry&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;requestPattern&quot;</span> <span class="na">value=</span><span class="s">&quot;/action/healthcheck&quot;</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;handler&quot;</span><span class="nt">&gt;</span>
          <span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.fw.web.handler.HealthCheckEndpointHandler&quot;</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;/property&gt;</span>
      <span class="nt">&lt;/component&gt;</span>

    <span class="nt">&lt;/list&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
<p>デフォルトではDB等のヘルスチェックを行わず、ステータスコード200で以下のJSONレスポンスを返す。</p>
<div class="highlight-json"><div class="highlight"><pre><span></span><span class="p">{</span><span class="nt">&quot;status&quot;</span><span class="p">:</span><span class="s2">&quot;UP&quot;</span><span class="p">}</span>
</pre></div>
</div>
<p>DB等のリソースのヘルスチェックは、 <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/handler/health/HealthChecker.html" title="nablarch.fw.web.handler.health.HealthChecker">HealthChecker</a>
という抽象クラスが行う。 <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/handler/health/HealthChecker.html" title="nablarch.fw.web.handler.health.HealthChecker">HealthChecker</a> を継承したクラスを
本ハンドラのhealthCheckersプロパティに指定すると、本ハンドラの実行時に対象ごとのヘルスチェックとして使用される。</p>
<p>デフォルトで提供しているDBのヘルスチェックの設定例を以下に示す。</p>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="c">&lt;!-- ヘルスチェックエンドポイントハンドラ --&gt;</span>
<span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.fw.web.handler.HealthCheckEndpointHandler&quot;</span><span class="nt">&gt;</span>
  <span class="c">&lt;!-- healthCheckersプロパティはリストで指定 --&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;healthCheckers&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;list&gt;</span>
      <span class="c">&lt;!-- DBのヘルスチェック --&gt;</span>
      <span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.fw.web.handler.health.DbHealthChecker&quot;</span><span class="nt">&gt;</span>
        <span class="c">&lt;!-- データソースを指定 --&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;dataSource&quot;</span> <span class="na">ref=</span><span class="s">&quot;dataSource&quot;</span> <span class="nt">/&gt;</span>
        <span class="c">&lt;!-- ダイアレクトを指定 --&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;dialect&quot;</span> <span class="na">ref=</span><span class="s">&quot;dialect&quot;</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;/component&gt;</span>
    <span class="nt">&lt;/list&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
<p>上記設定で本ハンドラが実行されると、指定したDBのヘルスチェックが行われJSONのレスポンスを返す。
以下にヘルスチェックの成功時と失敗時のレスポンスを示す。</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span>// 成功時
// ステータスコードは200
<span class="o">{</span>
  <span class="s2">&quot;status&quot;</span>:<span class="s2">&quot;UP&quot;</span>,
  <span class="s2">&quot;targets&quot;</span>:<span class="o">[</span>
    <span class="o">{</span><span class="s2">&quot;name&quot;</span>:<span class="s2">&quot;DB&quot;</span>,<span class="s2">&quot;status&quot;</span>:<span class="s2">&quot;UP&quot;</span><span class="o">}</span>
  <span class="o">]</span>
<span class="o">}</span>

// 失敗時
// ステータスコードは503
<span class="o">{</span>
  <span class="s2">&quot;status&quot;</span>:<span class="s2">&quot;DOWN&quot;</span>,
  <span class="s2">&quot;targets&quot;</span>:<span class="o">[</span>
    <span class="o">{</span><span class="s2">&quot;name&quot;</span>:<span class="s2">&quot;DB&quot;</span>,<span class="s2">&quot;status&quot;</span>:<span class="s2">&quot;DOWN&quot;</span><span class="o">}</span>
  <span class="o">]</span>
<span class="o">}</span>
</pre></div>
</div>
<p>デフォルトではルート直下のstatusにヘルスチェック全体の結果、targetsに対象ごとのヘルスチェック結果を出力する。</p>
</div>
<div class="section" id="health-check-endpoint-handler-add-health-checker">
<span id="id7"></span><h2><a class="toc-backref" href="#id13">6.2.19.5. ヘルスチェックを追加する</a><a class="headerlink" href="#health-check-endpoint-handler-add-health-checker" title="このヘッドラインへのパーマリンク">¶</a></h2>
<p><a class="reference internal" href="#health-check-endpoint-handler-health-check-endpoint"><span>ヘルスチェックのエンドポイントを作る</span></a> で説明したように、
DB等のリソースのヘルスチェックは <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/handler/health/HealthChecker.html" title="nablarch.fw.web.handler.health.HealthChecker">HealthChecker</a>
という抽象クラスが行うので、<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/handler/health/HealthChecker.html" title="nablarch.fw.web.handler.health.HealthChecker">HealthChecker</a> を継承したクラスを作成し、
本ハンドラのhealthCheckersプロパティに指定するとヘルスチェックを追加できる。</p>
<p>実装例と設定例を以下に示す。</p>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">CustomHealthChecker</span> <span class="kd">extends</span> <span class="n">HealthChecker</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="nf">CustomHealthChecker</span><span class="o">()</span> <span class="o">{</span>
        <span class="c1">// 対象を表す名前を指定</span>
        <span class="n">setName</span><span class="o">(</span><span class="s">&quot;Custom&quot;</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="kt">boolean</span> <span class="nf">tryOut</span><span class="o">(</span><span class="n">HttpRequest</span> <span class="n">request</span><span class="o">,</span> <span class="n">ExecutionContext</span> <span class="n">context</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
        <span class="c1">// ヘルスチェックとして試す処理を実装</span>
        <span class="c1">// ヘルスチェックが失敗した場合は、falseを返すか例外を送出</span>
        <span class="c1">// 以下は例外が発生しなければヘルスチェックが成功とする場合の実装イメージ</span>
        <span class="n">CustomClient</span> <span class="n">client</span> <span class="o">=</span> <span class="o">...;</span>
        <span class="n">client</span><span class="o">.</span><span class="na">execute</span><span class="o">();</span>
        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="c">&lt;!-- ヘルスチェックエンドポイントハンドラ --&gt;</span>
<span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.fw.web.handler.HealthCheckEndpointHandler&quot;</span><span class="nt">&gt;</span>
  <span class="c">&lt;!-- healthCheckersプロパティはリストで指定 --&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;healthCheckers&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;list&gt;</span>
      <span class="c">&lt;!-- DBのヘルスチェック --&gt;</span>
      <span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.fw.web.handler.health.DbHealthChecker&quot;</span><span class="nt">&gt;</span>
        <span class="c">&lt;!-- 省略 --&gt;</span>
      <span class="nt">&lt;/component&gt;</span>
      <span class="c">&lt;!-- HealthCheckerを継承して作成したクラスを指定 --&gt;</span>
      <span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;com.example.CustomHealthChecker&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/list&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
</div>
<div class="section" id="health-check-endpoint-handler-change-response">
<span id="id8"></span><h2><a class="toc-backref" href="#id14">6.2.19.6. ヘルスチェック結果のレスポンスを変更する</a><a class="headerlink" href="#health-check-endpoint-handler-change-response" title="このヘッドラインへのパーマリンク">¶</a></h2>
<p>ヘルスチェック結果のレスポンスは <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/handler/health/HealthCheckResponseBuilder.html" title="nablarch.fw.web.handler.health.HealthCheckResponseBuilder">HealthCheckResponseBuilder</a> が作成する。
デフォルトのレスポンスは以下となる。</p>
<dl class="docutils">
<dt>ステータスコード</dt>
<dd><ul class="first last simple">
<li>ヘルスチェックの成功：200</li>
<li>ヘルスチェックの失敗：503</li>
</ul>
</dd>
<dt>レスポンスボディ</dt>
<dd><ul class="first last">
<li><p class="first">Content-Type：application/json</p>
</li>
<li><p class="first">フォーマット</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="o">{</span>
  <span class="s2">&quot;status&quot;</span>:<span class="s2">&quot;ヘルスチェック全体の結果&quot;</span>,
  <span class="s2">&quot;targets&quot;</span>:<span class="o">[</span>
    <span class="o">{</span>
      <span class="s2">&quot;name&quot;</span>:<span class="s2">&quot;対象1&quot;</span>,
      <span class="s2">&quot;status&quot;</span>:<span class="s2">&quot;対象1のヘルスチェック結果&quot;</span>
    <span class="o">}</span>,
    <span class="o">{</span>
      <span class="s2">&quot;name&quot;</span>:<span class="s2">&quot;対象2&quot;</span>,
      <span class="s2">&quot;status&quot;</span>:<span class="s2">&quot;対象2のヘルスチェック結果&quot;</span>
    <span class="o">}</span>,
    :
  <span class="o">]</span>
<span class="o">}</span>
</pre></div>
</div>
<ul class="simple">
<li>実際は改行がなく1行となるが上記は見やすさのために整形している。</li>
<li>ヘルスチェック全体の結果はtargetsのヘルスチェック結果が1つでも失敗の場合に失敗となる。</li>
<li>targetsは指定された <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/handler/health/HealthChecker.html" title="nablarch.fw.web.handler.health.HealthChecker">HealthChecker</a> の数だけ含まれる。</li>
</ul>
</li>
</ul>
</dd>
<dt>ヘルスチェック結果のラベル</dt>
<dd><ul class="first last simple">
<li>ヘルスチェックの成功：UP</li>
<li>ヘルスチェックの失敗：DOWN</li>
</ul>
</dd>
</dl>
<p>ステータスコード、ヘルスチェック結果のラベル、レスポンスボディの出力有無は設定で変更できる。
以下に設定例を示す。</p>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.fw.web.handler.HealthCheckEndpointHandler&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;healthCheckers&quot;</span><span class="nt">&gt;</span>
    <span class="c">&lt;!-- 省略 --&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;healthCheckResponseBuilder&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.fw.web.handler.health.HealthCheckResponseBuilder&quot;</span><span class="nt">&gt;</span>
      <span class="c">&lt;!-- ヘルスチェック成功時のステータスコード --&gt;</span>
      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;healthyStatusCode&quot;</span> <span class="na">value=</span><span class="s">&quot;201&quot;</span> <span class="nt">/&gt;</span>
      <span class="c">&lt;!-- ヘルスチェック成功時のラベル --&gt;</span>
      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;healthyStatus&quot;</span> <span class="na">value=</span><span class="s">&quot;OK&quot;</span> <span class="nt">/&gt;</span>
      <span class="c">&lt;!-- ヘルスチェック失敗時のステータスコード --&gt;</span>
      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;unhealthyStatusCode&quot;</span> <span class="na">value=</span><span class="s">&quot;500&quot;</span> <span class="nt">/&gt;</span>
      <span class="c">&lt;!-- ヘルスチェック失敗時のラベル --&gt;</span>
      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;unhealthyStatus&quot;</span> <span class="na">value=</span><span class="s">&quot;NG&quot;</span> <span class="nt">/&gt;</span>
      <span class="c">&lt;!-- リクエストボディを出力するか否か。出力しない場合にfalseを指定 --&gt;</span>
      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;writeBody&quot;</span> <span class="na">value=</span><span class="s">&quot;false&quot;</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/component&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
<p>レスポンスボディの内容を変更したい場合は、
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/handler/health/HealthCheckResponseBuilder.html" title="nablarch.fw.web.handler.health.HealthCheckResponseBuilder">HealthCheckResponseBuilder</a> を継承したクラスを作成する。</p>
<p>実装例と設定例を以下に示す。</p>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">CustomHealthCheckResponseBuilder</span> <span class="kd">extends</span> <span class="n">HealthCheckResponseBuilder</span> <span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="n">String</span> <span class="nf">getContentType</span><span class="o">()</span> <span class="o">{</span>
        <span class="c1">// Content-Typeを返す。</span>
        <span class="k">return</span> <span class="s">&quot;text/plain&quot;</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="n">String</span> <span class="nf">buildResponseBody</span><span class="o">(</span>
            <span class="n">HttpRequest</span> <span class="n">request</span><span class="o">,</span> <span class="n">ExecutionContext</span> <span class="n">context</span><span class="o">,</span> <span class="n">HealthCheckResult</span> <span class="n">result</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// リクエストボディを返す。</span>
        <span class="c1">// ヘルスチェック結果が入っているHealthCheckResultを使ってレスポンスボディを作成する。</span>
        <span class="n">StringBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
        <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;All=&quot;</span> <span class="o">+</span> <span class="n">getStatus</span><span class="o">(</span><span class="n">result</span><span class="o">.</span><span class="na">isHealthy</span><span class="o">()));</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">HealthCheckResult</span><span class="o">.</span><span class="na">Target</span> <span class="n">target</span> <span class="o">:</span> <span class="n">result</span><span class="o">.</span><span class="na">getTargets</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;, &quot;</span> <span class="o">+</span> <span class="n">target</span><span class="o">.</span><span class="na">getName</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;=&quot;</span> <span class="o">+</span> <span class="n">getStatus</span><span class="o">(</span><span class="n">target</span><span class="o">.</span><span class="na">isHealthy</span><span class="o">()));</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">builder</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.fw.RequestHandlerEntry&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;requestPattern&quot;</span> <span class="na">value=</span><span class="s">&quot;/action/healthcheck&quot;</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;handler&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.fw.web.handler.HealthCheckEndpointHandler&quot;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;healthCheckers&quot;</span><span class="nt">&gt;</span>
        <span class="c">&lt;!-- 省略 --&gt;</span>
      <span class="nt">&lt;/property&gt;</span>
      <span class="c">&lt;!-- HealthCheckResponseBuilderを継承して作成したクラスを指定 --&gt;</span>
      <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;healthCheckResponseBuilder&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;com.nablarch.example.app.web.handler.health.CustomHealthCheckResponseBuilder&quot;</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;/property&gt;</span>
    <span class="nt">&lt;/component&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
</div>
</div>


           </div>
           <div class="articleComments">
            
           </div>
          </div>
          <footer>

    <hr/>

    <div role="contentinfo">
        <p>
            &copy; Copyright 2010-2021, TIS Inc.
        </p>
    </div>
    Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org">Read the Docs</a>.

</footer>

        </div>
      </div>

    </section>

  </div>
  


  

    <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'../../../../',
            VERSION:'5u19',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true,
            SOURCELINK_SUFFIX: ''
        };
    </script>
      <script type="text/javascript" src="../../../../_static/jquery.js"></script>
      <script type="text/javascript" src="../../../../_static/underscore.js"></script>
      <script type="text/javascript" src="../../../../_static/doctools.js"></script>
      <script type="text/javascript" src="../../../../_static/custom.js"></script>
      <script type="text/javascript" src="../../../../_static/translations.js"></script>

  

  
  
    <script type="text/javascript" src="../../../../_static/js/theme.js"></script>
  

  
  
  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>
   

</body>
</html>