===============================================================
取引単体テストの実施方法（同期応答メッセージ受信処理)
===============================================================

同期応答メッセージ受信処理では、リクエストと取引とでスコープが同じであることがほとんである。
このように、１リクエスト＝１取引である場合は、取引単体テストを実施する必要はない。

ただし、複数のメッセージにより取引が成立する場合は、\
バッチ処理における取引単体テストと同様に、\
リクエスト毎のテストを連続実行することにより取引単体テストが実施可能である。

取引単体テストの実施方法は基本的にバッチと同様である。
ただし、テストクラスが継承するスーパークラスが異なる（\ ``MessagingRequestTestSupport``\ を使用する）。
また、テストクラスは以下の条件を満たすように作成する。

* テストクラスのパッケージはテスト対象取引のパッケージとする。
* <取引ID>Testというクラス名でテストクラスを作成する。

例えば、テスト対象取引の取引IDがM21AA03だとすると、テストクラスは以下のようになる。

.. code-block:: java

 package nablarch.sample.ss21AA03

 import nablarch.test.core.messaging.MessagingRequestTestSupport;

 // 中略
 
 public class M21AA03Test extends MessagingRequestTestSupport {


実施方法については、バッチの実施方法を参照。

:doc:`./batch`


