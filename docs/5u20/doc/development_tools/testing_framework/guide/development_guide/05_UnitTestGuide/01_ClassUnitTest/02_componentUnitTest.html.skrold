


<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->
<head>
  <meta charset="utf-8">
  <meta http-equiv='content-language' content='ja'>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>3.1.1.2. Action/Componentのクラス単体テスト &mdash; ∇Nablarch  5u19 ドキュメント</title>
  

  
  
  
  

  

  
  
    

  

  
  
    <link rel="stylesheet" href="../../../../../../_static/custom.css" type="text/css" />
  

  

  
  <link rel="canonical" href="https://nablarch.github.io/docs/LATEST/doc/development_tools/testing_framework/guide/development_guide/05_UnitTestGuide/01_ClassUnitTest/02_componentUnitTest.html" />
  
    <link rel="top" title="∇Nablarch  5u19 ドキュメント" href="../../../../../../index.html"/>
        <link rel="up" title="3.1.1. クラス単体テストの実施方法" href="index.html"/>
        <link rel="next" title="3.1.2. リクエスト単体テストの実施方法" href="../02_RequestUnitTest/index.html"/>
        <link rel="prev" title="3.1.1.1. Form/Entityのクラス単体テスト" href="01_entityUnitTest.html"/>
 

  
  <script src="../../../../../../_static/js/modernizr.min.js"></script>

</head>

<body class="wy-body-for-nav" role="document">

   
  <div class="wy-grid-for-nav">

    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search">
          
  
  <a href="../../../../../../index.html" id="sidebar-title" class="icon"> ∇Nablarch 
  

  
    <div id="sidebar-version">Version: 5u19</div>
  </a>

  <div role="search">
    <form id="google-search-form" class="wy-form" method="get" action="https://www.google.co.jp/search">
      <input type="text" name="text" placeholder="Search docs on google" id="text"/>
      <input type="hidden" name="q" id="q"/>
    </form>
  </div>
    
    

        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
  
  
    <ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../../../../../about_nablarch/index.html">Nablarchについて</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../about_nablarch/concept.html">Nablarchのコンセプト</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../about_nablarch/concept.html#robustness">Robustness</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../about_nablarch/concept.html#testability">Testability</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../about_nablarch/concept.html#ready-to-use">Ready-to-Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../about_nablarch/mvn_module.html">Nablarch のモジュール一覧</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../about_nablarch/license.html">Nablarchのライセンスについて</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../../../application_framework/index.html">Nablarchアプリケーションフレームワーク</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../application_framework/application_framework/index.html">アプリケーションフレームワーク</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/application_framework/nablarch/index.html">1. Nablarchアプリケーションフレームワークとは</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/application_framework/web/index.html">2. ウェブアプリケーション編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/application_framework/web_service/index.html">3. ウェブサービス編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/application_framework/batch/index.html">4. バッチアプリケーション編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/application_framework/messaging/index.html">5. メッセージング編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/application_framework/handlers/index.html">6. Nablarchの提供する標準ハンドラ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/application_framework/libraries/index.html">7. Nablarchが提供するライブラリ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/application_framework/blank_project/index.html">8. ブランクプロジェクト</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/application_framework/setting_guide/index.html">9. Nablarchアプリケーションフレームワーク設定ガイド</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/application_framework/configuration/index.html">10. デフォルト設定一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/application_framework/cloud_native/index.html">11. Nablarchクラウドネイティブ対応</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../application_framework/adaptors/index.html">アダプタ</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/adaptors/log_adaptor.html">logアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/adaptors/router_adaptor.html">ルーティングアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/adaptors/webspheremq_adaptor.html">IBM WebSphere MQアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/adaptors/jaxrs_adaptor.html">JAX-RSアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/adaptors/doma_adaptor.html">Domaアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/adaptors/jsr310_adaptor.html">JSR310(Date and Time API)アダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/adaptors/mail_sender_freemarker_adaptor.html">E-mail FreeMarkerアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/adaptors/mail_sender_thymeleaf_adaptor.html">E-mail Thymeleafアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/adaptors/mail_sender_velocity_adaptor.html">E-mail Velocityアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/adaptors/web_thymeleaf_adaptor.html">ウェブアプリケーション Thymeleafアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/adaptors/lettuce_adaptor.html">Lettuceアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/adaptors/slf4j_adaptor.html">SLF4Jアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/adaptors/micrometer_adaptor.html">Micrometerアダプタ</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../application_framework/example/index.html">Example</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/example/index.html#id1">環境構築手順について</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../application_framework/example/index.html#id2">アプリケーションの実行手順について</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../../../extension_components/index.html">Nablarch拡張コンポーネント</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../extension_components/report/index.html">1. 帳票ライブラリ</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../extension_components/report/index.html#id2">1.1. 概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../extension_components/report/index.html#id3">1.2. 要求</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../extension_components/report/index.html#id7">1.3. 構造</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../extension_components/report/index.html#report-template">1.4. 実装例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../extension_components/workflow/doc/index.html">2. ワークフローライブラリ</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../extension_components/workflow/doc/index.html#id3">2.1. 機能概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../extension_components/workflow/doc/index.html#id6">2.2. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../extension_components/workflow/doc/index.html#id7">2.3. 使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../extension_components/workflow/doc/index.html#xor">2.4. XORゲートウェイの進行先ノードの判定方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../extension_components/workflow/doc/index.html#workflow-multi-completion">2.5. マルチインスタンスの完了条件の判定方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../extension_components/workflow/tool/index.html">3. ワークフロー定義データ生成ツール</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../extension_components/workflow/tool/index.html#id3">3.1. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../extension_components/workflow/tool/index.html#id4">3.2. 使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../extension_components/etl/index.html">4. ETL</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../extension_components/etl/index.html#id3">4.1. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../extension_components/etl/index.html#etl-phase">4.2. ETLの各フェーズの仕様</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../extension_components/etl/index.html#id5">4.3. ETLを使用するバッチの設計ポイント</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../extension_components/etl/index.html#id9">4.4. 使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../extension_components/etl/index.html#id18">4.5. 拡張例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../extension_components/etl/etl_maven_plugin.html">5. ETL Mavenプラグイン</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../extension_components/etl/etl_maven_plugin.html#id2">5.1. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../extension_components/etl/etl_maven_plugin.html#id3">5.2. 使用方法</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1 current"><a class="reference internal" href="../../../../../index.html">Nablarch開発ツール</a><ul class="current">
<li class="toctree-l2"><a class="reference internal" href="../../../../../java_static_analysis/index.html">1. 効率的なJava静的チェック</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../java_static_analysis/index.html#code-analysis">1.1. 構文チェックを行う</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../java_static_analysis/index.html#code-format">1.2. フォーマットを統一する</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../java_static_analysis/index.html#api">1.3. 許可していないAPIが使用されていないかチェックする</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../ui_dev/index.html">2. フロントエンド上級者向けのUI開発基盤</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../ui_dev/doc/index.html">2.1. Nablarch UI開発基盤 解説書</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../ui_dev/guide/index.html">2.2. JSP/HTML作成ガイド</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../ui_dev/guide/widget_usage/widget_list.html">2.3. UI部品の実装サンプルで提供しているウィジェットの一覧</a></li>
</ul>
</li>
<li class="toctree-l2 current"><a class="reference internal" href="../../../../index.html">3. テスティングフレームワーク</a><ul class="current">
<li class="toctree-l3 current"><a class="reference internal" href="../index.html">3.1. 単体テスト実施方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../06_TestFWGuide/index.html">3.2. 自動テストフレームワークの使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../08_TestTools/index.html">3.3. プログラミング工程で使用するツール</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../toolbox/index.html">4. アプリケーション開発時に使える便利なツール</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../toolbox/JspStaticAnalysis/index.html">4.1. JSP静的解析ツール</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../toolbox/SqlExecutor/SqlExecutor.html">4.2. Nablarch SQL Executor</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../toolbox/JspVerifier/JspVerifier.html">4.3. 業務画面JSP検証ツール</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../../../examples/index.html">Nablarch実装例集</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/01/index.html">データベースを用いたパスワード認証機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/01/0101_PBKDF2PasswordEncryptor.html">PBKDF2を用いたパスワード暗号化機能サンプル</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/01/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/01/index.html#id4">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/01/index.html#id6">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/01/index.html#id12">使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/02/index.html">バリデーション機能の拡張</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/02/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/02/index.html#extendedvalidation-mailaddressvalidator">メールアドレスバリデーション</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/02/index.html#extendedvalidation-japanesetelnumbervalidator">日本電話番号バリデーション</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/02/index.html#id12">コード値精査</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/03/index.html">検索結果の一覧表示</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#id4">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#id5">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#id8">使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#listsearchinfo">ListSearchInfoクラス</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#listsearchresult">listSearchResultタグ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#listsearchresult-sort">検索結果の並び替え</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#listsearchresult-nopaging">1画面にすべての検索結果を一覧表示する場合の実装方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#listsearchresult-defaultcondition">デフォルトの検索条件で検索した結果を初期表示する場合の実装方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#listsearchresult-setting">検索結果の一覧表示機能のデフォルト値設定</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#listsearchresult-customize">業務アプリケーションへのサンプル実装(タグファイル)の取り込み方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#listsearchresult-tagreference">タグリファレンス</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/04/index.html">フォーマッタ機能の拡張</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/04/0401_ExtendedDataFormatter.html">データフォーマッタの拡張</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/04/0402_ExtendedFieldType.html">データフォーマッタ機能におけるフィールドタイプの拡張</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/05/index.html">データベースを用いたファイル管理機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/05/index.html#id2">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/05/index.html#id6">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/05/index.html#id7">機能</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/05/index.html#id10">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/05/index.html#id15">使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/06/index.html">CAPTCHA機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/06/06_Captcha_guide.html">CAPTCHA機能の組み込み手順</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/06/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/06/index.html#id4">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/06/index.html#id6">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/06/index.html#id21">使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/07/index.html">UserAgent情報取得機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/07/index.html#id1">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/07/index.html#id3">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/07/index.html#id8">設定の記述</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/07/index.html#id11">使用例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/08/index.html">HTMLメール送信機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/08/index.html#id1">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/08/index.html#id3">要求</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/08/index.html#id6">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/08/index.html#id14">実装例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/09/index.html">bouncycastleを使用した電子署名つきメールの送信サンプルの使用方法</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/09/index.html#id3">環境準備</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/09/index.html#id4">電子署名付きメール送信機能の構造</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/09/index.html#id5">設定ファイルの準備</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/09/index.html#id7">実行方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/10/index.html">ログ集計サンプルの使用方法</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/10/index.html#id3">提供サンプル一覧</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/11/index.html">メッセージング基盤テストシミュレータサンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/11/index.html#id4">用途</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/11/index.html#id8">特徴</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/11/index.html#id12">要求</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/11/index.html#id15">使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/11/index.html#id18">拡張例</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../../../nablarch_api/index.html">Nablarch API</a></li>
</ul>

  

        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" role="navigation" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../../../../../../index.html">∇Nablarch </a>
        
      </nav>


      
      <div class="wy-nav-content">
        <div class="rst-content">
          

 



<div role="navigation" aria-label="breadcrumbs navigation">
  <ul class="wy-breadcrumbs">
    <li><a href="../../../../../../index.html">Docs</a> &raquo;</li>
      
          <li><a href="../../../../../index.html">Nablarch開発ツール</a> &raquo;</li>
      
          <li><a href="../../../../index.html">3. テスティングフレームワーク</a> &raquo;</li>
      
          <li><a href="../index.html">3.1. 単体テスト実施方法</a> &raquo;</li>
      
          <li><a href="index.html">3.1.1. クラス単体テストの実施方法</a> &raquo;</li>
      
    <li>3.1.1.2. Action/Componentのクラス単体テスト</li>
    <li class="wy-breadcrumbs-aside">
      <a href="https://github.com/nablarch" class="fa fa-github">GitHub</a>
    </li>
    <li class="wy-breadcrumbs-aside">
        <a href="https://nablarch.github.io/docs/LATEST/doc/en/index.html" class="en">English</a>
    </li>
  </ul>
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  <div class="section" id="action-component">
<span id="componentunittest"></span><h1>3.1.1.2. Action/Componentのクラス単体テスト<a class="headerlink" href="#action-component" title="このヘッドラインへのパーマリンク">¶</a></h1>
<p>本項では、Action/Componentのクラス単体テストのうちComponentのクラス単体テスト(以下Component単体テスト)にて説明する。
なお、Actionのクラス単体テスト(以下Action単体テスト)の場合の違いとしてはテストクラス名の部分である。</p>
<div class="section" id="id1">
<h2>3.1.1.2.1. Action/Component単体テストの書き方<a class="headerlink" href="#id1" title="このヘッドラインへのパーマリンク">¶</a></h2>
<p>本項で例として使用したテストクラスとテストデータは以下のとおり(右クリック-&gt;保存でダウンロード)。</p>
<ul class="simple">
<li><a class="reference download internal" href="../../../../../../_downloads/ユーザ登録_UserComponent_クラス単体テストケース.xlsx" download=""><code class="xref download docutils literal"><span class="pre">テストケース一覧(ユーザ登録_</span> <span class="pre">UserComponent_クラス単体テストケース.xlsx)</span></code></a></li>
<li><a class="reference download internal" href="../../../../../../_downloads/UserComponentTest.java" download=""><code class="xref download docutils literal"><span class="pre">テストクラス(UserComponentTest.java)</span></code></a></li>
<li><a class="reference download internal" href="../../../../../../_downloads/UserComponentTest.xlsx" download=""><code class="xref download docutils literal"><span class="pre">テストデータ(UserComponentTest.xlsx)</span></code></a></li>
<li><a class="reference download internal" href="../../../../../../_downloads/UserComponent.java" download=""><code class="xref download docutils literal"><span class="pre">テスト対象クラス(UserComponent.java)</span></code></a></li>
</ul>
<p>本項では、ユーザ登録用メソッド(UserComponent#registerUser)を例に説明する。</p>
<div class="section" id="id2">
<h3>3.1.1.2.1.1. テストケース実行のパターン分け<a class="headerlink" href="#id2" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p>テストケース一覧とテスト対象メソッドから、テストケースは以下の4つに分類される。これは、どのパターンに属するかによって、テストクラスやデータの作成方法に違いがあるためである。</p>
<table border="1" class="docutils">
<colgroup>
<col width="72%" />
<col width="28%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">パターン</th>
<th class="head">当てはまる処理の例</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>戻り値(データベースの検索結果)を確認しなければならないもの</td>
<td>検索処理</td>
</tr>
<tr class="row-odd"><td>戻り値(データベースの検索結果以外)を確認しなければならないもの</td>
<td>計算、判定処理</td>
</tr>
<tr class="row-even"><td>処理終了後のデータベースの状況を確認しなければならないもの</td>
<td>更新(挿入、削除含む)処理</td>
</tr>
<tr class="row-odd"><td>メッセージIDを確認しなければならないもの</td>
<td>エラー処理</td>
</tr>
</tbody>
</table>
<p>今回の例は、DB挿入処理、2重登録時のエラー処理ありなので、テストケースは&#8221;処理終了後のデータベースの状況を確認しなければならないもの&#8221;と&#8221;メッセージIDを確認しなければならないもの&#8221;に分類される。</p>
</div>
<div class="section" id="id3">
<h3>3.1.1.2.1.2. テストデータとテストクラスの作成<a class="headerlink" href="#id3" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p><a class="reference internal" href="#componentunittest-setup"><span>事前準備データの作成処理</span></a>、<a class="reference internal" href="#componentunittest-db"><span>処理終了後のデータベースの状況を確認しなければならないもの</span></a>、<a class="reference internal" href="#componentunittest-messageid"><span>メッセージIDを確認しなければならないもの</span></a>のそれぞれについて、テストデータとテストクラスの作成方法を説明する。まず最初に、テストデータ(Excelファイル)そのもののと、テストクラスの作成方法(継承すべきクラスなど)を説明する。次に、各パターンごとのデータとテストメソッド作成方法を説明する。</p>
<div class="section" id="id4">
<h4>3.1.1.2.1.2.1. テストデータの作成<a class="headerlink" href="#id4" title="このヘッドラインへのパーマリンク">¶</a></h4>
<p>テストデータを記載したExcelファイルは、<a class="reference internal" href="01_entityUnitTest.html#entityunittest"><span>Form/Entityのクラス単体テスト</span></a>と同様にテストソースコードと同じディレクトリに同じ名前で格納する(拡張子のみ異なる)。なお、全てのテストデータは同じExcelのシートに記載する前提である。</p>
<p>テストデータの記述方法詳細については、<a class="reference internal" href="../../06_TestFWGuide/01_Abstract.html"><em>自動テストフレームワーク</em></a>、<a class="reference internal" href="../../06_TestFWGuide/02_DbAccessTest.html"><em>データベースを使用するクラスのテスト</em></a>を参照。</p>
<p>なお、メッセージデータやコードマスタなどの、データベースに格納する静的マスタデータは、プロジェクトで管理されたデータがあらかじめ投入されている(これらのデータを個別のテストデータとして作成しない)前提である。</p>
</div>
<div class="section" id="id5">
<h4>3.1.1.2.1.2.2. テストクラスの作成<a class="headerlink" href="#id5" title="このヘッドラインへのパーマリンク">¶</a></h4>
<p>Component単体テストのテストクラスは以下の条件を満たすように作成する。詳細は、<a class="reference internal" href="../../06_TestFWGuide/02_DbAccessTest.html"><em>データベースを使用するクラスのテスト</em></a>を参照。</p>
<ul class="simple">
<li>テストクラスのパッケージは、テスト対象のAction/Componentと同じとする。</li>
<li>&lt;Action/Componentクラス名&gt;Testというクラス名でテストクラスを作成する。</li>
<li>nablarch.test.core.db.DbAccessTestSupportを継承する。</li>
</ul>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="kn">package</span> <span class="nn">nablarch.sample.management.user</span><span class="o">;</span> <span class="c1">// 【説明】パッケージはUserComponentと同じ</span>

<span class="kn">import static</span> <span class="nn">org.junit.Assert.assertEquals</span><span class="o">;</span>
<span class="kn">import static</span> <span class="nn">org.junit.Assert.assertTrue</span><span class="o">;</span>
<span class="kn">import static</span> <span class="nn">org.junit.Assert.fail</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Map.Entry</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">nablarch.core.db.statement.SqlResultSet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">nablarch.core.message.ApplicationException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">nablarch.test.core.db.DbAccessTestSupport</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.junit.Test</span><span class="o">;</span>

<span class="cm">/**</span>
<span class="cm"> * {@link UserComponentTest}のテストクラス。</span>
<span class="cm"> *</span>
<span class="cm"> * @author Tsuyoshi Kawasaki</span>
<span class="cm"> * @since 1.0</span>
<span class="cm"> */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">UserComponentTest</span> <span class="kd">extends</span> <span class="n">DbAccessTestSupport</span> <span class="o">{</span>
<span class="c1">// 【説明】クラス名はUserComponentTestで、DbAccessTestSupportを継承する</span>

<span class="c1">// ～後略～</span>
</pre></div>
</div>
</div>
<div class="section" id="componentunittest-setup">
<span id="id6"></span><h4>3.1.1.2.1.2.3. 事前準備データの作成処理<a class="headerlink" href="#componentunittest-setup" title="このヘッドラインへのパーマリンク">¶</a></h4>
<p>事前データと事前データ投入処理を作成する。今回の例では、次のようなデータを作成している。</p>
<ul class="simple">
<li>スレッドコンテキスト<a class="footnote-reference" href="#id8" id="id7">[1]</a>の設定<ul>
<li>USER_ID:ユーザID。USERID0001。</li>
<li>REQUEST_ID:リクエストID。USERS00301。</li>
</ul>
</li>
<li>挿入対象テーブルの初期化<ul>
<li>SYSTEM_ACCOUNT:システムアカウントテーブル。初期データ3件。</li>
<li>USERS:ユーザテーブル。初期データ0件。</li>
<li>UGROUP_SYSTEM_ACCOUNT:グループシステムアカウントテーブル。初期データ0件。</li>
<li>SYSTEM_ACCOUNT_AUTHORITY:システムアカウント権限テーブル。初期データ0件。</li>
</ul>
</li>
<li>マスタ系データの投入<ul>
<li>ID_GENERATE:採番テーブル。登録時に採番処理を行うため。採番テーブルを初期化しておかないと、テスト実行時の採番結果がわからなくなり、挿入結果の検証ができなくなる。</li>
</ul>
</li>
</ul>
<a class="reference internal image-reference" href="../../../../../../_images/componentUnitTest_Setup.png"><img alt="../../../../../../_images/componentUnitTest_Setup.png" src="../../../../../../_images/componentUnitTest_Setup.png" style="width: 800.0px;" /></a>
<table class="docutils footnote" frame="void" id="id8" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id7">[1]</a></td><td>スレッドコンテキストとは、ユーザID、リクエストID、使用言語のような、一連の処理を実行するときに、コールスタックの複数のメソッドにおいて共通的に必要なデータを格納するオブジェクト。</td></tr>
</tbody>
</table>
<p>これらのデータを読み込む処理を以下に示す。</p>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="c1">// ～前略～</span>

<span class="cm">/**</span>
<span class="cm"> * {@link UserComponent#registerUser()}のテスト1。&lt;br&gt;</span>
<span class="cm"> * 正常系。</span>
<span class="cm"> */</span>
<span class="nd">@Test</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">testRegisterUser1</span><span class="o">()</span> <span class="o">{</span>
    <span class="n">String</span> <span class="n">sheetName</span> <span class="o">=</span> <span class="s">&quot;registerUser&quot;</span><span class="o">;</span>

    <span class="n">setThreadContextValues</span><span class="o">(</span><span class="n">sheetName</span><span class="o">,</span> <span class="s">&quot;threadContext&quot;</span><span class="o">);</span> <span class="c1">// 【説明】スレッドコンテキストの設定</span>


<span class="c1">// ～中略～</span>

     <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">sysAcctDatas</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>

<span class="c1">// ～中略～</span>

        <span class="c1">// データベース準備</span>
        <span class="n">setUpDb</span><span class="o">(</span><span class="n">sheetName</span><span class="o">);</span> <span class="c1">// 【説明】事前データの投入。</span>
                            <span class="c1">// 【説明】各ケースごとに初期化するためループ中で実行する。</span>

<span class="c1">// ～後略～</span>
</pre></div>
</div>
</div>
<div class="section" id="componentunittest-db">
<span id="id9"></span><h4>3.1.1.2.1.2.4. 処理終了後のデータベースの状況を確認しなければならないもの<a class="headerlink" href="#componentunittest-db" title="このヘッドラインへのパーマリンク">¶</a></h4>
<div class="section" id="componentunittest-inputdata-normal">
<span id="id10"></span><h5>3.1.1.2.1.2.4.1. テストデータ(入力値)の作成<a class="headerlink" href="#componentunittest-inputdata-normal" title="このヘッドラインへのパーマリンク">¶</a></h5>
<p>テスト対象メソッドの引数を用意する。今回の例では、以下の3つが必要となる。なお、各データの同じ行で1組のテストデータとなる(例えば、sysAcctEntityの1行目と、usersEntityの1行目と、grpSysAcctEntityの1行目で1ケース分のテストデータとなる)。</p>
<ul class="simple">
<li>sysAcctEntity:システムアカウントエンティティのデータ</li>
<li>usersEntity:ユーザエンティティのデータ</li>
<li>grpSysAcctEntity:グループシステムアカウントエンティティのデータ</li>
</ul>
<p>sysAcctEntityのuseCaseIdはuseCaseIdプロパティに設定される値そのものではなく(SystemAccountEntityのuseCaseIdプロパティは配列)、図中矢印で示している別の表のデータを指している。テストコードでは、取得した値をキーとして更にデータを取得、配列を作成し、useCaseIdプロパティに設定している。</p>
<a class="reference internal image-reference" href="../../../../../../_images/componentUnitTest_inputData.png"><img alt="../../../../../../_images/componentUnitTest_inputData.png" src="../../../../../../_images/componentUnitTest_inputData.png" style="width: 800.0px;" /></a>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="c1">// ～前略～</span>

<span class="kd">public</span> <span class="kt">void</span> <span class="nf">testRegisterUser1</span><span class="o">()</span> <span class="o">{</span>
    <span class="n">String</span> <span class="n">sheetName</span> <span class="o">=</span> <span class="s">&quot;registerUser&quot;</span><span class="o">;</span>

    <span class="n">setThreadContextValues</span><span class="o">(</span><span class="n">sheetName</span><span class="o">,</span> <span class="s">&quot;threadContext&quot;</span><span class="o">);</span>

    <span class="n">List</span><span class="o">&lt;</span><span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;&gt;</span> <span class="n">sysAcctDatas</span> <span class="o">=</span> <span class="n">getListMap</span><span class="o">(</span><span class="n">sheetName</span><span class="o">,</span> <span class="s">&quot;sysAcctEntity&quot;</span><span class="o">);</span>
    <span class="n">List</span><span class="o">&lt;</span><span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;&gt;</span> <span class="n">usersDatas</span> <span class="o">=</span> <span class="n">getListMap</span><span class="o">(</span><span class="n">sheetName</span><span class="o">,</span> <span class="s">&quot;usersEntity&quot;</span><span class="o">);</span>
    <span class="n">List</span><span class="o">&lt;</span><span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;&gt;</span> <span class="n">grpSysAcctDatas</span> <span class="o">=</span> <span class="n">getListMap</span><span class="o">(</span><span class="n">sheetName</span><span class="o">,</span> <span class="s">&quot;grpSysAcctEntity&quot;</span><span class="o">);</span>
    <span class="c1">// エクセルのデータを一時的に受けるMap、List</span>
    <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">work</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;();</span>
    <span class="n">List</span><span class="o">&lt;</span><span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;&gt;</span> <span class="n">useCaseData</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>

    <span class="n">SystemAccountEntity</span> <span class="n">sysAcct</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
    <span class="n">UsersEntity</span> <span class="n">users</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
    <span class="n">UgroupSystemAccountEntity</span> <span class="n">grpSysAcct</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">sysAcctDatas</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>

<span class="c1">// ～中略～</span>


        <span class="c1">// システムアカウント  // 【説明】SystemAccountEntityの準備</span>
        <span class="n">work</span><span class="o">.</span><span class="na">clear</span><span class="o">();</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">Entry</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">e</span> <span class="o">:</span> <span class="n">sysAcctDatas</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">entrySet</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">work</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getKey</span><span class="o">(),</span> <span class="n">e</span><span class="o">.</span><span class="na">getValue</span><span class="o">());</span>
        <span class="o">}</span>
        <span class="c1">// ユースケースIDの引数作成</span>
        <span class="n">String</span> <span class="n">id</span> <span class="o">=</span> <span class="n">sysAcctDatas</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;useCaseId&quot;</span><span class="o">);</span> <span class="c1">// 【説明】図中矢印の根元にある表のIDを取得</span>
        <span class="n">useCaseData</span> <span class="o">=</span> <span class="n">getListMap</span><span class="o">(</span><span class="n">sheetName</span><span class="o">,</span> <span class="n">id</span><span class="o">);</span> <span class="c1">// 【説明】取得したIDを使用して図中矢印の先にある配列のデータを取得</span>
        <span class="n">String</span><span class="o">[]</span> <span class="n">useCaseId</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="n">useCaseData</span><span class="o">.</span><span class="na">size</span><span class="o">()];</span> <span class="c1">// 【説明】配列の作成</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">useCaseData</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">useCaseId</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">useCaseData</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">j</span><span class="o">).</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;useCaseId&quot;</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="n">work</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;useCase&quot;</span><span class="o">,</span> <span class="n">useCaseId</span><span class="o">);</span> <span class="c1">// 【説明】作成した配列をSystemAccountEntityのコンストラクタに渡すMapに設定</span>
        <span class="n">sysAcct</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SystemAccountEntity</span><span class="o">(</span><span class="n">work</span><span class="o">);</span>

        <span class="c1">// ユーザ  // 【説明】UsersEntityの準備</span>
        <span class="n">work</span><span class="o">.</span><span class="na">clear</span><span class="o">();</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">Entry</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">e</span> <span class="o">:</span> <span class="n">usersDatas</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">entrySet</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">work</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getKey</span><span class="o">(),</span> <span class="n">e</span><span class="o">.</span><span class="na">getValue</span><span class="o">());</span>
        <span class="o">}</span>
        <span class="n">users</span> <span class="o">=</span> <span class="k">new</span> <span class="n">UsersEntity</span><span class="o">(</span><span class="n">work</span><span class="o">);</span>

        <span class="c1">// グループシステムアカウント  // 【説明】UgroupSystemAccountEntityの準備</span>
        <span class="n">work</span><span class="o">.</span><span class="na">clear</span><span class="o">();</span>
        <span class="k">for</span> <span class="o">(</span><span class="n">Entry</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">e</span> <span class="o">:</span> <span class="n">grpSysAcctDatas</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">entrySet</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">work</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getKey</span><span class="o">(),</span> <span class="n">e</span><span class="o">.</span><span class="na">getValue</span><span class="o">());</span>
        <span class="o">}</span>
        <span class="n">grpSysAcct</span> <span class="o">=</span> <span class="k">new</span> <span class="n">UgroupSystemAccountEntity</span><span class="o">(</span><span class="n">work</span><span class="o">);</span>

        <span class="c1">// 実行</span>
        <span class="n">target</span><span class="o">.</span><span class="na">registerUser</span><span class="o">(</span><span class="n">sysAcct</span><span class="o">,</span> <span class="n">users</span><span class="o">,</span> <span class="n">grpSysAcct</span><span class="o">);</span>
        <span class="n">commitTransactions</span><span class="o">();</span>   <span class="c1">// 【説明】全てのトランザクションをコミット</span>

        <span class="c1">// 検証</span>
        <span class="n">String</span> <span class="n">expectedGroupId</span> <span class="o">=</span> <span class="n">getListMap</span><span class="o">(</span><span class="n">sheetName</span><span class="o">,</span> <span class="s">&quot;expected&quot;</span><span class="o">).</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;caseNo&quot;</span><span class="o">);</span>
        <span class="n">assertTableEquals</span><span class="o">(</span><span class="n">expectedGroupId</span><span class="o">,</span> <span class="n">sheetName</span><span class="o">,</span> <span class="n">expectedGroupId</span><span class="o">);</span>

<span class="c1">// ～後略～</span>
</pre></div>
</div>
<div class="admonition tip">
<p class="first admonition-title">補足</p>
<p class="last">上記のソースコードでは、getListMapメソッドを用いてExcelシートからデータを読み込んでいる。getListMapメソッドの詳細については、<a class="reference internal" href="../../06_TestFWGuide/03_Tips.html"><em>目的別API使用方法</em></a>の『<a class="reference internal" href="../../06_TestFWGuide/03_Tips.html#how-to-get-data-from-excel"><span>Excelファイルから、入力パラメータや戻り値に対する期待値などを取得したい</span></a>』 を参照。</p>
</div>
<p>クラス単体テストでは、テストクラスからデータベースアクセスを行うクラスを直接起動する為、フレームワークによるトランザクション制御は行われない。処理終了後のデータベースの状況を確認しなければならない場合は、テストクラスにてトランザクションをコミットする必要がある。</p>
<p>スーパクラスの <code class="docutils literal"><span class="pre">commitTransactions()</span></code> メソッドを起動しコミットする。
トランザクションをコミットしない場合、テスト結果の確認が正常に行われない。(参照系のテストの場合はコミットを行う必要はない)</p>
</div>
<div class="section" id="id11">
<h5>3.1.1.2.1.2.4.2. テストデータ(想定結果)の作成<a class="headerlink" href="#id11" title="このヘッドラインへのパーマリンク">¶</a></h5>
<p>想定結果をテストケースごとに用意する。アプリケーションで設定する項目だけでなく、自動設定項目(<a class="reference internal" href="../../../../../../application_framework/application_framework/libraries/database/database.html#database-common-bean"><span>SQL実行時に共通的な値を自動的に設定したい</span></a>参照)も想定結果を用意する。検証には&#8221;assertTableEquals&#8221;メソッドを用いる。</p>
<p>サンプルアプリケーションでは、グループID(<a class="reference internal" href="../../06_TestFWGuide/03_Tips.html#tips-groupid"><span>一つのシートに複数テストケースのデータを記載したい</span></a>参照)を定義したデータ(expected)を用意し、これをassertTableEqualsの引数に渡すことで、複数の想定結果に対応している。</p>
<a class="reference internal image-reference" href="../../../../../../_images/componentUnitTest_expectedDataNormal.png"><img alt="../../../../../../_images/componentUnitTest_expectedDataNormal.png" src="../../../../../../_images/componentUnitTest_expectedDataNormal.png" style="width: 800.0px;" /></a>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="c1">// ～前略～</span>

<span class="cm">/**</span>
<span class="cm"> * {@link UserComponent#registerUser()}のテスト1。&lt;br&gt;</span>
<span class="cm"> * 正常系。</span>
<span class="cm"> */</span>
<span class="nd">@Test</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">testRegisterUser1</span><span class="o">()</span> <span class="o">{</span>
    <span class="n">String</span> <span class="n">sheetName</span> <span class="o">=</span> <span class="s">&quot;registerUser&quot;</span><span class="o">;</span>

<span class="c1">// ～中略～</span>

     <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">sysAcctDatas</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>

<span class="c1">// ～中略～</span>


         <span class="c1">// 検証</span>
         <span class="c1">// 【説明】グループIDの取得</span>
         <span class="n">String</span> <span class="n">expectedGroupId</span> <span class="o">=</span> <span class="n">getListMap</span><span class="o">(</span><span class="n">sheetName</span><span class="o">,</span> <span class="s">&quot;expected&quot;</span><span class="o">).</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;caseNo&quot;</span><span class="o">);</span>
         <span class="c1">// 【説明】取得したグループIDを引数にassertTableEqualsの実行</span>
         <span class="n">assertTableEquals</span><span class="o">(</span><span class="n">expectedGroupId</span><span class="o">,</span> <span class="n">sheetName</span><span class="o">,</span> <span class="n">expectedGroupId</span><span class="o">);</span>

<span class="c1">// ～後略～</span>
</pre></div>
</div>
<p>case1を例にとると、想定結果は次のようになる。</p>
<table border="1" class="docutils">
<colgroup>
<col width="20%" />
<col width="80%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">テーブル名</th>
<th class="head">想定</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>SYSTEM_ACCOUNT</td>
<td><a class="reference internal" href="#componentunittest-setup"><span>事前準備データの作成処理</span></a>で示したレコード+1レコード追加。計4レコード。</td>
</tr>
<tr class="row-odd"><td>USERS</td>
<td>1レコード追加。(<a class="reference internal" href="#componentunittest-setup"><span>事前準備データの作成処理</span></a>で0件に初期化し、テスト対象処理で1レコード追加)</td>
</tr>
<tr class="row-even"><td>UGROUP_SYSTEM_ACCOUNT</td>
<td>1レコード追加。(<a class="reference internal" href="#componentunittest-setup"><span>事前準備データの作成処理</span></a>で0件に初期化し、テスト対象処理で1レコード追加)</td>
</tr>
<tr class="row-odd"><td>SYSTEM_ACCOUNT_AUTHORITY</td>
<td>変化なし(新規追加なし)。</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="section" id="componentunittest-messageid">
<span id="id"></span><h4>3.1.1.2.1.2.5. メッセージIDを確認しなければならないもの<a class="headerlink" href="#componentunittest-messageid" title="このヘッドラインへのパーマリンク">¶</a></h4>
<div class="section" id="id12">
<h5>3.1.1.2.1.2.5.1. テストデータ(入力値と想定値)の作成<a class="headerlink" href="#id12" title="このヘッドラインへのパーマリンク">¶</a></h5>
<p><a class="reference internal" href="#componentunittest-inputdata-normal"><span>前項のテストデータ(入力値)の作成</span></a>と同様にテストデータ(入力値)を作成する。こちらでは、<a class="reference internal" href="#componentunittest-inputdata-normal"><span>前項</span></a>で指定したIDの末尾に&#8221;Err&#8221;を付加することで、同じExcelシート内に正常系と異常系のデータを混載している。また、想定値はメッセージIDである。</p>
<p>ここで確認すべき内容は、ユニークキー制約違反による例外の発生である。テストコードでは、目的の例外をキャッチし、メッセージIDを比較することで検証を行う。</p>
<div class="admonition important">
<p class="first admonition-title">重要</p>
<p class="last">キャッチする例外は発生を想定する例外とし、RuntimeExceptionなどの上位例外クラスは用いないこと。メッセージIDはあっているが、例外そのものを間違えているバグを検出できなくなってしまう。</p>
</div>
<a class="reference internal image-reference" href="../../../../../../_images/componentUnitTest_expectedDataAbnormal.png"><img alt="../../../../../../_images/componentUnitTest_expectedDataAbnormal.png" src="../../../../../../_images/componentUnitTest_expectedDataAbnormal.png" style="width: 800.0px;" /></a>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="c1">// ～前略～</span>

<span class="cm">/**</span>
<span class="cm"> * {@link UserComponent#registerUser()}のテスト2。&lt;br&gt;</span>
<span class="cm"> * 異常系。</span>
<span class="cm"> */</span>
<span class="nd">@Test</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">testRegisterUser2</span><span class="o">()</span> <span class="o">{</span>
    <span class="n">String</span> <span class="n">sheetName</span> <span class="o">=</span> <span class="s">&quot;registerUser&quot;</span><span class="o">;</span>

<span class="c1">// ～中略～</span>

        <span class="c1">// 実行</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="n">target</span><span class="o">.</span><span class="na">registerUser</span><span class="o">(</span><span class="n">sysAcct</span><span class="o">,</span> <span class="n">users</span><span class="o">,</span> <span class="n">grpSysAcct</span><span class="o">);</span> <span class="c1">// 【説明】テスト対象メソッド実行</span>
            <span class="n">fail</span><span class="o">();</span> <span class="c1">// 【説明】例外が発生しなかったらテスト失敗</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ApplicationException</span> <span class="n">ae</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// 【説明】発生するはずの例外をキャッチ</span>
            <span class="c1">// 【説明】メッセージIDを検証</span>
            <span class="n">assertEquals</span><span class="o">(</span><span class="n">expected</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;messageId&quot;</span><span class="o">),</span> <span class="n">ae</span><span class="o">.</span><span class="na">getMessages</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">getMessageId</span><span class="o">());</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="c1">// ～後略～</span>
</pre></div>
</div>
</div>
</div>
</div>
</div>
</div>


           </div>
           <div class="articleComments">
            
           </div>
          </div>
          <footer>

    <hr/>

    <div role="contentinfo">
        <p>
            &copy; Copyright 2010-2021, TIS Inc.
        </p>
    </div>
    Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org">Read the Docs</a>.

</footer>

        </div>
      </div>

    </section>

  </div>
  


  

    <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'../../../../../../',
            VERSION:'5u19',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true,
            SOURCELINK_SUFFIX: ''
        };
    </script>
      <script type="text/javascript" src="../../../../../../_static/jquery.js"></script>
      <script type="text/javascript" src="../../../../../../_static/underscore.js"></script>
      <script type="text/javascript" src="../../../../../../_static/doctools.js"></script>
      <script type="text/javascript" src="../../../../../../_static/custom.js"></script>
      <script type="text/javascript" src="../../../../../../_static/translations.js"></script>

  

  
  
    <script type="text/javascript" src="../../../../../../_static/js/theme.js"></script>
  

  
  
  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>
   

</body>
</html>