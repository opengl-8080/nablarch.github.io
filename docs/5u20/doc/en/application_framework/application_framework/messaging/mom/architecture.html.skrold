


<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->
<head>
  <meta charset="utf-8">
  <meta http-equiv='content-language' content='ja'>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>5.1.1. Architecture Overview &mdash; ∇Nablarch  5u19 documentation</title>
  

  
  
  
  

  

  
  
    

  

  
  
    <link rel="stylesheet" href="../../../../_static/custom.css" type="text/css" />
  

  

  
  <link rel="canonical" href="https://nablarch.github.io/docs/LATEST/doc/application_framework/application_framework/messaging/mom/architecture.html" />
  
    <link rel="top" title="∇Nablarch  5u19 documentation" href="../../../../index.html"/>
        <link rel="up" title="5.1. Messaging with MOM" href="index.html"/>
        <link rel="next" title="5.1.2. Responsibility Assignment of the Application" href="application_design.html"/>
        <link rel="prev" title="5.1. Messaging with MOM" href="index.html"/>
 

  
  <script src="../../../../_static/js/modernizr.min.js"></script>

</head>

<body class="wy-body-for-nav" role="document">

   
  <div class="wy-grid-for-nav">

    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search">
          
  
  <a href="../../../../index.html" id="sidebar-title" class="icon"> ∇Nablarch 
  

  
    <div id="sidebar-version">Version: 5u19</div>
  </a>

  <div role="search">
    <form id="google-search-form" class="wy-form" method="get" action="https://www.google.co.jp/search">
      <input type="text" name="text" placeholder="Search docs on google" id="text"/>
      <input type="hidden" name="q" id="q"/>
    </form>
  </div>
    
    

        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
  
  
    <ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../../../about_nablarch/index.html">What is the Nablarch?</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../about_nablarch/concept.html">Nablarch Concept</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../about_nablarch/concept.html#robustness">Robustness</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../about_nablarch/concept.html#testability">Testability</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../about_nablarch/concept.html#ready-to-use">Ready-to-Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../about_nablarch/mvn_module.html">Module List of Nablarch</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../about_nablarch/license.html">Information on Nablarch License</a></li>
</ul>
</li>
<li class="toctree-l1 current"><a class="reference internal" href="../../../index.html">Nablarch Application Framework</a><ul class="current">
<li class="toctree-l2 current"><a class="reference internal" href="../../index.html">Application Framework</a><ul class="current">
<li class="toctree-l3"><a class="reference internal" href="../../nablarch/index.html">1. What is Nablarch Application Framework?</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../web/index.html">2. Web Application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../web_service/index.html">3. Web Service</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../batch/index.html">4. Batch Application</a></li>
<li class="toctree-l3 current"><a class="reference internal" href="../index.html">5. Messaging</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../handlers/index.html">6. Standard Handler Provided by Nablarch</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../libraries/index.html">7. Libraries Provided by Nablarch</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../blank_project/index.html">8. Blank Project</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../setting_guide/index.html">9. Nablarch Application Framework Configuration Guide</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../configuration/index.html">10. Default Configuration List</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../cloud_native/index.html">11. Nablarch Cloud Native Support</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../adaptors/index.html">Adaptor</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/log_adaptor.html">log Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/router_adaptor.html">Routing Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/webspheremq_adaptor.html">IBM WebSphere MQ Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/jaxrs_adaptor.html">JAX-RS Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/doma_adaptor.html">Doma Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/jsr310_adaptor.html">JSR310(Date and Time API)Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/mail_sender_freemarker_adaptor.html">E-mail FreeMarker Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/mail_sender_thymeleaf_adaptor.html">E-mail Thymeleaf Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/mail_sender_velocity_adaptor.html">E-mail Velocity Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/web_thymeleaf_adaptor.html">Web Application Thymeleaf Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/lettuce_adaptor.html">Lettuce Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/slf4j_adaptor.html">SLF4J Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../adaptors/micrometer_adaptor.html">Micrometer Adapter</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../example/index.html">Example</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../example/index.html#procedure-to-build-the-environment">Procedure to build the environment</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../example/index.html#application-execution-procedure">Application execution procedure</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../extension_components/index.html">Nablarch extension component</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/report/index.html">1. Form library</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/workflow/doc/index.html">2. Workflow library</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/workflow/tool/index.html">3. Workflow definition data generation tool</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/etl/index.html">4. ETL</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../extension_components/etl/etl_maven_plugin.html">5. ETL Maven plugin</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../development_tools/index.html">Nablarch development tools</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html">1. Efficient Java Static Checks</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html#conduct-syntax-check">1.1. Conduct syntax check</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html#unify-the-format">1.2. Unify the format</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/java_static_analysis/index.html#check-if-unauthorized-apis-are-being-used">1.3. Check if unauthorized APIs are being used</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/ui_dev/index.html">2. Front-end UI development platform for advanced users</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/testing_framework/index.html">3. Testing framework</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/testing_framework/guide/development_guide/05_UnitTestGuide/index.html">3.1. How to Execute Unit Tests</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/testing_framework/guide/development_guide/06_TestFWGuide/index.html">3.2. How to Use the Automated Test Framework</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/testing_framework/guide/development_guide/08_TestTools/index.html">3.3. Tools Used in the Programming Phase</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../development_tools/toolbox/index.html">4. Useful Tools When Developing Applications</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/toolbox/JspStaticAnalysis/index.html">4.1. JSP Static Analysis Tool</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/toolbox/SqlExecutor/SqlExecutor.html">4.2. Nablarch SQL Executor</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../development_tools/toolbox/JspVerifier/JspVerifier.html">4.3. Job Screen JSP Validation Tool</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../examples/index.html">Nablarch Implementation Examples</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/01/index.html">Sample Password Encryption Function Using Database</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/0101_PBKDF2PasswordEncryptor.html">Sample Password Encryption Function Using PBKDF2</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/01/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/02/index.html">Extended Validation Functions</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#email-address-validation">Email address validation</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#validation-of-japan-telephone-numbers">Validation of Japan telephone numbers</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/02/index.html#code-value-validation">Code value validation</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/03/index.html">Display a List of Search Results</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#how-to-use">How to Use</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchinfo-class">ListSearchInfo class</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#listsearchresult-tag">listSearchResult tag</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#sort-search-results">Sort search results</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#how-to-implement-displaying-a-list-of-all-search-results-on-a-single-screen">How to implement displaying a list of all search results on a single screen</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#how-to-implement-the-initial-display-of-search-results-with-the-default-search-conditions">How to implement the initial display of search results with the default search conditions</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#default-settings-for-the-search-result-list-display-function">Default settings for the search result list display function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#how-to-import-a-sample-implementation-tag-file-into-the-business-application">How to import a sample implementation (tag file) into the business application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/03/index.html#tag-reference">Tag Reference</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/04/index.html">Extended Formatter Functions</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/04/0401_ExtendedDataFormatter.html">Data Formatter Expansion</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/04/0402_ExtendedFieldType.html">Field Type Expansion in the Data Formatter Function</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/05/index.html">Sample File Management Function Using Database</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#functions">Functions</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/05/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/06/index.html">CAPTCHA Function Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/06_Captcha_guide.html">How to Incorporate the CAPTCHA Function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/06/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/07/index.html">Sample UserAgent Information Acquisition Function</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#description-of-configuration">Description of configuration</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/07/index.html#use-case">Use case</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/08/index.html">Sample of HTML Email Send Function</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#request">Request</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/08/index.html#implementation-examples">Implementation examples</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/09/index.html">How to Use a Sample to Send a Digitally Signed Email Using Bouncycastle</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#environment-preparation">Environment preparation</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#structure-of-digitally-signed-email-send-function">Structure of digitally signed email send function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#preparation-of-configuration-file">Preparation of configuration file</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/09/index.html#execution">Execution</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/10/index.html">How to Use the Log Aggregation Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/10/index.html#list-of-samples-provided">List of samples provided</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../examples/11/index.html">Messaging Platform Test Simulator Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#uses">Uses</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#features">Features</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#request">Request</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#how-to-use">How to use</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../examples/11/index.html#expansion-example">Expansion example</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../nablarch_api/index.html">Nablarch API</a></li>
</ul>

  

        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" role="navigation" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../../../../index.html">∇Nablarch </a>
        
      </nav>


      
      <div class="wy-nav-content">
        <div class="rst-content">
          

 



<div role="navigation" aria-label="breadcrumbs navigation">
  <ul class="wy-breadcrumbs">
    <li><a href="../../../../index.html">Docs</a> &raquo;</li>
      
          <li><a href="../../../index.html">Nablarch Application Framework</a> &raquo;</li>
      
          <li><a href="../../index.html">Application Framework</a> &raquo;</li>
      
          <li><a href="../index.html">5. Messaging</a> &raquo;</li>
      
          <li><a href="index.html">5.1. Messaging with MOM</a> &raquo;</li>
      
    <li>5.1.1. Architecture Overview</li>
    <li class="wy-breadcrumbs-aside">
      <a href="https://github.com/nablarch" class="fa fa-github">GitHub</a>
    </li>
    <li class="wy-breadcrumbs-aside">
        <a href="https://nablarch.github.io/docs/LATEST/doc/index.html" class="ja">日本語</a>
    </li>
  </ul>
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  <div class="section" id="architecture-overview">
<h1>5.1.1. Architecture Overview<a class="headerlink" href="#architecture-overview" title="Permalink to this headline">¶</a></h1>
<div class="contents local topic" id="table-of-contents">
<p class="topic-title first">Table of contents</p>
<ul class="simple">
<li><a class="reference internal" href="#configure-mom-messaging" id="id3">Configure MOM messaging</a></li>
<li><a class="reference internal" href="#specify-action-and-request-id-based-on-the-request-message" id="id4">Specify action and request ID based on the request message</a></li>
<li><a class="reference internal" href="#process-flow-of-mom-messaging" id="id5">Process flow of MOM messaging</a></li>
<li><a class="reference internal" href="#handlers-used-in-mom-messaging" id="id6">Handlers used in MOM messaging</a><ul>
<li><a class="reference internal" href="#minimum-handler-configuration-for-synchronous-response-messaging" id="id7">Minimum handler configuration for synchronous response messaging</a></li>
<li><a class="reference internal" href="#minimum-handler-configuration-for-asynchronous-response-messaging" id="id8">Minimum handler configuration for asynchronous response messaging</a></li>
</ul>
</li>
<li><a class="reference internal" href="#data-readers-used-in-mom-messaging" id="id9">Data readers used in MOM messaging</a></li>
<li><a class="reference internal" href="#action-used-in-mom-messaging" id="id10">Action used in MOM messaging</a></li>
</ul>
</div>
<p>MOM messaging provides a function to execute an action corresponding to the request ID for request messages sent from the outside.
The message queue used for MOM messaging is referred to as MQ.</p>
<p>MOM messaging is divided into two types:</p>
<dl class="docutils">
<dt>Synchronous response messaging</dt>
<dd>A response message is created for the request message and sent to MQ based on the execution result of business processing.
Used when an immediate response is required, such as for permission business.</dd>
<dt>Asynchronous response messaging</dt>
<dd>The response message is not sent, and the request message contents received from MQ are stored in a table in the DB.
Business process is executed by a subsequent batch using this table as the input.
For information on batch, see <a class="reference internal" href="../db/index.html#db-messaging"><span>Messaging Using Tables as Queues</span></a>.</dd>
</dl>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">Asynchronous response messaging is a very simple process of storing the contents of messages in a table,
so the action class provided by the framework can be used without any change.
In that case, only the required configuration needs to be configured, and coding is not required.</p>
</div>
<div class="admonition important">
<p class="first admonition-title">Important</p>
<p class="last">Only fixed-length data of <a class="reference internal" href="../../libraries/data_io/data_format.html#data-format"><span>General Data Format</span></a> can be handled by MOM messaging.</p>
</div>
<p>MOM messaging uses the MOM messaging function of the library to send and receive messages.
For details, see <a class="reference internal" href="../../libraries/system_messaging/mom_system_messaging.html#mom-system-messaging"><span>MOM Messaging</span></a> .</p>
<div class="section" id="configure-mom-messaging">
<h2><a class="toc-backref" href="#id3">5.1.1.1. Configure MOM messaging</a><a class="headerlink" href="#configure-mom-messaging" title="Permalink to this headline">¶</a></h2>
<p>The configuration of MOM messaging is exactly the same as <a class="reference internal" href="../../batch/nablarch_batch/index.html#nablarch-batch"><span>Nablarch Batch Application</span></a>.
See <a class="reference internal" href="../../batch/nablarch_batch/architecture.html#nablarch-batch-structure"><span>Configuration of Nablarch Batch Application</span></a> .</p>
</div>
<div class="section" id="specify-action-and-request-id-based-on-the-request-message">
<h2><a class="toc-backref" href="#id4">5.1.1.2. Specify action and request ID based on the request message</a><a class="headerlink" href="#specify-action-and-request-id-based-on-the-request-message" title="Permalink to this headline">¶</a></h2>
<p>MOM messaging uses a specified field in the request message as the request ID.
Since the request ID does not include a hierarchical structure unlike request paths of web applications,
use <a class="reference internal" href="../../handlers/common/request_path_java_package_mapping.html#request-path-java-package-mapping"><span>Request Dispatch Handler</span></a> to specify the action class package and class name suffix in the configuration,
and dispatch it to the class corresponding to the request ID.</p>
<p>The request ID must be included in the framework control header in the request message.
For details, see  <a class="reference internal" href="../../libraries/system_messaging/mom_system_messaging.html#mom-system-messaging-fw-header"><span>framework control header</span></a> .</p>
</div>
<div class="section" id="process-flow-of-mom-messaging">
<h2><a class="toc-backref" href="#id5">5.1.1.3. Process flow of MOM messaging</a><a class="headerlink" href="#process-flow-of-mom-messaging" title="Permalink to this headline">¶</a></h2>
<p>The process flow of MOM messaging, from receiving a request message to returning a response message, is shown below.
The only difference with asynchronous response messaging is that no response message is returned.</p>
<a class="reference internal image-reference" href="../../../../_images/mom_messaging-flow.png"><img alt="../../../../_images/mom_messaging-flow.png" src="../../../../_images/mom_messaging-flow.png" /></a>
<ol class="arabic simple">
<li>The <a class="reference internal" href="../../handlers/standalone/main.html#main"><span>common start-up launcher (Main)</span></a> executes the handler queue.</li>
<li>The data reader (<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/reader/FwHeaderReader.html" title="nablarch.fw.messaging.reader.FwHeaderReader">FwHeaderReader</a>
/
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/reader/MessageReader.html" title="nablarch.fw.messaging.reader.MessageReader">MessageReader</a>) monitors the message queue, reads the received messages, and provides request messages one by one.</li>
<li>The <a class="reference internal" href="../../batch/nablarch_batch/architecture.html#nablarch-batch-structure"><span>Configuration of Nablarch Batch Application</span></a> configured in the handler queue specifies the action class to be processed based on the request ID included in the specified field of the request message, and adds it to the end of the handler queue.</li>
<li>The action class executes business logic for each request message using a form class and an entity class.</li>
<li>The action class returns <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/ResponseMessage.html" title="nablarch.fw.messaging.ResponseMessage">ResponseMessage</a> , which represents the response message.</li>
<li>Steps 2 to 5 are repeated until there is a process stop request.</li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/handler/StatusCodeConvertHandler.html" title="nablarch.fw.handler.StatusCodeConvertHandler">status code → process exit code conversion handler (StatusCodeConvertHandler)</a>  set in the handler queue converts the status code of the process result into the process exit code,
and the process exit code is returned as the processing result of MOM messaging.</li>
</ol>
</div>
<div class="section" id="handlers-used-in-mom-messaging">
<h2><a class="toc-backref" href="#id6">5.1.1.4. Handlers used in MOM messaging</a><a class="headerlink" href="#handlers-used-in-mom-messaging" title="Permalink to this headline">¶</a></h2>
<p>Nablarch provides several handlers as standard, which are required for building MOM messaging.
Build the handler queue in accordance with the requirements of the project (a custom handler will have to be created for the project depending on the requirements)</p>
<p>For details of each handler, refer to the link.</p>
<dl class="docutils">
<dt>Handlers that convert request and response</dt>
<dd><ul class="first last simple">
<li><a class="reference internal" href="../../handlers/standalone/status_code_convert_handler.html#status-code-convert-handler"><span>Status Code → Process End Code Conversion Handler</span></a></li>
<li><a class="reference internal" href="../../handlers/standalone/data_read_handler.html#data-read-handler"><span>Data Read Handler</span></a></li>
</ul>
</dd>
<dt>Handlers that control process execution</dt>
<dd><ul class="first last simple">
<li><a class="reference internal" href="../../handlers/standalone/duplicate_process_check_handler.html#duplicate-process-check-handler"><span>Process Multiple Launch Prevention Handler</span></a></li>
<li><a class="reference internal" href="../../handlers/standalone/multi_thread_execution_handler.html#multi-thread-execution-handler"><span>Multi-thread Execution Control Handler</span></a></li>
<li><a class="reference internal" href="../../handlers/standalone/retry_handler.html#retry-handler"><span>Retry Handler</span></a></li>
<li><a class="reference internal" href="../../handlers/standalone/request_thread_loop_handler.html#request-thread-loop-handler"><span>Loop Control Handler in Request Thread</span></a></li>
<li><a class="reference internal" href="../../handlers/standalone/process_stop_handler.html#process-stop-handler"><span>Process Stop Control Handler</span></a></li>
<li><a class="reference internal" href="../../handlers/common/request_path_java_package_mapping.html#request-path-java-package-mapping"><span>Request Dispatch Handler</span></a></li>
</ul>
</dd>
<dt>Handlers associated with messaging</dt>
<dd><ul class="first last simple">
<li><a class="reference internal" href="../../handlers/mom_messaging/messaging_context_handler.html#messaging-context-handler"><span>Messaging Context Management Handler</span></a></li>
<li><a class="reference internal" href="../../handlers/mom_messaging/message_reply_handler.html#message-reply-handler"><span>Message Response Control Handler</span></a></li>
<li><a class="reference internal" href="../../handlers/mom_messaging/message_resend_handler.html#message-resend-handler"><span>Resent Message Control Handler</span></a></li>
</ul>
</dd>
<dt>Handlers associated with database</dt>
<dd><ul class="first last simple">
<li><a class="reference internal" href="../../handlers/common/database_connection_management_handler.html#database-connection-management-handler"><span>Database Connection Management Handler</span></a></li>
<li><a class="reference internal" href="../../handlers/common/transaction_management_handler.html#transaction-management-handler"><span>Transaction Control Handler</span></a></li>
</ul>
</dd>
<dt>Error handling handler</dt>
<dd><ul class="first last simple">
<li><a class="reference internal" href="../../handlers/common/global_error_handler.html#global-error-handler"><span>Global Error Handler</span></a></li>
</ul>
</dd>
<dt>Others</dt>
<dd><ul class="first last simple">
<li><a class="reference internal" href="../../handlers/common/thread_context_handler.html#thread-context-handler"><span>Thread Context Variable Management Handler</span></a></li>
<li><a class="reference internal" href="../../handlers/common/thread_context_clear_handler.html#thread-context-clear-handler"><span>Thread Context Variable Delete Handler</span></a></li>
<li><a class="reference internal" href="../../handlers/common/ServiceAvailabilityCheckHandler.html#serviceavailabilitycheckhandler"><span>Service Availability Check Handler</span></a></li>
</ul>
</dd>
</dl>
<div class="section" id="minimum-handler-configuration-for-synchronous-response-messaging">
<span id="mom-messaging-sync-receive-handler-que"></span><h3><a class="toc-backref" href="#id7">5.1.1.4.1. Minimum handler configuration for synchronous response messaging</a><a class="headerlink" href="#minimum-handler-configuration-for-synchronous-response-messaging" title="Permalink to this headline">¶</a></h3>
<p>When building a synchronous response messaging, the minimum required handler queue is as below.
With this as the base, add standard handlers of Nablarch or custom handlers created in the project according to the project requirements.</p>
<table border="1" class="colwidths-given white-space-normal docutils" id="id1">
<caption><span class="caption-text">Minimum handler configuration for synchronous response messaging</span><a class="headerlink" href="#id1" title="Permalink to this table">¶</a></caption>
<colgroup>
<col width="4%" />
<col width="21%" />
<col width="12%" />
<col width="21%" />
<col width="21%" />
<col width="21%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">No.</th>
<th class="head">Handler</th>
<th class="head">Thread</th>
<th class="head">Request process</th>
<th class="head">Response process</th>
<th class="head">Exception handling</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>1</td>
<td><a class="reference internal" href="../../handlers/standalone/status_code_convert_handler.html#status-code-convert-handler"><span>Status Code → Process End Code Conversion Handler</span></a></td>
<td>Main</td>
<td>&nbsp;</td>
<td>Converts the status code to process exit code.</td>
<td>&nbsp;</td>
</tr>
<tr class="row-odd"><td>2</td>
<td><a class="reference internal" href="../../handlers/common/global_error_handler.html#global-error-handler"><span>Global Error Handler</span></a></td>
<td>Main</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>Outputs the log for a runtime exception or error.</td>
</tr>
<tr class="row-even"><td>3</td>
<td><a class="reference internal" href="../../handlers/standalone/multi_thread_execution_handler.html#multi-thread-execution-handler"><span>Multi-thread Execution Control Handler</span></a></td>
<td>Main</td>
<td>Creates a sub-thread and executes the process of the subsequent handler in parallel.</td>
<td>Waits for normal termination of all threads.</td>
<td>Waits for the current thread to complete and rethrows the cause exception.</td>
</tr>
<tr class="row-odd"><td>4</td>
<td><a class="reference internal" href="../../handlers/standalone/retry_handler.html#retry-handler"><span>Retry Handler</span></a></td>
<td>Sub</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>Catches a runtime exception that can be retried, and provided that the retry limit has not been reached, re-executes the subsequent handler.</td>
</tr>
<tr class="row-even"><td>5</td>
<td><a class="reference internal" href="../../handlers/mom_messaging/messaging_context_handler.html#messaging-context-handler"><span>Messaging Context Management Handler</span></a></td>
<td>Sub</td>
<td>Acquires MQ connection.</td>
<td>Releases the MQ connection.</td>
<td>&nbsp;</td>
</tr>
<tr class="row-odd"><td>6</td>
<td><a class="reference internal" href="../../handlers/common/database_connection_management_handler.html#database-connection-management-handler"><span>Database Connection Management Handler</span></a></td>
<td>Sub</td>
<td>Acquires DB connection.</td>
<td>Releases the DB connection.</td>
<td>&nbsp;</td>
</tr>
<tr class="row-even"><td>7</td>
<td><a class="reference internal" href="../../handlers/standalone/request_thread_loop_handler.html#request-thread-loop-handler"><span>Loop Control Handler in Request Thread</span></a></td>
<td>Sub</td>
<td>Executes subsequent handlers repeatedly.</td>
<td>Restores the handler queue contents and continues the loop.</td>
<td>Stops the loop only when there is a process stop request or a fatal error occurs.</td>
</tr>
<tr class="row-odd"><td>8</td>
<td><a class="reference internal" href="../../handlers/common/thread_context_clear_handler.html#thread-context-clear-handler"><span>Thread Context Variable Delete Handler</span></a></td>
<td>Sub</td>
<td>&nbsp;</td>
<td>Deletes all the values configured on the thread local by the <a class="reference internal" href="../../handlers/common/thread_context_handler.html#thread-context-handler"><span>Thread Context Variable Management Handler</span></a> .</td>
<td>&nbsp;</td>
</tr>
<tr class="row-even"><td>9</td>
<td><a class="reference internal" href="../../handlers/common/thread_context_handler.html#thread-context-handler"><span>Thread Context Variable Management Handler</span></a></td>
<td>Sub</td>
<td>Initializes thread context variables such as request ID and user ID from command line arguments.</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>
<tr class="row-odd"><td>10</td>
<td><a class="reference internal" href="../../handlers/standalone/process_stop_handler.html#process-stop-handler"><span>Process Stop Control Handler</span></a></td>
<td>Sub</td>
<td>If the process stop flag of the request table is on, a process stop exception (<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/handler/ProcessStopHandler.ProcessStop.html" title="nablarch.fw.handler.ProcessStopHandler.ProcessStop">ProcessStop</a>) is thrown without performing the subsequent handler process.</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>
<tr class="row-even"><td>11</td>
<td><a class="reference internal" href="../../handlers/mom_messaging/message_reply_handler.html#message-reply-handler"><span>Message Response Control Handler</span></a></td>
<td>Sub</td>
<td>&nbsp;</td>
<td>Creates messages based on the content of response messages returned from the subsequent handlers and sends it to MQ.</td>
<td>Creates messages based on the content of the errors and sends it to MQ.</td>
</tr>
<tr class="row-odd"><td>12</td>
<td><a class="reference internal" href="../../handlers/standalone/data_read_handler.html#data-read-handler"><span>Data Read Handler</span></a></td>
<td>Sub</td>
<td>Use a data reader to read one request message and pass it as an argument of the subsequent handler.
Also, the <a class="reference internal" href="../../libraries/log.html#log-execution-id"><span>execution ID numbered</span></a> is numbered.</td>
<td>&nbsp;</td>
<td>After generating output of the read message as a log, rethrows the original exception.</td>
</tr>
<tr class="row-even"><td>13</td>
<td><a class="reference internal" href="../../handlers/common/request_path_java_package_mapping.html#request-path-java-package-mapping"><span>Request Dispatch Handler</span></a></td>
<td>Sub</td>
<td>Determines the action to call based on the request ID included in request messages.</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>
<tr class="row-odd"><td>14</td>
<td><a class="reference internal" href="../../handlers/common/transaction_management_handler.html#transaction-management-handler"><span>Transaction Control Handler</span></a></td>
<td>Sub</td>
<td>Begin a transaction</td>
<td>Commits the transaction.</td>
<td>Rolls back a transaction.</td>
</tr>
</tbody>
</table>
</div>
<div class="section" id="minimum-handler-configuration-for-asynchronous-response-messaging">
<span id="mom-messaging-async-receive-handler-que"></span><h3><a class="toc-backref" href="#id8">5.1.1.4.2. Minimum handler configuration for asynchronous response messaging</a><a class="headerlink" href="#minimum-handler-configuration-for-asynchronous-response-messaging" title="Permalink to this headline">¶</a></h3>
<p>When building a asynchronous response messaging, the minimum required handler queue is as below.
With this as the base, add standard handlers of Nablarch or custom handlers created in the project according to the project requirements.</p>
<p>The minimum handler configuration for asynchronous response messaging is the same as synchronous response messaging, except for the following handlers.</p>
<ul class="simple">
<li><a class="reference internal" href="../../handlers/mom_messaging/message_reply_handler.html#message-reply-handler"><span>Message Response Control Handler</span></a></li>
<li><a class="reference internal" href="../../handlers/mom_messaging/message_resend_handler.html#message-resend-handler"><span>Resent Message Control Handler</span></a></li>
</ul>
<div class="admonition important">
<p class="first admonition-title">Important</p>
<p>An error response cannot be sent if the storage of messages fails in asynchronous response messaging.
Hence, the message is returned to the queue temporarily and retried until the predetermined number of times is reached.
For this reason, the registration process for the DB and queue operation must be handled as one transaction (two-phase commit control).
Specifically, change the configuration of <a class="reference internal" href="../../handlers/common/transaction_management_handler.html#transaction-management-handler"><span>Transaction Control Handler</span></a> and replace with implementation that supports two-phase commit.</p>
<p class="last">Nablarch provides an adapter for two-phase commit using WebSphere MQ.
For details, see <a class="reference internal" href="../../../adaptors/webspheremq_adaptor.html#webspheremq-adaptor"><span>IBM WebSphere MQ Adapter</span></a> .</p>
</div>
<table border="1" class="colwidths-given white-space-normal docutils" id="id2">
<caption><span class="caption-text">Minimum handler configuration for asynchronous response messaging</span><a class="headerlink" href="#id2" title="Permalink to this table">¶</a></caption>
<colgroup>
<col width="4%" />
<col width="21%" />
<col width="12%" />
<col width="21%" />
<col width="21%" />
<col width="21%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">No.</th>
<th class="head">Handler</th>
<th class="head">Thread</th>
<th class="head">Request process</th>
<th class="head">Response process</th>
<th class="head">Exception handling</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>1</td>
<td><a class="reference internal" href="../../handlers/standalone/status_code_convert_handler.html#status-code-convert-handler"><span>Status Code → Process End Code Conversion Handler</span></a></td>
<td>Main</td>
<td>&nbsp;</td>
<td>Converts the status code to process exit code.</td>
<td>&nbsp;</td>
</tr>
<tr class="row-odd"><td>2</td>
<td><a class="reference internal" href="../../handlers/common/global_error_handler.html#global-error-handler"><span>Global Error Handler</span></a></td>
<td>Main</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>Outputs the log for a runtime exception or error.</td>
</tr>
<tr class="row-even"><td>3</td>
<td><a class="reference internal" href="../../handlers/standalone/multi_thread_execution_handler.html#multi-thread-execution-handler"><span>Multi-thread Execution Control Handler</span></a></td>
<td>Main</td>
<td>Creates a sub-thread and executes the process of the subsequent handler in parallel.</td>
<td>Waits for normal termination of all threads.</td>
<td>Waits for the current thread to complete and rethrows the cause exception.</td>
</tr>
<tr class="row-odd"><td>4</td>
<td><a class="reference internal" href="../../handlers/standalone/retry_handler.html#retry-handler"><span>Retry Handler</span></a></td>
<td>Sub</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>Catches a runtime exception that can be retried, and provided that the retry limit has not been reached, re-executes the subsequent handler.</td>
</tr>
<tr class="row-even"><td>5</td>
<td><a class="reference internal" href="../../handlers/mom_messaging/messaging_context_handler.html#messaging-context-handler"><span>Messaging Context Management Handler</span></a></td>
<td>Sub</td>
<td>Acquires MQ connection.</td>
<td>Releases the MQ connection.</td>
<td>&nbsp;</td>
</tr>
<tr class="row-odd"><td>6</td>
<td><a class="reference internal" href="../../handlers/common/database_connection_management_handler.html#database-connection-management-handler"><span>Database Connection Management Handler</span></a></td>
<td>Sub</td>
<td>Acquires DB connection.</td>
<td>Releases the DB connection.</td>
<td>&nbsp;</td>
</tr>
<tr class="row-even"><td>7</td>
<td><a class="reference internal" href="../../handlers/standalone/request_thread_loop_handler.html#request-thread-loop-handler"><span>Loop Control Handler in Request Thread</span></a></td>
<td>Sub</td>
<td>Executes subsequent handlers repeatedly.</td>
<td>Restores the handler queue contents and continues the loop.</td>
<td>Stops the loop only when there is a process stop request or a fatal error occurs.</td>
</tr>
<tr class="row-odd"><td>8</td>
<td><a class="reference internal" href="../../handlers/common/thread_context_clear_handler.html#thread-context-clear-handler"><span>Thread Context Variable Delete Handler</span></a></td>
<td>Sub</td>
<td>&nbsp;</td>
<td>Deletes all the values configured on the thread local by the <a class="reference internal" href="../../handlers/common/thread_context_handler.html#thread-context-handler"><span>Thread Context Variable Management Handler</span></a> .</td>
<td>&nbsp;</td>
</tr>
<tr class="row-even"><td>9</td>
<td><a class="reference internal" href="../../handlers/common/thread_context_handler.html#thread-context-handler"><span>Thread Context Variable Management Handler</span></a></td>
<td>Sub</td>
<td>Initializes thread context variables such as request ID and user ID from command line arguments.</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>
<tr class="row-odd"><td>10</td>
<td><a class="reference internal" href="../../handlers/standalone/process_stop_handler.html#process-stop-handler"><span>Process Stop Control Handler</span></a></td>
<td>Sub</td>
<td>If the process stop flag of the request table is on, a process stop exception (<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/handler/ProcessStopHandler.ProcessStop.html" title="nablarch.fw.handler.ProcessStopHandler.ProcessStop">ProcessStop</a>) is thrown without performing the subsequent handler process.</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>
<tr class="row-even"><td>11</td>
<td><a class="reference internal" href="../../handlers/common/transaction_management_handler.html#transaction-management-handler"><span>Transaction Control Handler</span></a></td>
<td>Sub</td>
<td>Begin a transaction</td>
<td>Commits the transaction.</td>
<td>Rolls back a transaction.</td>
</tr>
<tr class="row-odd"><td>12</td>
<td><a class="reference internal" href="../../handlers/standalone/data_read_handler.html#data-read-handler"><span>Data Read Handler</span></a></td>
<td>Sub</td>
<td>Use a data reader to read one request message and pass it as an argument of the subsequent handler.
Also, the <a class="reference internal" href="../../libraries/log.html#log-execution-id"><span>execution ID numbered</span></a> is numbered.</td>
<td>&nbsp;</td>
<td>After generating output of the read message as a log, rethrows the original exception.</td>
</tr>
<tr class="row-even"><td>13</td>
<td><a class="reference internal" href="../../handlers/common/request_path_java_package_mapping.html#request-path-java-package-mapping"><span>Request Dispatch Handler</span></a></td>
<td>Sub</td>
<td>Determines the action to call based on the request ID included in request messages.</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="section" id="data-readers-used-in-mom-messaging">
<span id="mom-messaging-data-reader"></span><h2><a class="toc-backref" href="#id9">5.1.1.5. Data readers used in MOM messaging</a><a class="headerlink" href="#data-readers-used-in-mom-messaging" title="Permalink to this headline">¶</a></h2>
<p>Nablarch provides several data readers as standard, which are required for building MOM messaging.
For details of each data reader, refer to the respective links.</p>
<ul class="simple">
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/reader/FwHeaderReader.html" title="nablarch.fw.messaging.reader.FwHeaderReader">FwHeaderReader (reads the framework control header from the message)</a></li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/reader/MessageReader.html" title="nablarch.fw.messaging.reader.MessageReader">MessageReader (reads messages from MQ)</a></li>
</ul>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">If the above data readers cannot meet the project requirements, create a class that implements the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/DataReader.html" title="nablarch.fw.DataReader">DataReader</a> interface in the project.</p>
</div>
</div>
<div class="section" id="action-used-in-mom-messaging">
<span id="mom-messaging-action"></span><h2><a class="toc-backref" href="#id10">5.1.1.6. Action used in MOM messaging</a><a class="headerlink" href="#action-used-in-mom-messaging" title="Permalink to this headline">¶</a></h2>
<p>Nablarch provides several action classes as standard, which are required for building MOM messaging.
For details of each action class, refer to the respective links.</p>
<ul class="simple">
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/MessagingAction.html" title="nablarch.fw.messaging.action.MessagingAction">MessagingAction (Template class for actions for synchronous response messaging)</a></li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/messaging/action/AsyncMessageReceiveAction.html" title="nablarch.fw.messaging.action.AsyncMessageReceiveAction">AsyncMessageReceiveAction (Template class for actions for asynchronous response messaging)</a></li>
</ul>
</div>
</div>


           </div>
           <div class="articleComments">
            
           </div>
          </div>
          <footer>

    <hr/>

    <div role="contentinfo">
        <p>
            &copy; Copyright 2010-2021, TIS Inc.
        </p>
    </div>
    Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org">Read the Docs</a>.

</footer>

        </div>
      </div>

    </section>

  </div>
  


  

    <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'../../../../',
            VERSION:'5u19',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true,
            SOURCELINK_SUFFIX: ''
        };
    </script>
      <script type="text/javascript" src="../../../../_static/jquery.js"></script>
      <script type="text/javascript" src="../../../../_static/underscore.js"></script>
      <script type="text/javascript" src="../../../../_static/doctools.js"></script>
      <script type="text/javascript" src="../../../../_static/custom.js"></script>

  

  
  
    <script type="text/javascript" src="../../../../_static/js/theme.js"></script>
  

  
  
  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>
   

</body>
</html>