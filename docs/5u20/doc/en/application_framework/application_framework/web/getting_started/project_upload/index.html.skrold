


<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->
<head>
  <meta charset="utf-8">
  <meta http-equiv='content-language' content='ja'>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>2.3.5. Create a Batch registration Function Using Upload &mdash; ∇Nablarch  5u19 documentation</title>
  

  
  
  
  

  

  
  
    

  

  
  
    <link rel="stylesheet" href="../../../../../_static/custom.css" type="text/css" />
  

  

  
  <link rel="canonical" href="https://nablarch.github.io/docs/LATEST/doc/application_framework/application_framework/web/getting_started/project_upload/index.html" />
  
    <link rel="top" title="∇Nablarch  5u19 documentation" href="../../../../../index.html"/>
        <link rel="up" title="2.3. Getting Started" href="../index.html"/>
        <link rel="next" title="2.3.6. Create a File Download Function" href="../project_download/index.html"/>
        <link rel="prev" title="2.3.4. Create a Delete Function" href="../project_delete/index.html"/>
 

  
  <script src="../../../../../_static/js/modernizr.min.js"></script>

</head>

<body class="wy-body-for-nav" role="document">

   
  <div class="wy-grid-for-nav">

    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search">
          
  
  <a href="../../../../../index.html" id="sidebar-title" class="icon"> ∇Nablarch 
  

  
    <div id="sidebar-version">Version: 5u19</div>
  </a>

  <div role="search">
    <form id="google-search-form" class="wy-form" method="get" action="https://www.google.co.jp/search">
      <input type="text" name="text" placeholder="Search docs on google" id="text"/>
      <input type="hidden" name="q" id="q"/>
    </form>
  </div>
    
    

        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
  
  
    <ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../../../../about_nablarch/index.html">What is the Nablarch?</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../../about_nablarch/concept.html">Nablarch Concept</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../about_nablarch/concept.html#robustness">Robustness</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../about_nablarch/concept.html#testability">Testability</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../about_nablarch/concept.html#ready-to-use">Ready-to-Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../about_nablarch/mvn_module.html">Module List of Nablarch</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../about_nablarch/license.html">Information on Nablarch License</a></li>
</ul>
</li>
<li class="toctree-l1 current"><a class="reference internal" href="../../../../index.html">Nablarch Application Framework</a><ul class="current">
<li class="toctree-l2 current"><a class="reference internal" href="../../../index.html">Application Framework</a><ul class="current">
<li class="toctree-l3"><a class="reference internal" href="../../../nablarch/index.html">1. What is Nablarch Application Framework?</a></li>
<li class="toctree-l3 current"><a class="reference internal" href="../../index.html">2. Web Application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../web_service/index.html">3. Web Service</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../batch/index.html">4. Batch Application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../messaging/index.html">5. Messaging</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../handlers/index.html">6. Standard Handler Provided by Nablarch</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../libraries/index.html">7. Libraries Provided by Nablarch</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../blank_project/index.html">8. Blank Project</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../setting_guide/index.html">9. Nablarch Application Framework Configuration Guide</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../configuration/index.html">10. Default Configuration List</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../cloud_native/index.html">11. Nablarch Cloud Native Support</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../adaptors/index.html">Adaptor</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/log_adaptor.html">log Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/router_adaptor.html">Routing Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/webspheremq_adaptor.html">IBM WebSphere MQ Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/jaxrs_adaptor.html">JAX-RS Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/doma_adaptor.html">Doma Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/jsr310_adaptor.html">JSR310(Date and Time API)Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/mail_sender_freemarker_adaptor.html">E-mail FreeMarker Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/mail_sender_thymeleaf_adaptor.html">E-mail Thymeleaf Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/mail_sender_velocity_adaptor.html">E-mail Velocity Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/web_thymeleaf_adaptor.html">Web Application Thymeleaf Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/lettuce_adaptor.html">Lettuce Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/slf4j_adaptor.html">SLF4J Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../adaptors/micrometer_adaptor.html">Micrometer Adapter</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../example/index.html">Example</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../example/index.html#procedure-to-build-the-environment">Procedure to build the environment</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../example/index.html#application-execution-procedure">Application execution procedure</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../../extension_components/index.html">Nablarch extension component</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../../extension_components/report/index.html">1. Form library</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../extension_components/workflow/doc/index.html">2. Workflow library</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../extension_components/workflow/tool/index.html">3. Workflow definition data generation tool</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../extension_components/etl/index.html">4. ETL</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../extension_components/etl/etl_maven_plugin.html">5. ETL Maven plugin</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../../development_tools/index.html">Nablarch development tools</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../../development_tools/java_static_analysis/index.html">1. Efficient Java Static Checks</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/java_static_analysis/index.html#conduct-syntax-check">1.1. Conduct syntax check</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/java_static_analysis/index.html#unify-the-format">1.2. Unify the format</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/java_static_analysis/index.html#check-if-unauthorized-apis-are-being-used">1.3. Check if unauthorized APIs are being used</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../development_tools/ui_dev/index.html">2. Front-end UI development platform for advanced users</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../development_tools/testing_framework/index.html">3. Testing framework</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/testing_framework/guide/development_guide/05_UnitTestGuide/index.html">3.1. How to Execute Unit Tests</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/testing_framework/guide/development_guide/06_TestFWGuide/index.html">3.2. How to Use the Automated Test Framework</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/testing_framework/guide/development_guide/08_TestTools/index.html">3.3. Tools Used in the Programming Phase</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../development_tools/toolbox/index.html">4. Useful Tools When Developing Applications</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/toolbox/JspStaticAnalysis/index.html">4.1. JSP Static Analysis Tool</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/toolbox/SqlExecutor/SqlExecutor.html">4.2. Nablarch SQL Executor</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../development_tools/toolbox/JspVerifier/JspVerifier.html">4.3. Job Screen JSP Validation Tool</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../../examples/index.html">Nablarch Implementation Examples</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/01/index.html">Sample Password Encryption Function Using Database</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/01/0101_PBKDF2PasswordEncryptor.html">Sample Password Encryption Function Using PBKDF2</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/01/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/01/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/01/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/01/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/02/index.html">Extended Validation Functions</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/02/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/02/index.html#email-address-validation">Email address validation</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/02/index.html#validation-of-japan-telephone-numbers">Validation of Japan telephone numbers</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/02/index.html#code-value-validation">Code value validation</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/03/index.html">Display a List of Search Results</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#how-to-use">How to Use</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#listsearchinfo-class">ListSearchInfo class</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#listsearchresult-tag">listSearchResult tag</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#sort-search-results">Sort search results</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#how-to-implement-displaying-a-list-of-all-search-results-on-a-single-screen">How to implement displaying a list of all search results on a single screen</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#how-to-implement-the-initial-display-of-search-results-with-the-default-search-conditions">How to implement the initial display of search results with the default search conditions</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#default-settings-for-the-search-result-list-display-function">Default settings for the search result list display function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#how-to-import-a-sample-implementation-tag-file-into-the-business-application">How to import a sample implementation (tag file) into the business application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/03/index.html#tag-reference">Tag Reference</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/04/index.html">Extended Formatter Functions</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/04/0401_ExtendedDataFormatter.html">Data Formatter Expansion</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/04/0402_ExtendedFieldType.html">Field Type Expansion in the Data Formatter Function</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/05/index.html">Sample File Management Function Using Database</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/05/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/05/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/05/index.html#functions">Functions</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/05/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/05/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/06/index.html">CAPTCHA Function Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/06/06_Captcha_guide.html">How to Incorporate the CAPTCHA Function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/06/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/06/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/06/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/06/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/07/index.html">Sample UserAgent Information Acquisition Function</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/07/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/07/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/07/index.html#description-of-configuration">Description of configuration</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/07/index.html#use-case">Use case</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/08/index.html">Sample of HTML Email Send Function</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/08/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/08/index.html#request">Request</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/08/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/08/index.html#implementation-examples">Implementation examples</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/09/index.html">How to Use a Sample to Send a Digitally Signed Email Using Bouncycastle</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/09/index.html#environment-preparation">Environment preparation</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/09/index.html#structure-of-digitally-signed-email-send-function">Structure of digitally signed email send function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/09/index.html#preparation-of-configuration-file">Preparation of configuration file</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/09/index.html#execution">Execution</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/10/index.html">How to Use the Log Aggregation Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/10/index.html#list-of-samples-provided">List of samples provided</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../examples/11/index.html">Messaging Platform Test Simulator Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/11/index.html#uses">Uses</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/11/index.html#features">Features</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/11/index.html#request">Request</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/11/index.html#how-to-use">How to use</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../examples/11/index.html#expansion-example">Expansion example</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../../nablarch_api/index.html">Nablarch API</a></li>
</ul>

  

        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" role="navigation" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../../../../../index.html">∇Nablarch </a>
        
      </nav>


      
      <div class="wy-nav-content">
        <div class="rst-content">
          

 



<div role="navigation" aria-label="breadcrumbs navigation">
  <ul class="wy-breadcrumbs">
    <li><a href="../../../../../index.html">Docs</a> &raquo;</li>
      
          <li><a href="../../../../index.html">Nablarch Application Framework</a> &raquo;</li>
      
          <li><a href="../../../index.html">Application Framework</a> &raquo;</li>
      
          <li><a href="../../index.html">2. Web Application</a> &raquo;</li>
      
          <li><a href="../index.html">2.3. Getting Started</a> &raquo;</li>
      
    <li>2.3.5. Create a Batch registration Function Using Upload</li>
    <li class="wy-breadcrumbs-aside">
      <a href="https://github.com/nablarch" class="fa fa-github">GitHub</a>
    </li>
    <li class="wy-breadcrumbs-aside">
        <a href="https://nablarch.github.io/docs/LATEST/doc/index.html" class="ja">日本語</a>
    </li>
  </ul>
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  <div class="section" id="create-a-batch-registration-function-using-upload">
<span id="project-upload"></span><h1>2.3.5. Create a Batch registration Function Using Upload<a class="headerlink" href="#create-a-batch-registration-function-using-upload" title="Permalink to this headline">¶</a></h1>
<p>This section describes the function to upload a CSV file for batch registration based on an example application.</p>
<dl class="docutils">
<dt>Description of the function to be created</dt>
<dd><ol class="first arabic simple">
<li>Click &#8220;Project batch registration (プロジェクト一括登録)&#8221; in the header menu.</li>
</ol>
<blockquote>
<div><a class="reference internal image-reference" href="../../../../../_images/project_upload-link.png"><img alt="../../../../../_images/project_upload-link.png" src="../../../../../_images/project_upload-link.png" /></a>
</div></blockquote>
<ol class="arabic" start="2">
<li><p class="first">Download the batch registration sample file which generates the validation error from below</p>
<p><a class="reference download internal" href="../../../../../_downloads/batch_project_registration_validation_error.csv" download=""><code class="xref download docutils literal"><span class="pre">batch_project_registration_validation_error.csv</span></code></a> (プロジェクト一括登録_バリデーションエラー.csv)</p>
</li>
<li><p class="first">Upload the sample file and click the &#8220;Register(登録)&#8221; button.</p>
</li>
</ol>
<blockquote>
<div><a class="reference internal image-reference" href="../../../../../_images/project_upload-invalid_upload.png"><img alt="../../../../../_images/project_upload-invalid_upload.png" src="../../../../../_images/project_upload-invalid_upload.png" /></a>
</div></blockquote>
<ol class="arabic simple" start="3">
<li>Validation error occurs.</li>
</ol>
<blockquote>
<div><a class="reference internal image-reference" href="../../../../../_images/project_upload-validate.png"><img alt="../../../../../_images/project_upload-validate.png" src="../../../../../_images/project_upload-validate.png" /></a>
</div></blockquote>
<ol class="arabic simple" start="4">
<li>Download the batch registration sample file which does not generate validation error from below</li>
</ol>
<blockquote>
<div><a class="reference download internal" href="../../../../../_downloads/project_batch_registration.csv" download=""><code class="xref download docutils literal"><span class="pre">project_batch_registration.csv</span></code></a> (プロジェクト一括登録.csv)</div></blockquote>
<ol class="arabic simple" start="5">
<li>Upload the sample file and click the &#8220;Register(登録)&#8221; button.</li>
</ol>
<blockquote>
<div><a class="reference internal image-reference" href="../../../../../_images/project_upload-valid_upload.png"><img alt="../../../../../_images/project_upload-valid_upload.png" src="../../../../../_images/project_upload-valid_upload.png" /></a>
</div></blockquote>
<ol class="arabic simple" start="6">
<li>The contents of the file are registered in the database and the completion message is displayed.</li>
</ol>
<blockquote class="last">
<div><a class="reference internal image-reference" href="../../../../../_images/project_upload-complete.png"><img alt="../../../../../_images/project_upload-complete.png" src="../../../../../_images/project_upload-complete.png" /></a>
</div></blockquote>
</dd>
</dl>
<div class="section" id="overview-of-the-business-action-method-to-be-created">
<h2>2.3.5.1. Overview of the business action method to be created<a class="headerlink" href="#overview-of-the-business-action-method-to-be-created" title="Permalink to this headline">¶</a></h2>
<blockquote>
<div><blockquote>
<div><dl class="docutils">
<dt>ProjectUploadAction.java</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="nd">@OnDoubleSubmission</span>
<span class="nd">@OnError</span><span class="o">(</span><span class="n">type</span> <span class="o">=</span> <span class="n">ApplicationException</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">path</span> <span class="o">=</span> <span class="s">&quot;/WEB-INF/view/projectUpload/create.jsp&quot;</span><span class="o">)</span>
<span class="kd">public</span> <span class="n">HttpResponse</span> <span class="nf">upload</span><span class="o">(</span><span class="n">HttpRequest</span> <span class="n">request</span><span class="o">,</span> <span class="n">ExecutionContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>

    <span class="c1">// Acquire upload file</span>
    <span class="n">List</span><span class="o">&lt;</span><span class="n">PartInfo</span><span class="o">&gt;</span> <span class="n">partInfoList</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getPart</span><span class="o">(</span><span class="s">&quot;uploadFile&quot;</span><span class="o">);</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">partInfoList</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
        <span class="k">throw</span> <span class="k">new</span> <span class="n">ApplicationException</span><span class="o">(</span>
                <span class="n">MessageUtil</span><span class="o">.</span><span class="na">createMessage</span><span class="o">(</span><span class="n">MessageLevel</span><span class="o">.</span><span class="na">ERROR</span><span class="o">,</span> <span class="s">&quot;errors.upload&quot;</span><span class="o">));</span>
    <span class="o">}</span>
    <span class="n">PartInfo</span> <span class="n">partInfo</span> <span class="o">=</span> <span class="n">partInfoList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>

    <span class="n">LoginUserPrincipal</span> <span class="n">userContext</span> <span class="o">=</span> <span class="n">SessionUtil</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="s">&quot;userContext&quot;</span><span class="o">);</span>

    <span class="c1">// Loading and validation of upload files</span>
    <span class="n">List</span><span class="o">&lt;</span><span class="n">Project</span><span class="o">&gt;</span> <span class="n">projects</span> <span class="o">=</span> <span class="n">readFileAndValidate</span><span class="o">(</span><span class="n">partInfo</span><span class="o">,</span> <span class="n">userContext</span><span class="o">);</span>

    <span class="c1">// Batch registration to DB</span>
    <span class="n">insertProjects</span><span class="o">(</span><span class="n">projects</span><span class="o">);</span>

    <span class="c1">// Add a completion message</span>
    <span class="n">context</span><span class="o">.</span><span class="na">setRequestScopedVar</span><span class="o">(</span><span class="s">&quot;uploadProjectSize&quot;</span><span class="o">,</span> <span class="n">projects</span><span class="o">.</span><span class="na">size</span><span class="o">());</span>

    <span class="c1">// Saving a file</span>
    <span class="n">saveFile</span><span class="o">(</span><span class="n">partInfo</span><span class="o">);</span>

    <span class="k">return</span> <span class="k">new</span> <span class="n">HttpResponse</span><span class="o">(</span><span class="s">&quot;/WEB-INF/view/projectUpload/create.jsp&quot;</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
</dl>
</div></blockquote>
<p>The processing flow of the business action method is as follows.</p>
<ol class="arabic simple">
<li><a class="reference internal" href="#project-upload-file-upload-action"><span>Acquire a file</span></a></li>
<li><a class="reference internal" href="#project-upload-validation"><span>Validate the contents of the CSV file by binding to Bean</span></a></li>
<li><a class="reference internal" href="#project-upload-bulk-insert"><span>Batch registration to DB</span></a></li>
<li><a class="reference internal" href="#project-upload-file-upload-action"><span>Saving a file</span></a></li>
</ol>
<p>The details of each process is described under
<a class="reference internal" href="#project-upload-file-upload-impl"><span>Implementation of the file upload function</span></a> and
<a class="reference internal" href="#project-upload-bulk-insert-impl"><span>Implementation of the batch registration function</span></a>.</p>
</div></blockquote>
</div>
<div class="section" id="implementation-of-the-file-upload-function">
<span id="project-upload-file-upload-impl"></span><h2>2.3.5.2. Implementation of the file upload function<a class="headerlink" href="#implementation-of-the-file-upload-function" title="Permalink to this headline">¶</a></h2>
<p>First, how to create the upload part of the batch registration function using upload is explained</p>
<blockquote>
<div><ol class="arabic simple">
<li><a class="reference internal" href="#project-upload-upload-jsp"><span>Create a file upload screen</span></a></li>
<li><a class="reference internal" href="#project-upload-file-upload-action"><span>Create a business action method to acquire and save a file</span></a></li>
</ol>
<dl class="docutils" id="project-upload-upload-jsp">
<dt>Create a file upload screen</dt>
<dd><p class="first">Create a screen with a file upload field.</p>
<dl class="last docutils">
<dt>/src/main/webapp/WEB-INF/view/projectUpload/create.jsp</dt>
<dd><div class="first last highlight-jsp"><div class="highlight"><pre><span></span><span class="nt">&lt;n:form</span> <span class="na">useToken=</span><span class="s">&quot;true&quot;</span> <span class="na">enctype=</span><span class="s">&quot;multipart/form-data&quot;</span><span class="nt">&gt;</span>
    <span class="c">&lt;!-- Omitted --&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;message-area margin-top&quot;</span><span class="nt">&gt;</span>
        <span class="c">&lt;!-- Completion message display part --&gt;</span>
        <span class="nt">&lt;c:if</span> <span class="na">test=</span><span class="s">&quot;${not empty uploadProjectSize}&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;ul&gt;&lt;li</span> <span class="na">class=</span><span class="s">&quot;message-info&quot;</span><span class="nt">&gt;&lt;n:message</span> <span class="na">messageId=</span><span class="s">&quot;success.upload.project&quot;</span> <span class="na">option0=</span><span class="s">&quot;${uploadProjectSize}&quot;</span> <span class="nt">/&gt;&lt;/li&gt;&lt;/ul&gt;</span>
        <span class="nt">&lt;/c:if&gt;</span>
        <span class="c">&lt;!-- Error message display part --&gt;</span>
        <span class="nt">&lt;n:errors</span> <span class="na">errorCss=</span><span class="s">&quot;message-error&quot;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    <span class="c">&lt;!-- Omitted --&gt;</span>
    <span class="nt">&lt;h4</span> <span class="na">class=</span><span class="s">&quot;font-group&quot;</span><span class="nt">&gt;</span>Project information file selection<span class="nt">&lt;/h4&gt;</span>
    <span class="nt">&lt;table</span> <span class="na">class=</span><span class="s">&quot;table&quot;</span><span class="nt">&gt;</span>
        <span class="c">&lt;!--  Description of screen design is omitted --&gt;</span>
        <span class="nt">&lt;tbody&gt;</span>
            <span class="nt">&lt;tr&gt;</span>
                <span class="nt">&lt;th</span> <span class="na">class=</span><span class="s">&quot;item-norequired&quot;</span> <span class="na">colspan=</span><span class="s">&quot;2&quot;</span><span class="nt">&gt;</span>Project information file selection<span class="nt">&lt;/th&gt;</span>
            <span class="nt">&lt;/tr&gt;</span>
            <span class="nt">&lt;tr&gt;</span>
                <span class="nt">&lt;th</span> <span class="na">class=</span><span class="s">&quot;width-250 required&quot;</span><span class="nt">&gt;</span>Project information file<span class="nt">&lt;/th&gt;</span>
                <span class="nt">&lt;td</span> <span class="nt">&gt;</span>
                    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;form-group is-fileinput&quot;</span><span class="nt">&gt;</span>
                        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;input-group&quot;</span><span class="nt">&gt;</span>
                            <span class="nt">&lt;n:file</span> <span class="na">name=</span><span class="s">&quot;uploadFile&quot;</span> <span class="na">id=</span><span class="s">&quot;uploadFile&quot;</span><span class="nt">/&gt;</span>
                            <span class="c">&lt;!--  Description of screen design is omitted --&gt;</span>
                        <span class="nt">&lt;/div&gt;</span>
                    <span class="nt">&lt;/div&gt;</span>
                <span class="nt">&lt;/td&gt;</span>
            <span class="nt">&lt;/tr&gt;</span>
        <span class="nt">&lt;/tbody&gt;</span>
    <span class="nt">&lt;/table&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;title-nav&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;button-nav&quot;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;n:button</span> <span class="na">uri=</span><span class="s">&quot;/action/projectUpload/upload&quot;</span>
                      <span class="na">allowDoubleSubmission=</span><span class="s">&quot;false&quot;</span>
                      <span class="na">cssClass=</span><span class="s">&quot;btn btn-raised btn-default&quot;</span><span class="nt">&gt;</span>Registration<span class="nt">&lt;/n:button&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/n:form&gt;</span>
</pre></div>
</div>
</dd>
<dt>Key points of this implementation</dt>
<dd><ul class="first last simple">
<li>Specify <cite>multipart/form-data</cite> as <cite>enctype</cite> attribute of <a class="reference internal" href="../../../libraries/tag/tag_reference.html#tag-form-tag"><span>form tag</span></a> to send multipart file.</li>
<li>Create a file upload field using <a class="reference internal" href="../../../libraries/tag/tag_reference.html#tag-file-tag"><span>file tag</span></a>. Specify the registration name of the request object in the <cite>name</cite> attribute.
To acquire the file in a business action, specify this registration name as an argument of
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/HttpRequest.html#getPart-java.lang.String-" title="nablarch.fw.web.HttpRequest.getPart(java.lang.String)">HttpRequest#getPart</a></li>
<li>Display upload completed message with <a class="reference internal" href="../../../libraries/tag/tag_reference.html#tag-message-tag"><span>message tag</span></a>, once the upload is completed.
In order to include the number of uploads in the completion message, specify the number of uploads configured in the request scope in <cite>option0</cite> attribute.</li>
<li>Use <a class="reference internal" href="../../../libraries/tag/tag_reference.html#tag-errors-tag"><span>errors tag</span></a> to create an area to display the list of validation error messages for the target file.
For the output format of the error message list, refer to <a class="reference internal" href="../../../libraries/tag.html#tag-write-error-errors-tag"><span>error message list</span></a>.</li>
</ul>
</dd>
</dl>
</dd>
</dl>
<dl class="docutils" id="project-upload-file-upload-action">
<dt>Create a business action method</dt>
<dd><p class="first">Describes how to get and save a file in the business action method.</p>
<dl class="last docutils">
<dt>ProjectUploadAction.java</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="n">HttpResponse</span> <span class="nf">upload</span><span class="o">(</span><span class="n">HttpRequest</span> <span class="n">request</span><span class="o">,</span> <span class="n">ExecutionContext</span> <span class="n">context</span><span class="o">)</span>
        <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>

    <span class="n">List</span><span class="o">&lt;</span><span class="n">PartInfo</span><span class="o">&gt;</span> <span class="n">partInfoList</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getPart</span><span class="o">(</span><span class="s">&quot;uploadFile&quot;</span><span class="o">);</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">partInfoList</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
        <span class="k">throw</span> <span class="k">new</span> <span class="n">ApplicationException</span><span class="o">(</span><span class="n">MessageUtil</span><span class="o">.</span><span class="na">createMessage</span><span class="o">(</span><span class="n">MessageLevel</span><span class="o">.</span><span class="na">ERROR</span><span class="o">,</span>
                 <span class="s">&quot;errors.upload&quot;</span><span class="o">));</span>
    <span class="o">}</span>
    <span class="n">PartInfo</span> <span class="n">partInfo</span> <span class="o">=</span> <span class="n">partInfoList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>

    <span class="c1">// Batch registration process is omitted as it will be described later</span>

    <span class="c1">// Saving a file</span>
    <span class="n">saveFile</span><span class="o">(</span><span class="n">partInfo</span><span class="o">);</span>

    <span class="k">return</span> <span class="k">new</span> <span class="n">HttpResponse</span><span class="o">(</span><span class="s">&quot;/WEB-INF/view/projectUpload/create.jsp&quot;</span><span class="o">);</span>
<span class="o">}</span>

<span class="cm">/**</span>
<span class="cm"> * Save a file</span>
<span class="cm"> *</span>
<span class="cm"> * @param partInfo Upload file information</span>
<span class="cm"> */</span>
<span class="kd">private</span> <span class="kt">void</span> <span class="nf">saveFile</span><span class="o">(</span><span class="kd">final</span> <span class="n">PartInfo</span> <span class="n">partInfo</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">String</span> <span class="n">fileName</span> <span class="o">=</span> <span class="n">generateUniqueFileName</span><span class="o">(</span><span class="n">partInfo</span><span class="o">.</span><span class="na">getFileName</span><span class="o">());</span>
    <span class="n">UploadHelper</span> <span class="n">helper</span> <span class="o">=</span> <span class="k">new</span> <span class="n">UploadHelper</span><span class="o">(</span><span class="n">partInfo</span><span class="o">);</span>
    <span class="n">helper</span><span class="o">.</span><span class="na">moveFileTo</span><span class="o">(</span><span class="s">&quot;uploadFiles&quot;</span><span class="o">,</span> <span class="n">fileName</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
<dt>Key points of this implementation</dt>
<dd><ul class="first last">
<li><p class="first">Acquire the file <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/HttpRequest.html#getPart-java.lang.String-" title="nablarch.fw.web.HttpRequest.getPart(java.lang.String)">HttpRequest#getPart</a>.</p>
</li>
<li><p class="first">When the file does not exist (not uploaded), then the size of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/upload/PartInfo.html" title="nablarch.fw.web.upload.PartInfo">PartInfo</a> list that is acquired will be zero.
This value is used to perform control such as throwing a business exception.</p>
</li>
<li><p class="first">The uploaded file is stored in a temporary area by the <a class="reference internal" href="../../../handlers/web/multipart_handler.html#multipart-handler"><span>multipart request handler</span></a>.
Since the temporary area is automatically deleted, if you need to permanently (save) an uploaded file, move the file to an arbitrary directory.
However, file transfers are possible only when the <a class="reference internal" href="../../../libraries/file_path_management.html#file-path-management"><span>file path management</span></a> is used to manage the input and output of files and directories.</p>
</li>
<li><p class="first">Use <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/web/upload/util/UploadHelper.html#moveFileTo-java.lang.String-java.lang.String-" title="nablarch.fw.web.upload.util.UploadHelper.moveFileTo(java.lang.String-java.lang.String)">UploadHelper#moveFileTo</a> method to transfer files.
The first argument is the key name of the file storage directory registered in the configuration file.
In the Example Application, the configuration is described in the following file.</p>
<dl class="docutils">
<dt>filepath-for-webui.xml</dt>
<dd><div class="first last highlight-xml"><div class="highlight"><pre><span></span><span class="c">&lt;!-- File path definition --&gt;</span>
<span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;filePathSetting&quot;</span>
        <span class="na">class=</span><span class="s">&quot;nablarch.core.util.FilePathSetting&quot;</span> <span class="na">autowireType=</span><span class="s">&quot;None&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;basePathSettings&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;map&gt;</span>
      <span class="c">&lt;!--Omitted --&gt;</span>
      <span class="c">&lt;!-- Directory to store the upload file --&gt;</span>
      <span class="nt">&lt;entry</span> <span class="na">key=</span><span class="s">&quot;uploadFiles&quot;</span> <span class="na">value=</span><span class="s">&quot;file:./work/input&quot;</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/map&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
  <span class="c">&lt;!-- Omitted --&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
</dd>
</dl>
</li>
</ul>
</dd>
</dl>
</dd>
</dl>
</div></blockquote>
</div>
<div class="section" id="implementation-of-the-batch-registration-function">
<span id="project-upload-bulk-insert-impl"></span><h2>2.3.5.3. Implementation of the batch registration function<a class="headerlink" href="#implementation-of-the-batch-registration-function" title="Permalink to this headline">¶</a></h2>
<p>This section describes how to create the batch registration part of the batch registration function using uploads.</p>
<blockquote>
<div><ol class="arabic simple">
<li><a class="reference internal" href="#project-upload-create-bean"><span>Create a Bean to bind a file</span></a></li>
<li><a class="reference internal" href="#project-upload-bulk-action"><span>Create a business action method for batch registration of files</span></a></li>
</ol>
</div></blockquote>
<dl class="docutils" id="project-upload-create-bean">
<dt>Create a bean to bind the contents of the file</dt>
<dd><p class="first">A bean to bind the contents of the file is created.</p>
<dl class="last docutils">
<dt>ProjectUploadDto.java</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="nd">@Csv</span><span class="o">(</span><span class="n">headers</span> <span class="o">=</span> <span class="o">{</span> <span class="cm">/** Describe the header **/</span><span class="o">},</span>
        <span class="n">properties</span> <span class="o">=</span> <span class="o">{</span> <span class="cm">/** Properties to bind **/</span><span class="o">},</span>
        <span class="n">type</span> <span class="o">=</span> <span class="n">Csv</span><span class="o">.</span><span class="na">CsvType</span><span class="o">.</span><span class="na">CUSTOM</span><span class="o">)</span>
<span class="nd">@CsvFormat</span><span class="o">(</span><span class="n">charset</span> <span class="o">=</span> <span class="s">&quot;Shift_JIS&quot;</span><span class="o">,</span> <span class="n">fieldSeparator</span> <span class="o">=</span> <span class="sc">&#39;,&#39;</span><span class="o">,</span><span class="n">ignoreEmptyLine</span> <span class="o">=</span> <span class="kc">true</span><span class="o">,</span>
        <span class="n">lineSeparator</span> <span class="o">=</span> <span class="s">&quot;\r\n&quot;</span><span class="o">,</span> <span class="n">quote</span> <span class="o">=</span> <span class="sc">&#39;&quot;&#39;</span><span class="o">,</span>
        <span class="n">quoteMode</span> <span class="o">=</span> <span class="n">CsvDataBindConfig</span><span class="o">.</span><span class="na">QuoteMode</span><span class="o">.</span><span class="na">NORMAL</span><span class="o">,</span> <span class="n">requiredHeader</span> <span class="o">=</span> <span class="kc">true</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProjectUploadDto</span> <span class="kd">implements</span> <span class="n">Serializable</span> <span class="o">{</span>

    <span class="c1">// Excerpt of some items only.Getter and setter are omitted</span>

    <span class="cm">/** Project name */</span>
    <span class="nd">@Required</span><span class="o">(</span><span class="n">message</span> <span class="o">=</span> <span class="s">&quot;{nablarch.core.validation.ee.Required.upload}&quot;</span><span class="o">)</span>
    <span class="nd">@Domain</span><span class="o">(</span><span class="s">&quot;projectName&quot;</span><span class="o">)</span>
    <span class="kd">private</span> <span class="n">String</span> <span class="n">projectName</span><span class="o">;</span>

    <span class="cm">/** Project type */</span>
    <span class="nd">@Required</span><span class="o">(</span><span class="n">message</span> <span class="o">=</span> <span class="s">&quot;{nablarch.core.validation.ee.Required.upload}&quot;</span><span class="o">)</span>
    <span class="nd">@Domain</span><span class="o">(</span><span class="s">&quot;projectType&quot;</span><span class="o">)</span>
    <span class="kd">private</span> <span class="n">String</span> <span class="n">projectType</span><span class="o">;</span>

    <span class="c1">// Property that holds the line count to process.Setter is omitted.</span>
    <span class="cm">/** Line count*/</span>
    <span class="kd">private</span> <span class="n">Long</span> <span class="n">lineNumber</span><span class="o">;</span>

    <span class="cm">/**</span>
<span class="cm">     * Get line count.</span>
<span class="cm">     * @return Line count</span>
<span class="cm">     */</span>
    <span class="nd">@LineNumber</span>
    <span class="kd">public</span> <span class="n">Long</span> <span class="nf">getLineNumber</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">lineNumber</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
<dt>Key points of this implementation</dt>
<dd><ul class="first simple">
<li>Use <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/databind/csv/Csv.html" title="nablarch.common.databind.csv.Csv">&#64;Csv</a> for configuration to link the contents of the uploaded CSV file with the bean property.
Use  <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/databind/csv/CsvFormat.html" title="nablarch.common.databind.csv.CsvFormat">&#64;CsvFormat</a> to specify the acceptable CSV format.
（ <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/databind/csv/CsvFormat.html" title="nablarch.common.databind.csv.CsvFormat">&#64;CsvFormat</a> is not required when using the <a class="reference internal" href="../../../libraries/data_io/data_bind.html#data-bind-csv-format-set"><span>default format specification</span></a>）
For information on how to configure the annotation, refer to <a class="reference internal" href="../../../libraries/data_io/data_bind.html#data-bind-csv-format-beans"><span>format specification method when binding the CSV file to the Java Beans class</span></a>.</li>
<li>Perform <a class="reference internal" href="../../../libraries/validation/bean_validation.html#bean-validation"><span>Bean Validation</span></a> by assigning annotations for validation of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ee/Required.html" title="nablarch.core.validation.ee.Required">&#64;Required</a>
and <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ee/Domain.html" title="nablarch.core.validation.ee.Domain">&#64;Domain</a> to the property.</li>
<li>To accept the values from a file, <a class="reference internal" href="../../../libraries/validation/bean_validation.html#bean-validation-form-property"><span>property is defined as string type</span></a>,
and conversion to an appropriate type is performed as per the safe value that has passed the validation.</li>
<li>By defining the line count property and granting <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/databind/LineNumber.html" title="nablarch.common.databind.LineNumber">LineNumber</a> to the getter,
the line of the target data can be configured automatically.</li>
</ul>
<div class="last admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">The validation error message of a required input item is changed to an appropriate value as per the file upload.
For information on how to specify a validation message, refer to <a class="reference internal" href="../client_create/client_create2.html#client-create-validation-rule"><span>configure the input value check rule</span></a>.</p>
</div>
</dd>
</dl>
</dd>
</dl>
<dl class="docutils" id="project-upload-bulk-action">
<dt>Create a business action method</dt>
<dd><p class="first">Create a business action method to register the contents of the uploaded file in the database.</p>
<dl class="docutils" id="project-upload-validation">
<dt>Validate the contents of 1 CSV file by binding to Bean</dt>
<dd><dl class="first last docutils">
<dt>ProjectUploadAction.java</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Project</span><span class="o">&gt;</span> <span class="nf">readFileAndValidate</span><span class="o">(</span><span class="kd">final</span> <span class="n">PartInfo</span> <span class="n">partInfo</span><span class="o">,</span> <span class="kd">final</span> <span class="n">LoginUserPrincipal</span> <span class="n">userContext</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">List</span><span class="o">&lt;</span><span class="n">Message</span><span class="o">&gt;</span> <span class="n">messages</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>
    <span class="n">List</span><span class="o">&lt;</span><span class="n">Project</span><span class="o">&gt;</span> <span class="n">projects</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>

    <span class="c1">// Validate the contents of the file by binding it to the bean</span>
    <span class="k">try</span> <span class="o">(</span><span class="kd">final</span> <span class="n">ObjectMapper</span><span class="o">&lt;</span><span class="n">ProjectUploadDto</span><span class="o">&gt;</span> <span class="n">mapper</span>
             <span class="o">=</span> <span class="n">ObjectMapperFactory</span><span class="o">.</span><span class="na">create</span><span class="o">(</span>
                    <span class="n">ProjectUploadDto</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">partInfo</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">()))</span> <span class="o">{</span>
        <span class="n">ProjectUploadDto</span> <span class="n">projectUploadDto</span><span class="o">;</span>

        <span class="k">while</span> <span class="o">((</span><span class="n">projectUploadDto</span> <span class="o">=</span> <span class="n">mapper</span><span class="o">.</span><span class="na">read</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>

            <span class="c1">// Validate and configure the result messages</span>
            <span class="n">messages</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span><span class="n">validate</span><span class="o">(</span><span class="n">projectUploadDto</span><span class="o">));</span>

            <span class="c1">// Create an entity</span>
            <span class="n">projects</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">createProject</span><span class="o">(</span><span class="n">projectUploadDto</span><span class="o">,</span> <span class="n">userContext</span><span class="o">.</span><span class="na">getUserId</span><span class="o">()));</span>
        <span class="o">}</span>
    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InvalidDataFormatException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// Parsing ends if there is an invalid line in the file format</span>
        <span class="n">messages</span><span class="o">.</span><span class="na">add</span><span class="o">(</span>
            <span class="n">MessageUtil</span><span class="o">.</span><span class="na">createMessage</span><span class="o">(</span>
                <span class="n">MessageLevel</span><span class="o">.</span><span class="na">ERROR</span><span class="o">,</span> <span class="s">&quot;errors.upload.format&quot;</span><span class="o">,</span> <span class="n">e</span><span class="o">.</span><span class="na">getLineNumber</span><span class="o">()));</span>
    <span class="o">}</span>

    <span class="c1">// Not registered in the database even if there is one error</span>
    <span class="k">if</span> <span class="o">(!</span><span class="n">messages</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
        <span class="k">throw</span> <span class="k">new</span> <span class="n">ApplicationException</span><span class="o">(</span><span class="n">messages</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">return</span> <span class="n">projects</span><span class="o">;</span>
<span class="o">}</span>

<span class="cm">/**</span>
<span class="cm"> * Validate the project information and store the result in the message list.</span>
<span class="cm"> *</span>
<span class="cm"> * @param projectUploadDto Project information Bean generated from CSV</span>
<span class="cm"> * @return messages         List of validation result messages</span>
<span class="cm"> */</span>
<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Message</span><span class="o">&gt;</span> <span class="nf">validate</span><span class="o">(</span><span class="kd">final</span> <span class="n">ProjectUploadDto</span> <span class="n">projectUploadDto</span><span class="o">)</span> <span class="o">{</span>

    <span class="n">List</span><span class="o">&lt;</span><span class="n">Message</span><span class="o">&gt;</span> <span class="n">messages</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>

    <span class="c1">// Single item validation.Execute Bean validation based on the annotation defined in Dto</span>
    <span class="k">try</span> <span class="o">{</span>
        <span class="n">ValidatorUtil</span><span class="o">.</span><span class="na">validate</span><span class="o">(</span><span class="n">projectUploadDto</span><span class="o">);</span>
    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ApplicationException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">messages</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessages</span><span class="o">()</span>
                <span class="o">.</span><span class="na">stream</span><span class="o">()</span>
                <span class="o">.</span><span class="na">map</span><span class="o">(</span><span class="n">message</span> <span class="o">-&gt;</span> <span class="n">MessageUtil</span><span class="o">.</span><span class="na">createMessage</span><span class="o">(</span><span class="n">MessageLevel</span><span class="o">.</span><span class="na">ERROR</span><span class="o">,</span>
                        <span class="s">&quot;errors.upload.validate&quot;</span><span class="o">,</span> <span class="n">projectUploadDto</span><span class="o">.</span><span class="na">getLineNumber</span><span class="o">(),</span> <span class="n">message</span><span class="o">))</span>
                <span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">()));</span>
    <span class="o">}</span>

    <span class="c1">// Customer existence check</span>
    <span class="k">if</span> <span class="o">(!</span><span class="n">existsClient</span><span class="o">(</span><span class="n">projectUploadDto</span><span class="o">))</span> <span class="o">{</span>
        <span class="n">messages</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">MessageUtil</span><span class="o">.</span><span class="na">createMessage</span><span class="o">(</span><span class="n">MessageLevel</span><span class="o">.</span><span class="na">ERROR</span><span class="o">,</span>
                <span class="s">&quot;errors.upload.client&quot;</span><span class="o">,</span> <span class="n">projectUploadDto</span><span class="o">.</span><span class="na">getLineNumber</span><span class="o">()));</span>
    <span class="o">}</span>

    <span class="k">return</span> <span class="n">messages</span><span class="o">;</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
<dt>Key points of this implementation</dt>
<dd><ul class="first last simple">
<li>Use <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/databind/ObjectMapper.html" title="nablarch.common.databind.ObjectMapper">ObjectMapper</a> provided by
<a class="reference internal" href="../../../libraries/data_io/data_bind.html#data-bind"><span>DataBind</span></a> to bind and get the file to the bean.</li>
<li>By executing <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/databind/ObjectMapper.html#read--" title="nablarch.common.databind.ObjectMapper.read()">ObjectMapper#read</a> for the acquired
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/databind/ObjectMapper.html" title="nablarch.common.databind.ObjectMapper">ObjectMapper</a> object, the list of bound bean can be obtained.</li>
<li><a class="reference external" href="http://docs.oracle.com/javaee/7/api/javax/validation/Validator.html" title="javax.validation.Validator">Validator</a> object can be created by using
<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/validation/ee/ValidatorUtil.html#getValidator--" title="nablarch.core.validation.ee.ValidatorUtil.getValidator()">ValidatorUtil#getValidator</a>, and <a class="reference internal" href="../../../libraries/validation/bean_validation.html#bean-validation"><span>Bean Validation</span></a> can be executed for any Bean.</li>
<li>When verification is continued up to the last row and not aborted even when an error occurs,
error messages for all rows are stored after the verification is completed in <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/message/Message.html" title="nablarch.core.message.Message">Message</a> list, by generating and
throwing <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/message/ApplicationException.html" title="nablarch.core.message.ApplicationException">ApplicationException</a> with this list as an argument,
it can be output to the screen with <a class="reference internal" href="../../../libraries/tag/tag_reference.html#tag-errors-tag"><span>errors tag</span></a>.</li>
<li>For how to assign a property name to the validation message,
implement by referring to <a class="reference internal" href="../../../libraries/validation/bean_validation.html#bean-validation-property-name"><span>how to include item names in the message when a validation error occurs</span></a>.</li>
</ul>
</dd>
</dl>
</dd>
</dl>
<dl class="last docutils" id="project-upload-bulk-insert">
<dt>2.Batch registration to DB</dt>
<dd><dl class="first last docutils">
<dt>ProjectUploadAction.java</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="n">HttpResponse</span> <span class="nf">upload</span><span class="o">(</span><span class="n">HttpRequest</span> <span class="n">request</span><span class="o">,</span><span class="n">ExecutionContext</span> <span class="n">context</span><span class="o">)</span>
        <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>

    <span class="c1">// Execution of validation is described above</span>

    <span class="c1">// Batch registration to DB</span>
    <span class="n">insertProjects</span><span class="o">(</span><span class="n">projects</span><span class="o">);</span>

    <span class="c1">// Saving a file is described above</span>
<span class="o">}</span>

<span class="cm">/**</span>
<span class="cm"> * Register multiple project entities to the database in a batch.</span>
<span class="cm"> * @param projects List of validated projects</span>
<span class="cm"> */</span>
<span class="kd">private</span> <span class="kt">void</span> <span class="nf">insertProjects</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Project</span><span class="o">&gt;</span> <span class="n">projects</span><span class="o">)</span> <span class="o">{</span>

  <span class="n">List</span><span class="o">&lt;</span><span class="n">Project</span><span class="o">&gt;</span> <span class="n">insertProjects</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Project</span><span class="o">&gt;();</span>

  <span class="k">for</span> <span class="o">(</span><span class="n">Project</span> <span class="n">project</span> <span class="o">:</span> <span class="n">projects</span><span class="o">)</span> <span class="o">{</span>
      <span class="n">insertProjects</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">project</span><span class="o">);</span>
      <span class="c1">// Batch insert every 100 records</span>
      <span class="k">if</span> <span class="o">(</span><span class="n">insertProjects</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;=</span> <span class="mi">100</span><span class="o">)</span> <span class="o">{</span>
          <span class="n">UniversalDao</span><span class="o">.</span><span class="na">batchInsert</span><span class="o">(</span><span class="n">insertProjects</span><span class="o">);</span>
          <span class="n">insertProjects</span><span class="o">.</span><span class="na">clear</span><span class="o">();</span>
      <span class="o">}</span>
  <span class="o">}</span>

  <span class="k">if</span> <span class="o">(!</span><span class="n">insertProjects</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
      <span class="n">UniversalDao</span><span class="o">.</span><span class="na">batchInsert</span><span class="o">(</span><span class="n">insertProjects</span><span class="o">);</span>
  <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
<dt>Key points of this implementation</dt>
<dd><ul class="first last simple">
<li>Batch registration is executed using <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/dao/UniversalDao.html#batchInsert-java.util.List-" title="nablarch.common.dao.UniversalDao.batchInsert(java.util.List)">UniversalDao#batchInsert</a>.</li>
<li>Set an upper limit on the number of registrations per batch registration, because a large number of registrations at a time may result in a deterioration in performance.</li>
</ul>
</dd>
</dl>
</dd>
</dl>
</dd>
</dl>
<p>This completes the explanation for the batch registration function using upload.</p>
<p><a class="reference internal" href="../index.html#getting-started"><span>Getting Started To TOP page</span></a></p>
</div>
</div>


           </div>
           <div class="articleComments">
            
           </div>
          </div>
          <footer>

    <hr/>

    <div role="contentinfo">
        <p>
            &copy; Copyright 2010-2021, TIS Inc.
        </p>
    </div>
    Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org">Read the Docs</a>.

</footer>

        </div>
      </div>

    </section>

  </div>
  


  

    <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'../../../../../',
            VERSION:'5u19',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true,
            SOURCELINK_SUFFIX: ''
        };
    </script>
      <script type="text/javascript" src="../../../../../_static/jquery.js"></script>
      <script type="text/javascript" src="../../../../../_static/underscore.js"></script>
      <script type="text/javascript" src="../../../../../_static/doctools.js"></script>
      <script type="text/javascript" src="../../../../../_static/custom.js"></script>

  

  
  
    <script type="text/javascript" src="../../../../../_static/js/theme.js"></script>
  

  
  
  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>
   

</body>
</html>