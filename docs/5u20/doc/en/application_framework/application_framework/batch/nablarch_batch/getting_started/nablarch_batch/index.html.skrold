


<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->
<head>
  <meta charset="utf-8">
  <meta http-equiv='content-language' content='ja'>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>4.2.3.1. Creating a Batch to Register Files to the DB &mdash; ∇Nablarch  5u19 documentation</title>
  

  
  
  
  

  

  
  
    

  

  
  
    <link rel="stylesheet" href="../../../../../../_static/custom.css" type="text/css" />
  

  

  
  <link rel="canonical" href="https://nablarch.github.io/docs/LATEST/doc/application_framework/application_framework/batch/nablarch_batch/getting_started/nablarch_batch/index.html" />
  
    <link rel="top" title="∇Nablarch  5u19 documentation" href="../../../../../../index.html"/>
        <link rel="up" title="4.2.3. Getting Started" href="../getting_started.html"/>
        <link rel="next" title="4.2.4. Details of Function" href="../../feature_details.html"/>
        <link rel="prev" title="4.2.3. Getting Started" href="../getting_started.html"/>
 

  
  <script src="../../../../../../_static/js/modernizr.min.js"></script>

</head>

<body class="wy-body-for-nav" role="document">

   
  <div class="wy-grid-for-nav">

    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search">
          
  
  <a href="../../../../../../index.html" id="sidebar-title" class="icon"> ∇Nablarch 
  

  
    <div id="sidebar-version">Version: 5u19</div>
  </a>

  <div role="search">
    <form id="google-search-form" class="wy-form" method="get" action="https://www.google.co.jp/search">
      <input type="text" name="text" placeholder="Search docs on google" id="text"/>
      <input type="hidden" name="q" id="q"/>
    </form>
  </div>
    
    

        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
  
  
    <ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../../../../../about_nablarch/index.html">What is the Nablarch?</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../about_nablarch/concept.html">Nablarch Concept</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../about_nablarch/concept.html#robustness">Robustness</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../about_nablarch/concept.html#testability">Testability</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../about_nablarch/concept.html#ready-to-use">Ready-to-Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../about_nablarch/mvn_module.html">Module List of Nablarch</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../about_nablarch/license.html">Information on Nablarch License</a></li>
</ul>
</li>
<li class="toctree-l1 current"><a class="reference internal" href="../../../../../index.html">Nablarch Application Framework</a><ul class="current">
<li class="toctree-l2 current"><a class="reference internal" href="../../../../index.html">Application Framework</a><ul class="current">
<li class="toctree-l3"><a class="reference internal" href="../../../../nablarch/index.html">1. What is Nablarch Application Framework?</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../web/index.html">2. Web Application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../web_service/index.html">3. Web Service</a></li>
<li class="toctree-l3 current"><a class="reference internal" href="../../../index.html">4. Batch Application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../messaging/index.html">5. Messaging</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../handlers/index.html">6. Standard Handler Provided by Nablarch</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../libraries/index.html">7. Libraries Provided by Nablarch</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../blank_project/index.html">8. Blank Project</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../setting_guide/index.html">9. Nablarch Application Framework Configuration Guide</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../configuration/index.html">10. Default Configuration List</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../cloud_native/index.html">11. Nablarch Cloud Native Support</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../adaptors/index.html">Adaptor</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../adaptors/log_adaptor.html">log Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../adaptors/router_adaptor.html">Routing Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../adaptors/webspheremq_adaptor.html">IBM WebSphere MQ Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../adaptors/jaxrs_adaptor.html">JAX-RS Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../adaptors/doma_adaptor.html">Doma Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../adaptors/jsr310_adaptor.html">JSR310(Date and Time API)Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../adaptors/mail_sender_freemarker_adaptor.html">E-mail FreeMarker Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../adaptors/mail_sender_thymeleaf_adaptor.html">E-mail Thymeleaf Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../adaptors/mail_sender_velocity_adaptor.html">E-mail Velocity Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../adaptors/web_thymeleaf_adaptor.html">Web Application Thymeleaf Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../adaptors/lettuce_adaptor.html">Lettuce Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../adaptors/slf4j_adaptor.html">SLF4J Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../adaptors/micrometer_adaptor.html">Micrometer Adapter</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../example/index.html">Example</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../example/index.html#procedure-to-build-the-environment">Procedure to build the environment</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../example/index.html#application-execution-procedure">Application execution procedure</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../../../extension_components/index.html">Nablarch extension component</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../extension_components/report/index.html">1. Form library</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../extension_components/workflow/doc/index.html">2. Workflow library</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../extension_components/workflow/tool/index.html">3. Workflow definition data generation tool</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../extension_components/etl/index.html">4. ETL</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../extension_components/etl/etl_maven_plugin.html">5. ETL Maven plugin</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../../../development_tools/index.html">Nablarch development tools</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../development_tools/java_static_analysis/index.html">1. Efficient Java Static Checks</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../development_tools/java_static_analysis/index.html#conduct-syntax-check">1.1. Conduct syntax check</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../development_tools/java_static_analysis/index.html#unify-the-format">1.2. Unify the format</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../development_tools/java_static_analysis/index.html#check-if-unauthorized-apis-are-being-used">1.3. Check if unauthorized APIs are being used</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../development_tools/ui_dev/index.html">2. Front-end UI development platform for advanced users</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../development_tools/testing_framework/index.html">3. Testing framework</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../development_tools/testing_framework/guide/development_guide/05_UnitTestGuide/index.html">3.1. How to Execute Unit Tests</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../development_tools/testing_framework/guide/development_guide/06_TestFWGuide/index.html">3.2. How to Use the Automated Test Framework</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../development_tools/testing_framework/guide/development_guide/08_TestTools/index.html">3.3. Tools Used in the Programming Phase</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../development_tools/toolbox/index.html">4. Useful Tools When Developing Applications</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../development_tools/toolbox/JspStaticAnalysis/index.html">4.1. JSP Static Analysis Tool</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../development_tools/toolbox/SqlExecutor/SqlExecutor.html">4.2. Nablarch SQL Executor</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../development_tools/toolbox/JspVerifier/JspVerifier.html">4.3. Job Screen JSP Validation Tool</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../../../examples/index.html">Nablarch Implementation Examples</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/01/index.html">Sample Password Encryption Function Using Database</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/01/0101_PBKDF2PasswordEncryptor.html">Sample Password Encryption Function Using PBKDF2</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/01/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/01/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/01/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/01/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/02/index.html">Extended Validation Functions</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/02/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/02/index.html#email-address-validation">Email address validation</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/02/index.html#validation-of-japan-telephone-numbers">Validation of Japan telephone numbers</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/02/index.html#code-value-validation">Code value validation</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/03/index.html">Display a List of Search Results</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#how-to-use">How to Use</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#listsearchinfo-class">ListSearchInfo class</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#listsearchresult-tag">listSearchResult tag</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#sort-search-results">Sort search results</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#how-to-implement-displaying-a-list-of-all-search-results-on-a-single-screen">How to implement displaying a list of all search results on a single screen</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#how-to-implement-the-initial-display-of-search-results-with-the-default-search-conditions">How to implement the initial display of search results with the default search conditions</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#default-settings-for-the-search-result-list-display-function">Default settings for the search result list display function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#how-to-import-a-sample-implementation-tag-file-into-the-business-application">How to import a sample implementation (tag file) into the business application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/03/index.html#tag-reference">Tag Reference</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/04/index.html">Extended Formatter Functions</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/04/0401_ExtendedDataFormatter.html">Data Formatter Expansion</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/04/0402_ExtendedFieldType.html">Field Type Expansion in the Data Formatter Function</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/05/index.html">Sample File Management Function Using Database</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/05/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/05/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/05/index.html#functions">Functions</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/05/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/05/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/06/index.html">CAPTCHA Function Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/06/06_Captcha_guide.html">How to Incorporate the CAPTCHA Function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/06/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/06/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/06/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/06/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/07/index.html">Sample UserAgent Information Acquisition Function</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/07/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/07/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/07/index.html#description-of-configuration">Description of configuration</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/07/index.html#use-case">Use case</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/08/index.html">Sample of HTML Email Send Function</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/08/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/08/index.html#request">Request</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/08/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/08/index.html#implementation-examples">Implementation examples</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/09/index.html">How to Use a Sample to Send a Digitally Signed Email Using Bouncycastle</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/09/index.html#environment-preparation">Environment preparation</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/09/index.html#structure-of-digitally-signed-email-send-function">Structure of digitally signed email send function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/09/index.html#preparation-of-configuration-file">Preparation of configuration file</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/09/index.html#execution">Execution</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/10/index.html">How to Use the Log Aggregation Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/10/index.html#list-of-samples-provided">List of samples provided</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../../../../examples/11/index.html">Messaging Platform Test Simulator Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/11/index.html#uses">Uses</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/11/index.html#features">Features</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/11/index.html#request">Request</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/11/index.html#how-to-use">How to use</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../../../../examples/11/index.html#expansion-example">Expansion example</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../../../../nablarch_api/index.html">Nablarch API</a></li>
</ul>

  

        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" role="navigation" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../../../../../../index.html">∇Nablarch </a>
        
      </nav>


      
      <div class="wy-nav-content">
        <div class="rst-content">
          

 



<div role="navigation" aria-label="breadcrumbs navigation">
  <ul class="wy-breadcrumbs">
    <li><a href="../../../../../../index.html">Docs</a> &raquo;</li>
      
          <li><a href="../../../../../index.html">Nablarch Application Framework</a> &raquo;</li>
      
          <li><a href="../../../../index.html">Application Framework</a> &raquo;</li>
      
          <li><a href="../../../index.html">4. Batch Application</a> &raquo;</li>
      
          <li><a href="../../index.html">4.2. Nablarch Batch Application</a> &raquo;</li>
      
          <li><a href="../getting_started.html">4.2.3. Getting Started</a> &raquo;</li>
      
    <li>4.2.3.1. Creating a Batch to Register Files to the DB</li>
    <li class="wy-breadcrumbs-aside">
      <a href="https://github.com/nablarch" class="fa fa-github">GitHub</a>
    </li>
    <li class="wy-breadcrumbs-aside">
        <a href="https://nablarch.github.io/docs/LATEST/doc/index.html" class="ja">日本語</a>
    </li>
  </ul>
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  <div class="section" id="creating-a-batch-to-register-files-to-the-db">
<span id="getting-started-nablarch-batch"></span><h1>4.2.3.1. Creating a Batch to Register Files to the DB<a class="headerlink" href="#creating-a-batch-to-register-files-to-the-db" title="Permalink to this headline">¶</a></h1>
<p>How to register files in DB will be explained with an example application.</p>
<dl class="docutils">
<dt>Overview of the function to be created</dt>
<dd><img alt="../../../../../../_images/overview1.png" class="first last" src="../../../../../../_images/overview1.png" />
</dd>
<dt>Execution procedure of the mailing address file registration batch</dt>
<dd><ol class="first arabic">
<li><p class="first">Delete data in the table to be registered</p>
<p>Execute the following SQL from the console of H2 and delete the data in the table to be registered.</p>
<div class="highlight-sql"><div class="highlight"><pre><span></span><span class="k">TRUNCATE</span> <span class="k">TABLE</span> <span class="n">ZIP_CODE_DATA</span><span class="p">;</span>
</pre></div>
</div>
</li>
<li><p class="first">Execute the mailing address file registration batch</p>
</li>
</ol>
<blockquote>
<div><p>Execute the following command from the command prompt</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="nv">$cd</span> <span class="o">{</span>nablarch-example-batch repository<span class="o">}</span>
<span class="nv">$mvn</span> exec:java -Dexec.mainClass<span class="o">=</span>nablarch.fw.launcher.Main ^
    -Dexec.args<span class="o">=</span><span class="s2">&quot;&#39;-requestPath&#39; &#39;ImportZipCodeFileAction/ImportZipCodeFile&#39; &#39;-diConfig&#39; &#39;classpath:import-zip-code-file.xml&#39; &#39;-userId&#39; &#39;105&#39;&quot;</span>
</pre></div>
</div>
</div></blockquote>
<ol class="last arabic" start="3">
<li><p class="first">Confirm that the contents of the file are registered in the DB</p>
<p>Execute the following SQL from the console of H2 and confirm that the mailing address information is registered.</p>
<div class="highlight-sql"><div class="highlight"><pre><span></span><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">ZIP_CODE_DATA</span><span class="p">;</span>
</pre></div>
</div>
</li>
</ol>
</dd>
</dl>
<div class="section" id="register-file-to-db">
<h2>4.2.3.1.1. Register file to DB<a class="headerlink" href="#register-file-to-db" title="Permalink to this headline">¶</a></h2>
<p>For the method of creating the batch to register the files to database,
it is explained by dividing into
<a class="reference internal" href="#getting-started-nablarch-batch-read"><span>reads data from the input data source</span></a> and
<a class="reference internal" href="#getting-started-nablarch-batch-business-action"><span>execution of business logic</span></a>.</p>
<p>For the process flow, see <a class="reference internal" href="../../architecture.html#nablarch-batch-process-flow"><span>process flow of the Nablarch batch</span></a>.
For responsibility assignment, refer to <a class="reference internal" href="../../application_design.html#nablarch-batch-application-design"><span>the responsibility assignment of the Nablarch batch</span></a>.</p>
<p>Refer to <cite>import-zip-code-file.xml</cite> for the handler configuration of the mailing address file registration batch.</p>
<div class="section" id="reads-data-from-the-input-data-source">
<span id="getting-started-nablarch-batch-read"></span><h3>4.2.3.1.1.1. Reads data from the input data source<a class="headerlink" href="#reads-data-from-the-input-data-source" title="Permalink to this headline">¶</a></h3>
<p>The process of reading data from the input data source is described.</p>
<ol class="arabic simple">
<li><a class="reference internal" href="#getting-started-nablarch-batch-form"><span>Create a form that accepts input files</span></a></li>
<li><a class="reference internal" href="#getting-started-nablarch-batch-data-reader"><span>Create a data reader</span></a></li>
</ol>
<dl class="docutils" id="getting-started-nablarch-batch-form">
<dt>Create a form that accepts input files</dt>
<dd><p class="first">Create a form that binds CSV(mailing address file) using <a class="reference internal" href="../../../../libraries/data_io/data_bind.html#data-bind"><span>Data Bind</span></a>.</p>
<dl class="last docutils">
<dt>ZipCodeForm.java</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="nd">@Csv</span><span class="o">(</span><span class="n">properties</span> <span class="o">=</span> <span class="o">{</span><span class="cm">/** Property definition is omitted **/</span><span class="o">},</span> <span class="n">type</span> <span class="o">=</span> <span class="n">CsvType</span><span class="o">.</span><span class="na">CUSTOM</span><span class="o">)</span>
<span class="nd">@CsvFormat</span><span class="o">(</span><span class="n">charset</span> <span class="o">=</span> <span class="s">&quot;UTF-8&quot;</span><span class="o">,</span> <span class="n">fieldSeparator</span> <span class="o">=</span> <span class="sc">&#39;,&#39;</span><span class="o">,</span>
        <span class="n">ignoreEmptyLine</span> <span class="o">=</span> <span class="kc">true</span><span class="o">,</span> <span class="n">lineSeparator</span> <span class="o">=</span> <span class="s">&quot;\r\n&quot;</span><span class="o">,</span> <span class="n">quote</span> <span class="o">=</span> <span class="sc">&#39;&quot;&#39;</span><span class="o">,</span>
        <span class="n">quoteMode</span> <span class="o">=</span> <span class="n">QuoteMode</span><span class="o">.</span><span class="na">NORMAL</span><span class="o">,</span> <span class="n">requiredHeader</span> <span class="o">=</span> <span class="kc">false</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ZipCodeForm</span> <span class="o">{</span>

    <span class="c1">// Excerpt of only some items</span>

    <span class="cm">/** National local government code */</span>
    <span class="nd">@Domain</span><span class="o">(</span><span class="s">&quot;localGovernmentCode&quot;</span><span class="o">)</span>
    <span class="nd">@Required</span>
    <span class="kd">private</span> <span class="n">String</span> <span class="n">localGovernmentCode</span><span class="o">;</span>

    <span class="cm">/**</span>
<span class="cm">     * Returns the zip code (5 digits).</span>
<span class="cm">     *</span>
<span class="cm">     * @return Zip code (5 digits)</span>
<span class="cm">     */</span>
    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getZipCode5digit</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">zipCode5digit</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="cm">/**</span>
<span class="cm">     * Column holding the line count</span>
<span class="cm">     */</span>
    <span class="kd">private</span> <span class="n">Long</span> <span class="n">lineNumber</span><span class="o">;</span>

    <span class="cm">/**</span>
<span class="cm">     * Get line count.</span>
<span class="cm">     *</span>
<span class="cm">     * @return line count</span>
<span class="cm">     */</span>
    <span class="nd">@LineNumber</span>
    <span class="kd">public</span> <span class="n">Long</span> <span class="nf">getLineNumber</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">lineNumber</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="c1">// Other setters and getters are omitted</span>

<span class="o">}</span>
</pre></div>
</div>
</dd>
<dt>Key points of this implementation</dt>
<dd><ul class="first last simple">
<li>To bind the CSV to the form using <a class="reference internal" href="../../../../libraries/data_io/data_bind.html#data-bind"><span>Data Bind</span></a>, <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/databind/csv/Csv.html" title="nablarch.common.databind.csv.Csv">Csv</a>
and <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/databind/csv/CsvFormat.html" title="nablarch.common.databind.csv.CsvFormat">CsvFormat</a> are granted.</li>
<li>To execute <a class="reference internal" href="../../../../libraries/validation/bean_validation.html#bean-validation"><span>Bean Validation</span></a>, annotation is granted for validation.</li>
<li>By defining the line count property and granting <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/databind/LineNumber.html" title="nablarch.common.databind.LineNumber">LineNumber</a> to the getter,
the line of the target data can be configured automatically.</li>
</ul>
</dd>
</dl>
</dd>
</dl>
<dl class="docutils" id="getting-started-nablarch-batch-data-reader">
<dt>Create a data reader</dt>
<dd><p class="first">Create an implementation class of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/DataReader.html" title="nablarch.fw.DataReader">DataReader</a>
that reads the file and passing one line at a time to the business action method.</p>
<dl class="docutils">
<dt>ZipCodeFileReader.java</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ZipCodeFileReader</span> <span class="kd">implements</span> <span class="n">DataReader</span><span class="o">&lt;</span><span class="n">ZipCodeForm</span><span class="o">&gt;</span> <span class="o">{</span>

    <span class="cm">/**</span>
<span class="cm">     * Name of the file to read</span>
<span class="cm">     */</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">FILE_NAME</span> <span class="o">=</span> <span class="s">&quot;importZipCode&quot;</span><span class="o">;</span>

    <span class="cm">/**</span>
<span class="cm">     * Iterator that returns the data to be processed</span>
<span class="cm">     */</span>
    <span class="kd">private</span> <span class="n">ObjectMapperIterator</span><span class="o">&lt;</span><span class="n">ZipCodeForm</span><span class="o">&gt;</span> <span class="n">iterator</span><span class="o">;</span>

    <span class="cm">/**</span>
<span class="cm">     * Return one line of data processed by the business handler.</span>
<span class="cm">     *</span>
<span class="cm">     * @param ctx Execution context</span>
<span class="cm">     * @return One line of data</span>
<span class="cm">     */</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="n">ZipCodeForm</span> <span class="nf">read</span><span class="o">(</span><span class="n">ExecutionContext</span> <span class="n">ctx</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">iterator</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">initialize</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">iterator</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="cm">/**</span>
<span class="cm">     * Returns whether there is a next line.</span>
<span class="cm">     *</span>
<span class="cm">     * @param ctx Execution context</span>
<span class="cm">     * @return If there is a next line {@code true} , if there is no next line {@code false}</span>
<span class="cm">     */</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">hasNext</span><span class="o">(</span><span class="n">ExecutionContext</span> <span class="n">ctx</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">iterator</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">initialize</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">iterator</span><span class="o">.</span><span class="na">hasNext</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="cm">/**</span>
<span class="cm">     * End process.</span>
<span class="cm">     * &lt;p/&gt;</span>
<span class="cm">     * {@link ObjectMapperIterator#close()} is called.</span>
<span class="cm">     * @param ctx Execution context</span>
<span class="cm">     */</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">close</span><span class="o">(</span><span class="n">ExecutionContext</span> <span class="n">ctx</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">iterator</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="cm">/**</span>
<span class="cm">     * Initialization process.</span>
<span class="cm">     * &lt;p/&gt;</span>
<span class="cm">     * Create an iterator.</span>
<span class="cm">     * @throws RuntimeException When reading the file fails</span>
<span class="cm">     */</span>
    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">initialize</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">FilePathSetting</span> <span class="n">filePathSetting</span> <span class="o">=</span> <span class="n">FilePathSetting</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>
        <span class="n">File</span> <span class="n">zipCodeFile</span> <span class="o">=</span> <span class="n">filePathSetting</span><span class="o">.</span><span class="na">getFileWithoutCreate</span><span class="o">(</span><span class="s">&quot;csv-input&quot;</span><span class="o">,</span> <span class="n">FILE_NAME</span><span class="o">);</span>

        <span class="c1">// Create an iterator used for reading files</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="n">iterator</span>
                <span class="o">=</span> <span class="k">new</span> <span class="n">ObjectMapperIterator</span><span class="o">&lt;&gt;(</span><span class="n">ObjectMapperFactory</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">ZipCodeForm</span><span class="o">.</span><span class="na">class</span><span class="o">,</span>
                    <span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="n">zipCodeFile</span><span class="o">)));</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">FileNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="n">IllegalStateException</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
<dt>Key points of this implementation</dt>
<dd><ul class="first last simple">
<li>Implements the process to return data of one line in <cite>read</cite> method. The data that has been read by using the <cite>read</cite> method is delivered to the business action handler.</li>
<li>Implements the process to determine if the next line exists in <cite>hasNext</cite> method. The file reading process is terminated if this method returns <cite>false</cite>.</li>
<li>The <cite>close</cite> method implements the close process after reading of the file is complete.</li>
</ul>
</dd>
</dl>
<div class="last admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">When data is read from a class that does not have the <cite>hasNext</cite> method like <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/databind/ObjectMapper.html" title="nablarch.common.databind.ObjectMapper">ObjectMapper</a>,
it is not only possible to simplify the implementation of data reader by creating an iterator,
but also the effort of implementing the data reading process for each batch can be minimized.
For iterator implementation, see the implementation of <cite>ObjectMapperIterator.java</cite> in the example application.</p>
</div>
</dd>
</dl>
</div>
<div class="section" id="execute-the-business-logic">
<span id="getting-started-nablarch-batch-business-action"></span><h3>4.2.3.1.1.2. Execute the business logic<a class="headerlink" href="#execute-the-business-logic" title="Permalink to this headline">¶</a></h3>
<p>This section describes the part that executes the business logic</p>
<ol class="arabic simple">
<li><a class="reference internal" href="#getting-started-nablarch-batch-action"><span>Create a business action</span></a></li>
</ol>
<dl class="docutils" id="getting-started-nablarch-batch-action">
<dt>Create a business action</dt>
<dd><p class="first">Inherits <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/fw/action/BatchAction.html" title="nablarch.fw.action.BatchAction">BatchAction</a> and creates the business action class.</p>
<dl class="docutils">
<dt>ImportZipCodeFileAction.java</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ImportZipCodeFileAction</span> <span class="kd">extends</span> <span class="n">BatchAction</span><span class="o">&lt;</span><span class="n">ZipCodeForm</span><span class="o">&gt;</span> <span class="o">{</span>

    <span class="cm">/**</span>
<span class="cm">     * {@link com.nablarch.example.app.batch.reader.ZipCodeFileReader}</span>
<span class="cm">     * registers information of one line passed by the above to the DB.</span>
<span class="cm">     * &lt;p/&gt;</span>
<span class="cm">     * Since {@link com.nablarch.example.app.batch.interceptor.ValidateData}</span>
<span class="cm">     * is intercepted when the method is executed, validated</span>
<span class="cm">     * {@param inputData} is always passed to this method.</span>
<span class="cm">     *</span>
<span class="cm">     * @param inputData Mailing address information for one line</span>
<span class="cm">     * @param ctx       Execution context</span>
<span class="cm">     * @return Result object</span>
<span class="cm">     */</span>
    <span class="nd">@Override</span>
    <span class="nd">@ValidateData</span>
    <span class="kd">public</span> <span class="n">Result</span> <span class="nf">handle</span><span class="o">(</span><span class="n">ZipCodeForm</span> <span class="n">inputData</span><span class="o">,</span> <span class="n">ExecutionContext</span> <span class="n">ctx</span><span class="o">)</span> <span class="o">{</span>

        <span class="n">ZipCodeData</span> <span class="n">data</span> <span class="o">=</span> <span class="n">BeanUtil</span><span class="o">.</span><span class="na">createAndCopy</span><span class="o">(</span><span class="n">ZipCodeData</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">inputData</span><span class="o">);</span>
        <span class="n">UniversalDao</span><span class="o">.</span><span class="na">insert</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>

        <span class="k">return</span> <span class="k">new</span> <span class="n">Result</span><span class="o">.</span><span class="na">Success</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="cm">/**</span>
<span class="cm">     * Create a reader.</span>
<span class="cm">     *</span>
<span class="cm">     * @param ctx Execution context</span>
<span class="cm">     * @return Reader object</span>
<span class="cm">     */</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="n">DataReader</span><span class="o">&lt;</span><span class="n">ZipCodeForm</span><span class="o">&gt;</span> <span class="nf">createReader</span><span class="o">(</span><span class="n">ExecutionContext</span> <span class="n">ctx</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="n">ZipCodeFileReader</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
<dt>Key points of this implementation</dt>
<dd><ul class="first last simple">
<li>Process for one line of data that is passed over from the data reader is implemented in the <cite>handle</cite> method.</li>
<li>Use <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/dao/UniversalDao.html#insert-java.lang.Object-" title="nablarch.common.dao.UniversalDao.insert(java.lang.Object)">UniversalDao#insert</a> to register a mailing address entity in the database.</li>
<li>The <cite>createReader</cite> method returns the instance of data reader class to be used.</li>
</ul>
</dd>
</dl>
<div class="last admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">As there is no difference in the execution logic of <a class="reference internal" href="../../../../libraries/validation/bean_validation.html#bean-validation"><span>Bean Validation</span></a> between the batches,
the validation process is shared by creating an interceptor in the example application.
For interceptor implementation, see the implementation of <cite>ValidateData.java</cite> in the example application.</p>
</div>
</dd>
</dl>
</div>
</div>
</div>


           </div>
           <div class="articleComments">
            
           </div>
          </div>
          <footer>

    <hr/>

    <div role="contentinfo">
        <p>
            &copy; Copyright 2010-2021, TIS Inc.
        </p>
    </div>
    Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org">Read the Docs</a>.

</footer>

        </div>
      </div>

    </section>

  </div>
  


  

    <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'../../../../../../',
            VERSION:'5u19',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true,
            SOURCELINK_SUFFIX: ''
        };
    </script>
      <script type="text/javascript" src="../../../../../../_static/jquery.js"></script>
      <script type="text/javascript" src="../../../../../../_static/underscore.js"></script>
      <script type="text/javascript" src="../../../../../../_static/doctools.js"></script>
      <script type="text/javascript" src="../../../../../../_static/custom.js"></script>

  

  
  
    <script type="text/javascript" src="../../../../../../_static/js/theme.js"></script>
  

  
  
  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>
   

</body>
</html>