


<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->
<head>
  <meta charset="utf-8">
  <meta http-equiv='content-language' content='ja'>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>7.1. Log Output &mdash; ∇Nablarch  5u19 documentation</title>
  

  
  
  
  

  

  
  
    

  

  
  
    <link rel="stylesheet" href="../../../_static/custom.css" type="text/css" />
  

  

  
  <link rel="canonical" href="https://nablarch.github.io/docs/LATEST/doc/application_framework/application_framework/libraries/log.html" />
  
    <link rel="top" title="∇Nablarch  5u19 documentation" href="../../../index.html"/>
        <link rel="up" title="7. Libraries Provided by Nablarch" href="index.html"/>
        <link rel="next" title="7.1.1.2.1. Output of Failure Log" href="log/failure_log.html"/>
        <link rel="prev" title="7. Libraries Provided by Nablarch" href="index.html"/>
 

  
  <script src="../../../_static/js/modernizr.min.js"></script>

</head>

<body class="wy-body-for-nav" role="document">

   
  <div class="wy-grid-for-nav">

    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search">
          
  
  <a href="../../../index.html" id="sidebar-title" class="icon"> ∇Nablarch 
  

  
    <div id="sidebar-version">Version: 5u19</div>
  </a>

  <div role="search">
    <form id="google-search-form" class="wy-form" method="get" action="https://www.google.co.jp/search">
      <input type="text" name="text" placeholder="Search docs on google" id="text"/>
      <input type="hidden" name="q" id="q"/>
    </form>
  </div>
    
    

        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
  
  
    <ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../../about_nablarch/index.html">What is the Nablarch?</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../about_nablarch/concept.html">Nablarch Concept</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../about_nablarch/concept.html#robustness">Robustness</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../about_nablarch/concept.html#testability">Testability</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../about_nablarch/concept.html#ready-to-use">Ready-to-Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../about_nablarch/mvn_module.html">Module List of Nablarch</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../about_nablarch/license.html">Information on Nablarch License</a></li>
</ul>
</li>
<li class="toctree-l1 current"><a class="reference internal" href="../../index.html">Nablarch Application Framework</a><ul class="current">
<li class="toctree-l2 current"><a class="reference internal" href="../index.html">Application Framework</a><ul class="current">
<li class="toctree-l3"><a class="reference internal" href="../nablarch/index.html">1. What is Nablarch Application Framework?</a></li>
<li class="toctree-l3"><a class="reference internal" href="../web/index.html">2. Web Application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../web_service/index.html">3. Web Service</a></li>
<li class="toctree-l3"><a class="reference internal" href="../batch/index.html">4. Batch Application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../messaging/index.html">5. Messaging</a></li>
<li class="toctree-l3"><a class="reference internal" href="../handlers/index.html">6. Standard Handler Provided by Nablarch</a></li>
<li class="toctree-l3 current"><a class="reference internal" href="index.html">7. Libraries Provided by Nablarch</a></li>
<li class="toctree-l3"><a class="reference internal" href="../blank_project/index.html">8. Blank Project</a></li>
<li class="toctree-l3"><a class="reference internal" href="../setting_guide/index.html">9. Nablarch Application Framework Configuration Guide</a></li>
<li class="toctree-l3"><a class="reference internal" href="../configuration/index.html">10. Default Configuration List</a></li>
<li class="toctree-l3"><a class="reference internal" href="../cloud_native/index.html">11. Nablarch Cloud Native Support</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../adaptors/index.html">Adaptor</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/log_adaptor.html">log Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/router_adaptor.html">Routing Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/webspheremq_adaptor.html">IBM WebSphere MQ Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/jaxrs_adaptor.html">JAX-RS Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/doma_adaptor.html">Doma Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/jsr310_adaptor.html">JSR310(Date and Time API)Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/mail_sender_freemarker_adaptor.html">E-mail FreeMarker Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/mail_sender_thymeleaf_adaptor.html">E-mail Thymeleaf Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/mail_sender_velocity_adaptor.html">E-mail Velocity Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/web_thymeleaf_adaptor.html">Web Application Thymeleaf Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/lettuce_adaptor.html">Lettuce Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/slf4j_adaptor.html">SLF4J Adapter</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/micrometer_adaptor.html">Micrometer Adapter</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../example/index.html">Example</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../example/index.html#procedure-to-build-the-environment">Procedure to build the environment</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../example/index.html#application-execution-procedure">Application execution procedure</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../extension_components/index.html">Nablarch extension component</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../extension_components/report/index.html">1. Form library</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../extension_components/workflow/doc/index.html">2. Workflow library</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../extension_components/workflow/tool/index.html">3. Workflow definition data generation tool</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../extension_components/etl/index.html">4. ETL</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../extension_components/etl/etl_maven_plugin.html">5. ETL Maven plugin</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../development_tools/index.html">Nablarch development tools</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../development_tools/java_static_analysis/index.html">1. Efficient Java Static Checks</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/java_static_analysis/index.html#conduct-syntax-check">1.1. Conduct syntax check</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/java_static_analysis/index.html#unify-the-format">1.2. Unify the format</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/java_static_analysis/index.html#check-if-unauthorized-apis-are-being-used">1.3. Check if unauthorized APIs are being used</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../development_tools/ui_dev/index.html">2. Front-end UI development platform for advanced users</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../development_tools/testing_framework/index.html">3. Testing framework</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/testing_framework/guide/development_guide/05_UnitTestGuide/index.html">3.1. How to Execute Unit Tests</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/testing_framework/guide/development_guide/06_TestFWGuide/index.html">3.2. How to Use the Automated Test Framework</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/testing_framework/guide/development_guide/08_TestTools/index.html">3.3. Tools Used in the Programming Phase</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../development_tools/toolbox/index.html">4. Useful Tools When Developing Applications</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/toolbox/JspStaticAnalysis/index.html">4.1. JSP Static Analysis Tool</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/toolbox/SqlExecutor/SqlExecutor.html">4.2. Nablarch SQL Executor</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/toolbox/JspVerifier/JspVerifier.html">4.3. Job Screen JSP Validation Tool</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../examples/index.html">Nablarch Implementation Examples</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/01/index.html">Sample Password Encryption Function Using Database</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/01/0101_PBKDF2PasswordEncryptor.html">Sample Password Encryption Function Using PBKDF2</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/01/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/01/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/01/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/01/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/02/index.html">Extended Validation Functions</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/02/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/02/index.html#email-address-validation">Email address validation</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/02/index.html#validation-of-japan-telephone-numbers">Validation of Japan telephone numbers</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/02/index.html#code-value-validation">Code value validation</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/03/index.html">Display a List of Search Results</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#how-to-use">How to Use</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#listsearchinfo-class">ListSearchInfo class</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#listsearchresult-tag">listSearchResult tag</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#sort-search-results">Sort search results</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#how-to-implement-displaying-a-list-of-all-search-results-on-a-single-screen">How to implement displaying a list of all search results on a single screen</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#how-to-implement-the-initial-display-of-search-results-with-the-default-search-conditions">How to implement the initial display of search results with the default search conditions</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#default-settings-for-the-search-result-list-display-function">Default settings for the search result list display function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#how-to-import-a-sample-implementation-tag-file-into-the-business-application">How to import a sample implementation (tag file) into the business application</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#tag-reference">Tag Reference</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/04/index.html">Extended Formatter Functions</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/04/0401_ExtendedDataFormatter.html">Data Formatter Expansion</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/04/0402_ExtendedFieldType.html">Field Type Expansion in the Data Formatter Function</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/05/index.html">Sample File Management Function Using Database</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/05/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/05/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/05/index.html#functions">Functions</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/05/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/05/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/06/index.html">CAPTCHA Function Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/06/06_Captcha_guide.html">How to Incorporate the CAPTCHA Function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/06/index.html#delivery-package">Delivery package</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/06/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/06/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/06/index.html#how-to-use">How to Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/07/index.html">Sample UserAgent Information Acquisition Function</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/07/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/07/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/07/index.html#description-of-configuration">Description of configuration</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/07/index.html#use-case">Use case</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/08/index.html">Sample of HTML Email Send Function</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/08/index.html#summary">Summary</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/08/index.html#request">Request</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/08/index.html#structure">Structure</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/08/index.html#implementation-examples">Implementation examples</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/09/index.html">How to Use a Sample to Send a Digitally Signed Email Using Bouncycastle</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/09/index.html#environment-preparation">Environment preparation</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/09/index.html#structure-of-digitally-signed-email-send-function">Structure of digitally signed email send function</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/09/index.html#preparation-of-configuration-file">Preparation of configuration file</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/09/index.html#execution">Execution</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/10/index.html">How to Use the Log Aggregation Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/10/index.html#list-of-samples-provided">List of samples provided</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/11/index.html">Messaging Platform Test Simulator Sample</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/11/index.html#uses">Uses</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/11/index.html#features">Features</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/11/index.html#request">Request</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/11/index.html#how-to-use">How to use</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/11/index.html#expansion-example">Expansion example</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../nablarch_api/index.html">Nablarch API</a></li>
</ul>

  

        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" role="navigation" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../../../index.html">∇Nablarch </a>
        
      </nav>


      
      <div class="wy-nav-content">
        <div class="rst-content">
          

 



<div role="navigation" aria-label="breadcrumbs navigation">
  <ul class="wy-breadcrumbs">
    <li><a href="../../../index.html">Docs</a> &raquo;</li>
      
          <li><a href="../../index.html">Nablarch Application Framework</a> &raquo;</li>
      
          <li><a href="../index.html">Application Framework</a> &raquo;</li>
      
          <li><a href="index.html">7. Libraries Provided by Nablarch</a> &raquo;</li>
      
    <li>7.1. Log Output</li>
    <li class="wy-breadcrumbs-aside">
      <a href="https://github.com/nablarch" class="fa fa-github">GitHub</a>
    </li>
    <li class="wy-breadcrumbs-aside">
        <a href="https://nablarch.github.io/docs/LATEST/doc/index.html" class="ja">日本語</a>
    </li>
  </ul>
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  <div class="section" id="log-output">
<span id="log"></span><h1>7.1. Log Output<a class="headerlink" href="#log-output" title="Permalink to this headline">¶</a></h1>
<div class="contents local topic" id="table-of-contents">
<p class="topic-title first">Table of contents</p>
<ul class="simple">
<li><a class="reference internal" href="#function-overview" id="id13">Function overview</a><ul>
<li><a class="reference internal" href="#implementation-of-the-log-output-function-can-be-replaced" id="id14">Implementation of the log output function can be replaced</a></li>
<li><a class="reference internal" href="#provides-various-log-output-functions-in-advance" id="id15">Provides various log output functions in advance</a></li>
</ul>
</li>
<li><a class="reference internal" href="#module-list" id="id16">Module list</a></li>
<li><a class="reference internal" href="#how-to-use" id="id17">How to use</a><ul>
<li><a class="reference internal" href="#output-the-log" id="id18">Output the log.</a></li>
<li><a class="reference internal" href="#configure-log-output" id="id19">Configure log output</a></li>
<li><a class="reference internal" href="#overwrite-log-output-configuration" id="id20">Overwrite log output configuration</a></li>
<li><a class="reference internal" href="#specify-the-log-format" id="id21">Specify the log format</a></li>
<li><a class="reference internal" href="#configure-various-logs" id="id22">Configure various logs</a></li>
</ul>
</li>
<li><a class="reference internal" href="#expansion-example" id="id23">Expansion example</a><ul>
<li><a class="reference internal" href="#add-logwriter" id="id24">Add LogWriter</a></li>
<li><a class="reference internal" href="#add-logformatter" id="id25">Add LogFormatter</a></li>
<li><a class="reference internal" href="#add-log-output-items-placeholders" id="id26">Add log output items (placeholders)</a></li>
<li><a class="reference internal" href="#do-not-output-the-log-initialization-message" id="id27">Do not output the log initialization message</a></li>
</ul>
</li>
<li><a class="reference internal" href="#notes-on-using-the-synchronousfilelogwriter" id="id28">Notes on using the SynchronousFileLogWriter</a></li>
<li><a class="reference internal" href="#how-to-use-logpublisher" id="id29">How to use LogPublisher</a></li>
<li><a class="reference internal" href="#log-level-definition" id="id30">Log level definition</a></li>
<li><a class="reference internal" href="#framework-log-output-policy" id="id31">Framework log output policy</a></li>
<li><a class="reference internal" href="#functional-comparison-with-log4j" id="id32">Functional comparison with log4j</a></li>
</ul>
</div>
<p>Provides a function to output logs.</p>
<div class="section" id="function-overview">
<h2><a class="toc-backref" href="#id13">7.1.1. Function overview</a><a class="headerlink" href="#function-overview" title="Permalink to this headline">¶</a></h2>
<div class="section" id="implementation-of-the-log-output-function-can-be-replaced">
<h3><a class="toc-backref" href="#id14">7.1.1.1. Implementation of the log output function can be replaced</a><a class="headerlink" href="#implementation-of-the-log-output-function-can-be-replaced" title="Permalink to this headline">¶</a></h3>
<p>The log output is composed of three processes, and the implementation of each of which can be replaced.</p>
<blockquote>
<div><img alt="../../../_images/log-structure.png" src="../../../_images/log-structure.png" />
</div></blockquote>
<p>Can be replaced with the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/LogWriter.html" title="nablarch.core.log.basic.LogWriter">LogWriter</a>  and <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/LogFormatter.html" title="nablarch.core.log.basic.LogFormatter">LogFormatter</a> units,
and if these do not meet the requirements <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/Logger.html" title="nablarch.core.log.Logger">Logger</a> / <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/LoggerFactory.html" title="nablarch.core.log.LoggerFactory">LoggerFactory</a> can be implemented to replace almost all processes.</p>
<p>For example, if the use of open source log output library is preferred,
replacing <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/Logger.html" title="nablarch.core.log.Logger">Logger</a> / <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/LoggerFactory.html" title="nablarch.core.log.LoggerFactory">LoggerFactory</a> is better.</p>
<p>Note that the logging framework with extensive operating experience in open source, is already equipped with a dedicated logger/logger factory.</p>
<p>For details, see <a class="reference internal" href="../../adaptors/log_adaptor.html#log-adaptor"><span>log Adapter</span></a> .</p>
<p>For comparison of features between this function and the frequently utilized log4j, see  <a class="reference internal" href="#log-functional-comparison"><span>Functional comparison with log4j</span></a> .</p>
<p>The default class provided by the log output function is shown.</p>
<dl class="docutils">
<dt>Logger/LoggerFactory</dt>
<dd><ul class="first last simple">
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/BasicLogger.html" title="nablarch.core.log.basic.BasicLogger">BasicLogger</a></li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/BasicLoggerFactory.html" title="nablarch.core.log.basic.BasicLoggerFactory">BasicLoggerFactory</a></li>
</ul>
</dd>
</dl>
<dl class="docutils" id="log-log-writers">
<dt>LogWriter</dt>
<dd><ul class="first last simple">
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/FileLogWriter.html" title="nablarch.core.log.basic.FileLogWriter">FileLogWriter (Output to file. Rotation by file size)</a></li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/SynchronousFileLogWriter.html" title="nablarch.core.log.basic.SynchronousFileLogWriter">SynchronousFileLogWriter (output from multiple processes to one file)</a></li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/StandardOutputLogWriter.html" title="nablarch.core.log.basic.StandardOutputLogWriter">StandardOutputLogWriter (output to standard output)</a></li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/LogPublisher.html" title="nablarch.core.log.basic.LogPublisher">LogPublisher (output to any listener)</a></li>
</ul>
</dd>
</dl>
<dl class="docutils" id="log-log-formatters">
<dt>LogFormatter</dt>
<dd><ul class="first last simple">
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/BasicLogFormatter.html" title="nablarch.core.log.basic.BasicLogFormatter">BasicLogFormatter  (format by pattern string)</a></li>
</ul>
</dd>
</dl>
<div class="admonition important">
<p class="first admonition-title">Important</p>
<p class="last">If you want to use <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/SynchronousFileLogWriter.html" title="nablarch.core.log.basic.SynchronousFileLogWriter">SynchronousFileLogWriter</a>,
see  <a class="reference internal" href="#log-synchronous-file-log-writer-attention"><span>Notes on using the SynchronousFileLogWriter</span></a> .</p>
</div>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">For the log level used in the log output function, see <a class="reference internal" href="#log-log-level"><span>Log level definition</span></a> .</p>
</div>
</div>
<div class="section" id="provides-various-log-output-functions-in-advance">
<h3><a class="toc-backref" href="#id15">7.1.1.2. Provides various log output functions in advance</a><a class="headerlink" href="#provides-various-log-output-functions-in-advance" title="Permalink to this headline">¶</a></h3>
<p>This framework provides the output function of various logs commonly required by the applications.
The log format can be changed with configuration and used according to the application requirements.
As described in the <a class="reference internal" href="#log-app-log-setting"><span>Configure various logs</span></a>, the output function of various logs is performing formatting only,
and this function is used for the output processing of the logs.
The blank project generated from the archetype provided by Nablarch has various log formats set.
See <a class="reference download internal" href="../../../_downloads/default-configuration-list.xlsx" download=""><code class="xref download docutils literal"><span class="pre">Default</span> <span class="pre">configuration</span> <span class="pre">list</span></code></a> for more information.</p>
<div class="toctree-wrapper compound">
</div>
<table border="1" class="colwidths-given white-space-normal docutils" id="id9">
<caption><span class="caption-text">Log type</span><a class="headerlink" href="#id9" title="Permalink to this table">¶</a></caption>
<colgroup>
<col width="20%" />
<col width="80%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Log type</th>
<th class="head">Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td><a class="reference internal" href="log/failure_log.html#failure-log"><span>Failure notification log</span></a></td>
<td>Outputs the information necessary to identify the person in charge of primary isolation during failure incidents.</td>
</tr>
<tr class="row-odd"><td><a class="reference internal" href="log/failure_log.html#failure-log"><span>Failure analysis log</span></a></td>
<td>Outputs information necessary to identify the cause of failure.</td>
</tr>
<tr class="row-even"><td><a class="reference internal" href="log/sql_log.html#sql-log"><span>SQL log</span></a></td>
<td>Outputs the SQL statement execution time and SQL statement to be used for performance tuning of SQL statement execution that is likely to cause acute performance degradation.</td>
</tr>
<tr class="row-odd"><td><a class="reference internal" href="log/performance_log.html#performance-log"><span>Performance log</span></a></td>
<td>Outputs execution time and memory usage for performance tuning of an arbitrary process.</td>
</tr>
<tr class="row-even"><td><a class="reference internal" href="log/http_access_log.html#http-access-log"><span>HTTP access log</span></a></td>
<td>Outputs the information to grasp the execution status of application in the web application.
The log includes the output information required to measure the application performance and also for load measurement of the application.
It is also used as a trace log that outputs all request and response information to detect unauthorized use of the application.</td>
</tr>
<tr class="row-odd"><td><a class="reference internal" href="log/messaging_log.html#messaging-log"><span>Messaging log</span></a></td>
<td>The log outputs information for grasping the status of message send and receive in the messaging process.</td>
</tr>
</tbody>
</table>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">In this framework,  <a class="reference internal" href="log/failure_log.html#failure-log"><span>Failure notification log</span></a>  and  <a class="reference internal" href="log/failure_log.html#failure-log"><span>Failure analysis log</span></a>  are collectively called failure log.</p>
</div>
</div>
</div>
<div class="section" id="module-list">
<h2><a class="toc-backref" href="#id16">7.1.2. Module list</a><a class="headerlink" href="#module-list" title="Permalink to this headline">¶</a></h2>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>com.nablarch.framework<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>nablarch-core<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
<span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>com.nablarch.framework<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>nablarch-core-applog<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>

<span class="c">&lt;!-- Only when using SQL logs--&gt;</span>
<span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>com.nablarch.framework<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>nablarch-core-jdbc<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>

<span class="c">&lt;!-- Only when using HTTP access logs--&gt;</span>
<span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>com.nablarch.framework<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>nablarch-fw-web<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>

<span class="c">&lt;!-- Only when using messaging logs --&gt;</span>
<span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>com.nablarch.framework<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>nablarch-fw-messaging<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</pre></div>
</div>
</div>
<div class="section" id="how-to-use">
<h2><a class="toc-backref" href="#id17">7.1.3. How to use</a><a class="headerlink" href="#how-to-use" title="Permalink to this headline">¶</a></h2>
<div class="section" id="output-the-log">
<h3><a class="toc-backref" href="#id18">7.1.3.1. Output the log.</a><a class="headerlink" href="#output-the-log" title="Permalink to this headline">¶</a></h3>
<p>Use <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/Logger.html" title="nablarch.core.log.Logger">Logger</a> to output logs Get <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/Logger.html" title="nablarch.core.log.Logger">Logger</a>  from <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/LoggerManager.html" title="nablarch.core.log.LoggerManager">LoggerManager</a> .</p>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="c1">// Get logger by specifying a class.</span>
<span class="c1">// Logger is stored in class variable.</span>
<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">LOGGER</span> <span class="o">=</span> <span class="n">LoggerManager</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">UserManager</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</pre></div>
</div>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="c1">// Check the log output in advance and output the log.</span>
<span class="k">if</span> <span class="o">(</span><span class="n">LOGGER</span><span class="o">.</span><span class="na">isDebugEnabled</span><span class="o">())</span> <span class="o">{</span>
    <span class="n">String</span> <span class="n">message</span> <span class="o">=</span> <span class="s">&quot;userId[&quot;</span> <span class="o">+</span> <span class="n">user</span><span class="o">.</span><span class="na">getId</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;],name[&quot;</span> <span class="o">+</span> <span class="n">user</span><span class="o">.</span><span class="na">getName</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot;]&quot;</span><span class="o">;</span>
    <span class="n">LOGGER</span><span class="o">.</span><span class="na">logDebug</span><span class="o">(</span><span class="n">message</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>
</div>
<p>Specify the logger name in the acquisition of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/Logger.html" title="nablarch.core.log.Logger">Logger</a> .
A string or class can be specified for the logger name.
If a class is specified, FQCN of the specified class will be the logger name.</p>
<div class="admonition important">
<p class="first admonition-title">Important</p>
<p class="last">At the level where the log is constantly being output in the application,
advance check is not required as the readability of the source code is reduced.
For example, it is not necessary to check in advance from the FATAL level to the INFO level if the log level output during production operation has to be changed to the INFO level.</p>
</div>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">Specify the logger name (SQL, MONITOR, etc.) indicating the usage if required to output logs for a specific purpose such as SQL log or monitoring log, and specify the FQCN of the class for other cases.</p>
</div>
</div>
<div class="section" id="configure-log-output">
<span id="log-basic-setting"></span><h3><a class="toc-backref" href="#id19">7.1.3.2. Configure log output</a><a class="headerlink" href="#configure-log-output" title="Permalink to this headline">¶</a></h3>
<p>Configure the log output in the property file.</p>
<dl class="docutils">
<dt>Property file location</dt>
<dd><p class="first">Use  <strong>log.properties</strong>  directly below the classpath.
If the location is to be changed, specify the file path in the system property with  <strong>nablarch.log.filePath</strong>  as a key.
See <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/util/FileUtil.html#getResource-java.lang.String-" title="nablarch.core.util.FileUtil.getResource(java.lang.String)">FileUtil#getResource</a>  how to specify file path.</p>
<div class="last highlight-bash"><div class="highlight"><pre><span></span>&gt;java -Dnablarch.log.filePath<span class="o">=</span>classpath:nablarch/example/log.properties ...
</pre></div>
</div>
</dd>
<dt>Description rules of property files</dt>
<dd><p class="first">The description rules of the property file are shown below.</p>
<dl class="last docutils">
<dt>LoggerFactory</dt>
<dd><p class="first"></p>
<dl class="last docutils">
<dt>Description rules</dt>
<dd><p class="first"></p>
<dl class="last docutils">
<dt>loggerFactory.className</dt>
<dd>Specify FQCN of the class that implements loggerFactory.className LoggerFactory.
To use this function, specify <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/BasicLoggerFactory.html" title="nablarch.core.log.basic.BasicLoggerFactory">BasicLoggerFactory</a> .</dd>
</dl>
</dd>
<dt>Example of the description</dt>
<dd><div class="first last highlight-properties"><div class="highlight"><pre><span></span><span class="c"># LoggerFactory determines the implementation (this function, Log4J, etc.) used for log output.</span>
<span class="na">loggerFactory.className</span><span class="o">=</span><span class="s">nablarch.core.log.basic.BasicLoggerFactory</span>
</pre></div>
</div>
</dd>
</dl>
</dd>
<dt>LogWriter</dt>
<dd><p class="first"></p>
<dl class="last docutils">
<dt>Description rules</dt>
<dd><p class="first"></p>
<dl class="last docutils">
<dt>writerNames</dt>
<dd>Specify the names of all LogWriters that use writerNames. Use comma as a delimiter if more than one is specified.</dd>
<dt>writer. &lt;name&gt;.className</dt>
<dd>Specify FQCN of the class that implemented LogWriter.</dd>
<dt>writer. &lt;name&gt;.&lt;property name&gt;</dt>
<dd>Specify the value to be set in the property for each LogWriter.
Refer to Javadoc of the LogWriter used for the properties that can be specified.</dd>
</dl>
</dd>
<dt>Example of the description</dt>
<dd><div class="first last highlight-properties"><div class="highlight"><pre><span></span><span class="c"># Define 2 names.</span>
<span class="na">writerNames</span><span class="o">=</span><span class="s">appLog,stdout</span>

<span class="c"># Configure appLog.</span>
<span class="na">writer.appLog.className</span><span class="o">=</span><span class="s">nablarch.core.log.basic.FileLogWriter</span>
<span class="na">writer.appLog.filePath</span><span class="o">=</span><span class="s">/var/log/app/app.log</span>

<span class="c"># Configure stdout.</span>
<span class="na">writer.stdout.className</span><span class="o">=</span><span class="s">nablarch.core.log.basic.StandardOutputLogWriter</span>
</pre></div>
</div>
</dd>
</dl>
</dd>
<dt>Logger configuration</dt>
<dd><p class="first"></p>
<dl class="last docutils">
<dt>Description rules</dt>
<dd><p class="first"></p>
<dl class="last docutils">
<dt>availableLoggersNamesOrder</dt>
<dd><p class="first">Specify the names of all Logger configurations that use availableLoggersNamesOrder. Use comma as a delimiter if more than one is specified.</p>
<div class="admonition important">
<p class="first admonition-title">Important</p>
<p>Note that the order of description in the availableLoggersNamesOrder property has a meaning.</p>
<p>The acquisition process <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/Logger.html" title="nablarch.core.log.Logger">Logger</a>  matches  <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/Logger.html" title="nablarch.core.log.Logger">Logger</a>  in the order described here for the logger name specified by the class that performs log output and returns the first match <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/Logger.html" title="nablarch.core.log.Logger">Logger</a> .</p>
<p>For example, if the description order of availableLoggersNamesOrder in the following description example is described as availableLoggersNamesOrder = root, sql, all logger acquisitions will end up matching the logger configuration  <code class="docutils literal"><span class="pre">root</span></code> .
As a result, even if the log is output with the logger name <code class="docutils literal"><span class="pre">SQL</span></code> , the log is not output to  <code class="docutils literal"><span class="pre">sqlLog</span></code>  but is output to the  <code class="docutils literal"><span class="pre">appLog</span></code>  specified in the logger configuration  <code class="docutils literal"><span class="pre">root</span></code> .</p>
<p class="last">Therefore, the availableLoggersNamesOrder property is described in sequence from the logger configuration that specifies a more restrictive regular expression.</p>
</div>
<div class="last admonition important">
<p class="first admonition-title">Important</p>
<p>The names of the logger configuration specified in the availableLoggersNamesOrder and loggers.* are required to match.
The match is checked in the initial process of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/BasicLoggerFactory.html" title="nablarch.core.log.basic.BasicLoggerFactory">BasicLoggerFactory</a> ,
and an exception is thrown if they do not match.
For example, if <code class="docutils literal"><span class="pre">access</span></code> is removed from availableLoggersNamesOrder in the above configuration, an exception will be thrown.</p>
<p class="last">This check is performed to avoid the occurrence of configuration omissions.
If  <code class="docutils literal"><span class="pre">access</span></code>  is removed from avaialableLoggersNameOrder in the above configuration, it is necessary to explicitly remove the loggers.access.* configuration.</p>
</div>
</dd>
<dt>loggers.&lt;name&gt;.nameRegex</dt>
<dd>loggers.&lt;name&gt;.nameRegex specifies the regular expression used to match the logger name.
The regular expressions are used to narrow down the loggers that are the targets of logger configuration.
Matched to logger name specified when acquiring the logger (that is, the logger name specified in the argument of  <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/LoggerManager.html#get-java.lang.String-" title="nablarch.core.log.LoggerManager.get(java.lang.String)">LoggerManager#get</a>).</dd>
<dt>loggers.&lt;name&gt;.level</dt>
<dd>Specify the name of loggers.&lt;Name&gt;.level <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/LogLevel.html" title="nablarch.core.log.basic.LogLevel">LogLevel</a> .
All the logs that are above the level specified here will be output.</dd>
<dt>loggers.&lt;name&gt;.writerNames</dt>
<dd>loggers.&lt;name&gt;.writerNames specifies the name of the LogWriter, which is the output destination.
Use comma as a delimiter if more than one is specified.
Logs are written for all the LogWriters specified here.</dd>
</dl>
</dd>
<dt>Example of the description</dt>
<dd><div class="first last highlight-properties"><div class="highlight"><pre><span></span><span class="c"># Define the names of the two logger configurations.</span>
<span class="na">availableLoggersNamesOrder</span><span class="o">=</span><span class="s">sql,root</span>

<span class="c"># Set root.</span>
<span class="na">loggers.root.nameRegex</span><span class="o">=</span><span class="s">.*</span>
<span class="na">loggers.root.level</span><span class="o">=</span><span class="s">WARN</span>
<span class="na">loggers.root.writerNames</span><span class="o">=</span><span class="s">appLog</span>

<span class="c">#Set sql.</span>
<span class="na">loggers.sql.nameRegex</span><span class="o">=</span><span class="s">SQL</span>
<span class="na">loggers.sql.level</span><span class="o">=</span><span class="s">DEBUG</span>
<span class="na">loggers.sql.writerNames</span><span class="o">=</span><span class="s">sqlLog</span>
</pre></div>
</div>
</dd>
</dl>
</dd>
</dl>
</dd>
<dt>Description example of property files</dt>
<dd><p class="first">A description example of the entire property file is shown below.</p>
<div class="highlight-properties"><div class="highlight"><pre><span></span><span class="na">loggerFactory.className</span><span class="o">=</span><span class="s">nablarch.core.log.basic.BasicLoggerFactory</span>

<span class="na">writerNames</span><span class="o">=</span><span class="s">appLog,sqlLog,monitorLog,stdout</span>

<span class="c"># Example of configuring a log file for application</span>
<span class="na">writer.appLog.className</span><span class="o">=</span><span class="s">nablarch.core.log.basic.FileLogWriter</span>
<span class="na">writer.appLog.filePath</span><span class="o">=</span><span class="s">/var/log/app/app.log</span>

<span class="c"># Example of configuring a log file for SQL output</span>
<span class="na">writer.sqlLog.className</span><span class="o">=</span><span class="s">nablarch.core.log.basic.FileLogWriter</span>
<span class="na">writer.sqlLog.filePath</span><span class="o">=</span><span class="s">/var/log/app/sql.log</span>

<span class="c"># Example of configuring a log file for monitoring</span>
<span class="na">writer.monitorLog.className</span><span class="o">=</span><span class="s">nablarch.core.log.basic.FileLogWriter</span>
<span class="na">writer.monitorLog.filePath</span><span class="o">=</span><span class="s">/var/log/app/monitoring.log</span>

<span class="c"># Configuring example for standard output</span>
<span class="na">writer.stdout.className</span><span class="o">=</span><span class="s">nablarch.core.log.basic.StandardOutputLogWriter</span>

<span class="na">availableLoggersNamesOrder</span><span class="o">=</span><span class="s">sql,monitoring,access,validation,root</span>

<span class="c"># Example of configuring all logger names for log output</span>
<span class="c"># Output WARN level or higher to appLog for all logger acquisition.</span>
<span class="na">loggers.root.nameRegex</span><span class="o">=</span><span class="s">.*</span>
<span class="na">loggers.root.level</span><span class="o">=</span><span class="s">WARN</span>
<span class="na">loggers.root.writerNames</span><span class="o">=</span><span class="s">appLog</span>

<span class="c"># Example of configuring a specific logger name as a log output target.</span>
<span class="c"># For logger acquisition with &quot;MONITOR&quot; specified in logger name</span>
<span class="c"># Output ERROR level or higher to appLog, monitorLog.</span>
<span class="na">loggers.monitoring.nameRegex</span><span class="o">=</span><span class="s">MONITOR</span>
<span class="na">loggers.monitoring.level</span><span class="o">=</span><span class="s">ERROR</span>
<span class="na">loggers.monitoring.writerNames</span><span class="o">=</span><span class="s">appLog,monitorLog</span>

<span class="c"># Example of configuring a specific logger name as a log output target.</span>
<span class="c"># For logger acquisition with &quot;SQL&quot; specified in logger name</span>
<span class="c"># Output DEBUG level or higher to sqlLog.</span>
<span class="na">loggers.sql.nameRegex</span><span class="o">=</span><span class="s">SQL</span>
<span class="na">loggers.sql.level</span><span class="o">=</span><span class="s">DEBUG</span>
<span class="na">loggers.sql.writerNames</span><span class="o">=</span><span class="s">sqlLog</span>

<span class="c"># Example of configuring a specific class as a log output target.</span>
<span class="c"># For logger acquisition with &quot;app.user.UserManager&quot; specified in logger name</span>
<span class="c"># Output INFO level or higher to appLog and stdout.</span>
<span class="na">loggers.access.nameRegex</span><span class="o">=</span><span class="s">app\\.user\\.UserManager</span>
<span class="na">loggers.access.level</span><span class="o">=</span><span class="s">INFO</span>
<span class="na">loggers.access.writerNames</span><span class="o">=</span><span class="s">appLog,stdout</span>

<span class="c"># Configuration example for targeting specific packages and below for log output.</span>
<span class="c"># For logger acquisition in which the name starting from &quot;nablarch.core.validation&quot; is specified in logger name</span>
<span class="c"># output DEBUG level or higher to stdout.</span>
<span class="na">loggers.validation.nameRegex</span><span class="o">=</span><span class="s">nablarch\\.core\\.validation\\..*</span>
<span class="na">loggers.validation.level</span><span class="o">=</span><span class="s">DEBUG</span>
<span class="na">loggers.validation.writerNames</span><span class="o">=</span><span class="s">stdout</span>
</pre></div>
</div>
<div class="last admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">Preparing one logger configuration that matches all the log output and specifying the logger configuration at the end of availableLoggersNamesOrder is recommended.
Outputs of important logs are prevented from being missed even if the configuration is omitted.
Refer to the logger configuration  <code class="docutils literal"><span class="pre">root</span></code>  in the above description example for the configuration example.</p>
</div>
</dd>
</dl>
</div>
<div class="section" id="overwrite-log-output-configuration">
<h3><a class="toc-backref" href="#id20">7.1.3.3. Overwrite log output configuration</a><a class="headerlink" href="#overwrite-log-output-configuration" title="Permalink to this headline">¶</a></h3>
<p>The log output configuration can be overwritten by using system property and specifying the value with the same key name as the property file.
By this, it is possible to prepare a common property file and change the log output configuration for each process.</p>
<p>Below is an example of how to change the log level of logger configuration <code class="docutils literal"><span class="pre">root</span></code> to INFO.</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span>&gt;java -Dloggers.root.level<span class="o">=</span>INFO ...
</pre></div>
</div>
</div>
<div class="section" id="specify-the-log-format">
<span id="log-log-format"></span><h3><a class="toc-backref" href="#id21">7.1.3.4. Specify the log format</a><a class="headerlink" href="#specify-the-log-format" title="Permalink to this headline">¶</a></h3>
<p>This function provides <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/BasicLogFormatter.html" title="nablarch.core.log.basic.BasicLogFormatter">BasicLogFormatter</a> as <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/LogFormatter.html" title="nablarch.core.log.basic.LogFormatter">LogFormatter</a> that can be used for general purpose.</p>
<p>Placeholders are used to specify the format in <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/BasicLogFormatter.html" title="nablarch.core.log.basic.BasicLogFormatter">BasicLogFormatter</a> .
For placeholders that can be used, see <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/BasicLogFormatter.html" title="nablarch.core.log.basic.BasicLogFormatter">BasicLogFormatter</a>.</p>
<p>A configuration example for format is shown below.
Specify the format in the LogWriter property.</p>
<div class="highlight-properties"><div class="highlight"><pre><span></span><span class="c"># When specifying the format, specify BasicLogFormatter explicitly.</span>
<span class="na">writer.appLog.formatter.className</span><span class="o">=</span><span class="s">nablarch.core.log.basic.BasicLogFormatter</span>

<span class="c"># Specify the format using the placeholder.</span>
<span class="na">writer.appLog.formatter.format</span><span class="o">=</span><span class="s">$date$ -$logLevel$- $loggerName$ $message$</span>

<span class="c"># Specify the pattern to be used for date and time format.</span>
<span class="c">#If not specified, &quot;yyyy-MM-ddHH:mm:ss.SSS&quot; is used.</span>
<span class="na">writer.appLog.formatter.datePattern</span><span class="o">=</span><span class="s">yyyy/MM/dd HH:mm:ss[SSS]</span>

<span class="c"># Specify the log level text</span>
<span class="c"># If not specified, the LogLevel enumeration type (FATAL, INFO, etc.) names will be used.</span>
<span class="na">writer.appLog.formatter.label.fatal</span><span class="o">=</span><span class="s">F</span>
<span class="na">writer.appLog.formatter.label.error</span><span class="o">=</span><span class="s">E</span>
<span class="na">writer.appLog.formatter.label.warn</span><span class="o">=</span><span class="s">W</span>
<span class="na">writer.appLog.formatter.label.info</span><span class="o">=</span><span class="s">I</span>
<span class="na">writer.appLog.formatter.label.debug</span><span class="o">=</span><span class="s">D</span>
<span class="na">writer.appLog.formatter.label.trace</span><span class="o">=</span><span class="s">T</span>
</pre></div>
</div>
<p>The following items can be output in <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/BasicLogFormatter.html" title="nablarch.core.log.basic.BasicLogFormatter">BasicLogFormatter</a> to identify the status of the output log.
Descriptions are provided for these output items.</p>
<ul class="simple">
<li><a class="reference internal" href="#log-boot-process"><span>Boot process</span></a></li>
<li><a class="reference internal" href="#log-processing-system"><span>Processing architecture</span></a></li>
<li><a class="reference internal" href="#log-execution-id"><span>Execution ID</span></a></li>
</ul>
<dl class="docutils" id="log-boot-process">
<dt>Boot process</dt>
<dd><p class="first">The boot process is the name used to identify the execution environment in which the application was started.
By using a name that combines the server name and identification string such as JOBID for the boot process,
the execution environment of the log output from multiple processes of the same server can be specified.
The boot process is assumed to define a system such as an ID system for each project.</p>
<p class="last">The boot process is specified in the system property with the  <code class="docutils literal"><span class="pre">nablarch.bootProcess</span></code>  key.
If the system property is not specified, the boot process will be blank.</p>
</dd>
</dl>
<dl class="docutils" id="log-processing-system">
<dt>Processing architecture</dt>
<dd><p class="first">Processing architecture refers to web, batch, etc.
If the application process architecture is to be identified separately, it is specified and used for each project.</p>
<p class="last">The process architecture is specified in the property file that was explained in <a class="reference internal" href="#log-basic-setting"><span>Configure log output</span></a> , with the key <code class="docutils literal"><span class="pre">nablarch.processingSystem</span></code> .
If the property is not specified, it will be blank.</p>
</dd>
</dl>
<dl class="docutils" id="log-execution-id">
<dt>Execution ID</dt>
<dd><p class="first">The execution ID is given with respect to the request ID to identify each execution of the application.
Since the execution ID is issued based on the number of executions for one request ID, the relationship between request ID and run time ID is one to many.</p>
<p>When multiple logs are output, the execution ID is used to link the multiple logs that have been output.</p>
<p>The execution ID is issued at the timing of initializing : <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/ThreadContext.html" title="nablarch.core.ThreadContext">ThreadContext</a>, and is configured in <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/ThreadContext.html" title="nablarch.core.ThreadContext">ThreadContext</a>.</p>
<dl class="last docutils">
<dt>ID system for Execution ID</dt>
<dd><div class="first last highlight-none"><div class="highlight"><pre><span></span># Added only when the boot process is specified.
Boot process + system date and time (yyyyMMddHHmmssSSS) + serial number (4 digits)
</pre></div>
</div>
</dd>
</dl>
</dd>
</dl>
<div class="admonition important">
<p class="first admonition-title">Important</p>
<p class="last">When the request ID, execution ID and user ID are output, <a class="reference internal" href="../handlers/common/thread_context_handler.html#thread-context-handler"><span>Thread Context Variable Management Handler</span></a> must be included in the handler configuration
as they are acquired from  <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/ThreadContext.html" title="nablarch.core.ThreadContext">ThreadContext</a>.
In particular, you need to set a value for the user ID in your application
by referring to <a class="reference internal" href="../handlers/common/thread_context_handler.html#thread-context-handler-user-id-attribute-setting"><span>Setting a User ID</span></a>.</p>
</div>
<dl class="docutils">
<dt>When line feed code and tab character are to be included</dt>
<dd><p class="first">When line feed code and tab character are to be included in the format, use the same description as Java shown below.</p>
<div class="highlight-none"><div class="highlight"><pre><span></span>Line feed code \n
Tab character   \t
</pre></div>
</div>
<p>The line feed code is obtained from  <code class="docutils literal"><span class="pre">line.separator</span></code>  included in the system property of standard Java.
Therefore, the OS line feed code is used if the  <code class="docutils literal"><span class="pre">line.separator</span></code>  in the system property is not changed.</p>
<div class="last admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">Strings <code class="docutils literal"><span class="pre">\n</span></code> and <code class="docutils literal"><span class="pre">\t</span></code> cannot be output by <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/BasicLogFormatter.html" title="nablarch.core.log.basic.BasicLogFormatter">BasicLogFormatter</a> .</p>
</div>
</dd>
</dl>
</div>
<div class="section" id="configure-various-logs">
<span id="log-app-log-setting"></span><h3><a class="toc-backref" href="#id22">7.1.3.5. Configure various logs</a><a class="headerlink" href="#configure-various-logs" title="Permalink to this headline">¶</a></h3>
<p>The output function of each log only performs the format process according to the purpose of each log, and the process of log output uses this function.
In other words, the message specified in  <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/Logger.html" title="nablarch.core.log.Logger">Logger</a> is created in the output function of various logs.</p>
<p>Therefore, to use the output function of various logs, configurations are required for various logs in addition to <a class="reference internal" href="#log-basic-setting"><span>Configure log output</span></a> .
Configure various logs in the property file.</p>
<dl class="docutils">
<dt>Property file location</dt>
<dd><p class="first">Use  <strong>app-log.properties</strong>  directly below the classpath. If the location is to be changed, specify the file path in the system property with  <strong>nablarch.appLog.filePath</strong>  as a key.
See <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/util/FileUtil.html#getResource-java.lang.String-" title="nablarch.core.util.FileUtil.getResource(java.lang.String)">FileUtil#getResource</a>  how to specify file path.</p>
<div class="last highlight-bash"><div class="highlight"><pre><span></span>&gt;java -Dnablarch.appLog.filePath<span class="o">=</span>file:/var/log/app/app-log.properties ...
</pre></div>
</div>
</dd>
<dt>Description rules of property files</dt>
<dd><p class="first">Refer to the following, as the rules differs for each log.</p>
<ul class="last simple">
<li><a class="reference internal" href="log/failure_log.html#failure-log-setting"><span>Configure the failure log</span></a></li>
<li><a class="reference internal" href="log/sql_log.html#sql-log-setting"><span>Configure the SQL log</span></a></li>
<li><a class="reference internal" href="log/performance_log.html#performance-log-setting"><span>Configure performance log</span></a></li>
<li><a class="reference internal" href="log/http_access_log.html#http-access-log-setting"><span>Configure the HTTP access log</span></a></li>
<li><a class="reference internal" href="log/messaging_log.html#messaging-log-setting"><span>Configure the messaging log</span></a></li>
</ul>
</dd>
</dl>
</div>
</div>
<div class="section" id="expansion-example">
<h2><a class="toc-backref" href="#id23">7.1.4. Expansion example</a><a class="headerlink" href="#expansion-example" title="Permalink to this headline">¶</a></h2>
<div class="section" id="add-logwriter">
<span id="log-add-log-writer"></span><h3><a class="toc-backref" href="#id24">7.1.4.1. Add LogWriter</a><a class="headerlink" href="#add-logwriter" title="Permalink to this headline">¶</a></h3>
<p>When adding a new LogWriter, create a class that implements the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/LogWriter.html" title="nablarch.core.log.basic.LogWriter">LogWriter</a> interface.
When creating a LogWriter that uses <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/LogFormatter.html" title="nablarch.core.log.basic.LogFormatter">LogFormatter</a> , create by providing common processing, inheriting <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/LogWriterSupport.html" title="nablarch.core.log.basic.LogWriterSupport">LogWriterSupport</a>.</p>
</div>
<div class="section" id="add-logformatter">
<h3><a class="toc-backref" href="#id25">7.1.4.2. Add LogFormatter</a><a class="headerlink" href="#add-logformatter" title="Permalink to this headline">¶</a></h3>
<p>hen adding a new LogFormatter, create a class that implements the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/LogFormatter.html" title="nablarch.core.log.basic.LogFormatter">LogFormatter</a> interface.
To enable changing the text that indicates the log level in the configuration, use <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/LogLevelLabelProvider.html" title="nablarch.core.log.basic.LogLevelLabelProvider">LogLevelLabelProvider</a> .</p>
<p>Along with the addition of a new LogFormatter, there may be a need to increase parameters specified during log output, and receive the parameters increased by LogFormatter.
To increase the parameters specified during log output in this function, object types with variable length argument options are provided in the log output method of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/Logger.html" title="nablarch.core.log.Logger">Logger</a>  interface.</p>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="c1">// Logger # logInfo method signature</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">logInfo</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">,</span> <span class="n">Object</span><span class="o">...</span> <span class="n">options</span><span class="o">)</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">logInfo</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">,</span> <span class="n">Throwable</span> <span class="n">cause</span><span class="o">,</span> <span class="n">Object</span><span class="o">...</span> <span class="n">options</span><span class="o">)</span>
</pre></div>
</div>
<p>To increase the number of parameters for log output, specify and use the options argument.</p>
</div>
<div class="section" id="add-log-output-items-placeholders">
<h3><a class="toc-backref" href="#id26">7.1.4.3. Add log output items (placeholders)</a><a class="headerlink" href="#add-log-output-items-placeholders" title="Permalink to this headline">¶</a></h3>
<p><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/BasicLogFormatter.html" title="nablarch.core.log.basic.BasicLogFormatter">BasicLogFormatter</a>  uses the <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/LogItem.html" title="nablarch.core.log.LogItem">LogItem</a> interface to get all the output items corresponding to each placeholder.
Therefore, if a new placeholder is to be added, create the following classes.</p>
<ul class="simple">
<li>Create a class that implements <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/LogItem.html" title="nablarch.core.log.LogItem">LogItem</a> .</li>
<li>Create a class that inherits <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/BasicLogFormatter.html" title="nablarch.core.log.basic.BasicLogFormatter">BasicLogFormatter</a> and add a placeholder.</li>
</ul>
<p>An example of change to acquire the boot process from the LogFormatter configuration is shown.
The configuration of LogFormatter assumes the following.</p>
<div class="highlight-properties"><div class="highlight"><pre><span></span><span class="c"># Specifies a custom LogFormatter.</span>
<span class="na">writer.appLog.formatter.className</span><span class="o">=</span><span class="s">nablarch.core.log.basic.CustomLogFormatter</span>

<span class="c"># Specify the format</span>
<span class="na">writer.appLog.formatter.format</span><span class="o">=</span><span class="s">$date$ -$logLevel$- $loggerName$ [$bootProcess$] $message$</span>

<span class="c"># Specifies the boot process in the LogFormatter configuration.</span>
<span class="c"># Outputs the boot process specified here to $bootProcess$.</span>
<span class="na">writer.appLog.formatter.bootProcess</span><span class="o">=</span><span class="s">CUSTOM_PROCESS</span>
</pre></div>
</div>
<dl class="docutils">
<dt>Create a class that implements <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/LogItem.html" title="nablarch.core.log.LogItem">LogItem</a> .</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="c1">// Class to get a custom boot process.</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CustomBootProcessItem</span> <span class="kd">implements</span> <span class="n">LogItem</span><span class="o">&lt;</span><span class="n">LogContext</span><span class="o">&gt;</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="n">String</span> <span class="n">bootProcess</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">CustomBootProcessItem</span><span class="o">(</span><span class="n">ObjectSettings</span> <span class="n">settings</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// Get the boot process from LogFormatter configuration.</span>
        <span class="n">bootProcess</span> <span class="o">=</span> <span class="n">settings</span><span class="o">.</span><span class="na">getProp</span><span class="o">(</span><span class="s">&quot;bootProcess&quot;</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="n">String</span> <span class="nf">get</span><span class="o">(</span><span class="n">LogContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// Return the boot process obtained from the configuration.</span>
        <span class="k">return</span> <span class="n">bootProcess</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
<dt>Create a class that inherits <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/BasicLogFormatter.html" title="nablarch.core.log.basic.BasicLogFormatter">BasicLogFormatter</a>  and add a placeholder</dt>
<dd><div class="first last highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">CustomLogFormatter</span> <span class="kd">extends</span> <span class="n">BasicLogFormatter</span> <span class="o">{</span>

    <span class="c1">// Override the method to get the log output items to be formatted.</span>
    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">LogItem</span><span class="o">&lt;</span><span class="n">LogContext</span><span class="o">&gt;&gt;</span> <span class="nf">getLogItems</span><span class="o">(</span><span class="n">ObjectSettings</span> <span class="n">settings</span><span class="o">)</span> <span class="o">{</span>

        <span class="c1">// Overwrite the placeholder of the boot process.</span>
        <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">LogItem</span><span class="o">&lt;</span><span class="n">LogContext</span><span class="o">&gt;&gt;</span> <span class="n">logItems</span> <span class="o">=</span> <span class="kd">super</span><span class="o">.</span><span class="na">getLogItems</span><span class="o">(</span><span class="n">settings</span><span class="o">);</span>
        <span class="n">logItems</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;$bootProcess$&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">CustomBootProcessItem</span><span class="o">(</span><span class="n">settings</span><span class="o">));</span>
        <span class="k">return</span> <span class="n">logItems</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
</dl>
</div>
<div class="section" id="do-not-output-the-log-initialization-message">
<h3><a class="toc-backref" href="#id27">7.1.4.4. Do not output the log initialization message</a><a class="headerlink" href="#do-not-output-the-log-initialization-message" title="Permalink to this headline">¶</a></h3>
<p>An initialization message is output by this function to the log when each logger is initialized.
If the initialization message is not required for the monitored log, etc, then support by creating a Writer that does not output the initialization message based on the Writer provided by this function.</p>
<p>If the  <a class="reference internal" href="../../adaptors/log_adaptor.html#log-adaptor"><span>log Adapter</span></a> is used for the purpose of unifying the logger with the web application server or OSS product, this support is not necessary as initialization messages are not output.</p>
<p>The corresponding example shown below.</p>
<ol class="arabic">
<li><p class="first">Import (copy) the source code of the Writer class that will be the base to the project.
For example, when the log is output to a the file, copy  <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/FileLogWriter.html" title="nablarch.core.log.basic.FileLogWriter">FileLogWriter</a> .</p>
</li>
<li><p class="first">Delete the part that outputs the initialization log.</p>
<p>In the case of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/FileLogWriter.html" title="nablarch.core.log.basic.FileLogWriter">FileLogWriter</a> ,
delete the part that outputs the initialization message as shown in the modification example given below.</p>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="kd">private</span> <span class="kt">void</span> <span class="nf">initializeWriter</span><span class="o">()</span> <span class="o">{</span>
  <span class="k">try</span> <span class="o">{</span>
    <span class="n">out</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedOutputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="n">filePath</span><span class="o">,</span> <span class="kc">true</span><span class="o">),</span> <span class="n">outputBufferSize</span><span class="o">);</span>
    <span class="n">currentFileSize</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">filePath</span><span class="o">).</span><span class="na">length</span><span class="o">();</span>

    <span class="c1">// Delete the output process of the initialization message that was performed here</span>

  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">throw</span> <span class="k">new</span> <span class="n">IllegalArgumentException</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;failed to create %s. file name = [%s], encoding = [%s], buffer size =[%s]&quot;</span><span class="o">,</span>
        <span class="n">Writer</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">(),</span> <span class="n">filePath</span><span class="o">,</span> <span class="n">charset</span><span class="o">.</span><span class="na">displayName</span><span class="o">(),</span> <span class="n">outputBufferSize</span><span class="o">),</span> <span class="n">e</span><span class="o">);</span>
  <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
</li>
<li><p class="first">Change such that the initialization message after the log function initialization is not output.</p>
</li>
</ol>
<blockquote>
<div><p>Override <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/LogWriterSupport.html#needsToWrite-nablarch.core.log.basic.LogContext-" title="nablarch.core.log.basic.LogWriterSupport.needsToWrite(nablarch.core.log.basic.LogContext)">needsToWrite</a> ,
and change such that the initialization message that is called the first time is not output.</p>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="cm">/** Define the flag for initial determination */</span>
<span class="kd">private</span> <span class="kt">boolean</span> <span class="n">suppressionWriting</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>

<span class="nd">@Override</span>
<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">needsToWrite</span><span class="o">(</span><span class="kd">final</span> <span class="n">LogContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
  <span class="kd">final</span> <span class="n">String</span> <span class="n">message</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">getMessage</span><span class="o">();</span>
  <span class="k">if</span> <span class="o">(</span><span class="n">suppressionWriting</span><span class="o">)</span> <span class="o">{</span>
    <span class="c1">//  Since it is an initialization message if the log to be output starts from &quot;initialized.&quot;,</span>
    <span class="c1">// &quot;false&quot; is returned indicating that it is not the output target.</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">StringUtil</span><span class="o">.</span><span class="na">hasValue</span><span class="o">(</span><span class="n">message</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="n">message</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="s">&quot;initialized.&quot;</span><span class="o">))</span> <span class="o">{</span>
      <span class="n">suppressionWriting</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
      <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
    <span class="o">}</span>
  <span class="o">}</span>
  <span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">needsToWrite</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
<span class="o">}</span>
</pre></div>
</div>
</div></blockquote>
<ol class="arabic simple" start="4">
<li>Configure the created class in log.properties.</li>
</ol>
<blockquote>
<div><p>Configure the class name of the writer created in the project side, in log.properties.</p>
<p>The configuration example shown below.</p>
<div class="highlight-properties"><div class="highlight"><pre><span></span><span class="na">writerNames</span><span class="o">=</span><span class="s">sample</span>

<span class="c"># Configure the class created in the class name of the writer</span>
<span class="c"># Configuration example when the fully qualified class name is &quot;sample.CustomFileLogWriter&quot;</span>
<span class="na">writer.sample.className</span> <span class="o">=</span> <span class="s">sample.CustomFileLogWriter</span>
</pre></div>
</div>
</div></blockquote>
</div>
</div>
<div class="section" id="notes-on-using-the-synchronousfilelogwriter">
<span id="log-synchronous-file-log-writer-attention"></span><h2><a class="toc-backref" href="#id28">7.1.5. Notes on using the SynchronousFileLogWriter</a><a class="headerlink" href="#notes-on-using-the-synchronousfilelogwriter" title="Permalink to this headline">¶</a></h2>
<div class="admonition important">
<p class="first admonition-title">Important</p>
<p>Although <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/SynchronousFileLogWriter.html" title="nablarch.core.log.basic.SynchronousFileLogWriter">SynchronousFileLogWriter</a>
is designed for writing from multiple processes, it is assumed to be used only for low frequency log output
such as <a class="reference internal" href="log/failure_log.html#failure-log"><span>Failure notification log</span></a>.
If <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/SynchronousFileLogWriter.html" title="nablarch.core.log.basic.SynchronousFileLogWriter">SynchronousFileLogWriter</a> is used for frequent log output,
it may cause performance degradation due to waiting for lock acquisition or log loss due to conflict,
so do not use <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/SynchronousFileLogWriter.html" title="nablarch.core.log.basic.SynchronousFileLogWriter">SynchronousFileLogWriter</a>
for frequent log output such as application log or access log.</p>
<p>In addition, <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/SynchronousFileLogWriter.html" title="nablarch.core.log.basic.SynchronousFileLogWriter">SynchronousFileLogWriter</a>
has the following restrictions, so consider carefully before using it.</p>
<p>As <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/SynchronousFileLogWriter.html" title="nablarch.core.log.basic.SynchronousFileLogWriter">SynchronousFileLogWriter</a> has the following restrictions, use after sufficient consideration.</p>
<ul class="last simple">
<li>Cannot rotate logs.</li>
<li>Log contents that are output may not be normal.</li>
</ul>
</div>
<p><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/SynchronousFileLogWriter.html" title="nablarch.core.log.basic.SynchronousFileLogWriter">SynchronousFileLogWriter</a>  writes the log to the file while performing exclusive control using the lock file.
If the lock cannot be acquired even if the lock acquisition wait time is exceeded, the lock file is force deleted, and a lock file is generated for own thread use and the log output is generated.</p>
<p>If the lock file cannot be force deleted, outputs the log forcibly while the lock is still not acquired.
Also, if the lock file generation fails or even if an interruption occurs while waiting for lock acquisition,
force outputs the log when the lock is still not acquired.</p>
<p><strong>Note that when the log is forcibly output without acquiring the lock, the log may not output normally if there is a conflict between logs output from multiple processes.</strong></p>
<p>If such failures occur, the error log will be output to the same log file along with the forced output log.
Although the log prepared by this framework is output by default, by configuring the failure code in the property of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/SynchronousFileLogWriter.html" title="nablarch.core.log.basic.SynchronousFileLogWriter">SynchronousFileLogWriter</a>,
the log can be output in the failure notification log format (includes the failure code).
Configuring the failure code is recommended, as it is possible to monitor the log in the same way as the normal failure notification log, with output in the format for failure notification log.</p>
<p>The property names that configure the failure code are shown below.</p>
<dl class="docutils">
<dt>failureCodeCreateLockFile</dt>
<dd><table class="first last docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name" colspan="2">Details of the failure:</th></tr>
<tr class="field-odd field"><td>&nbsp;</td><td class="field-body">Cannot generate the lock file</td>
</tr>
<tr class="field-even field"><th class="field-name">Log level:</th><td class="field-body">FATAL</td>
</tr>
<tr class="field-odd field"><th class="field-name" colspan="2">Message configuration example (lock file path is set in {0}):</th></tr>
<tr class="field-odd field"><td>&nbsp;</td><td class="field-body">Failed to generate the lock file. The lock file path may be wrong.Lock file path = [{0}].</td>
</tr>
<tr class="field-even field"><th class="field-name" colspan="2">Default log output (failure code etc, are not output):</th></tr>
<tr class="field-even field"><td>&nbsp;</td><td class="field-body">failed to create lock file. perhaps lock file path was invalid. lock file path=[{0}].</td>
</tr>
</tbody>
</table>
</dd>
<dt>failureCodeReleaseLockFile</dt>
<dd><table class="first last docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name" colspan="2">Details of the failure:</th></tr>
<tr class="field-odd field"><td>&nbsp;</td><td class="field-body">The generated lock file cannot be released (deleted)</td>
</tr>
<tr class="field-even field"><th class="field-name">Log level:</th><td class="field-body">FATAL</td>
</tr>
<tr class="field-odd field"><th class="field-name" colspan="2">Message configuration example (lock file path is set in {0}):</th></tr>
<tr class="field-odd field"><td>&nbsp;</td><td class="field-body">Failed to delete the lock file. Lock file path = [{0}].</td>
</tr>
<tr class="field-even field"><th class="field-name" colspan="2">Default log output (failure code etc, are not output):</th></tr>
<tr class="field-even field"><td>&nbsp;</td><td class="field-body">failed to delete lock file. lock file path=[{0}].</td>
</tr>
</tbody>
</table>
</dd>
<dt>failureCodeForceDeleteLockFile</dt>
<dd><table class="first last docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name" colspan="2">Details of the failure:</th></tr>
<tr class="field-odd field"><td>&nbsp;</td><td class="field-body">Unable to force delete the lock files that are not released</td>
</tr>
<tr class="field-even field"><th class="field-name">Log level:</th><td class="field-body">FATAL</td>
</tr>
<tr class="field-odd field"><th class="field-name" colspan="2">Message configuration example (lock file path is set in {0}):</th></tr>
<tr class="field-odd field"><td>&nbsp;</td><td class="field-body">Force delete of the lock file failed. The lock file has been opened incorrectly.Lock file path = [{0}].</td>
</tr>
<tr class="field-even field"><th class="field-name" colspan="2">Default log output (failure code etc, are not output):</th></tr>
<tr class="field-even field"><td>&nbsp;</td><td class="field-body">failed to delete lock file forcedly. lock file was opened illegally. lock file path=[{0}].</td>
</tr>
</tbody>
</table>
</dd>
<dt>failureCodeInterruptLockWait</dt>
<dd><table class="first last docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name" colspan="2">Details of the failure:</th></tr>
<tr class="field-odd field"><td>&nbsp;</td><td class="field-body">Interruption occurs when the thread is sleeping waiting for lock acquisition.</td>
</tr>
<tr class="field-even field"><th class="field-name">Log level:</th><td class="field-body">FATAL</td>
</tr>
<tr class="field-odd field"><th class="field-name" colspan="2">Configuration example of message:</th></tr>
<tr class="field-odd field"><td>&nbsp;</td><td class="field-body">An interruption occurred when acquiring the lock.</td>
</tr>
<tr class="field-even field"><th class="field-name" colspan="2">Default log output (failure code etc, are not output):</th></tr>
<tr class="field-even field"><td>&nbsp;</td><td class="field-body">Interrupted while waiting for lock retry.</td>
</tr>
</tbody>
</table>
</dd>
</dl>
<div class="admonition important">
<p class="first admonition-title">Important</p>
<p class="last">Note that, although the log is output to the same log file in the failure notification log format if a failure code has been configured,
the failure analysis log will not be output.</p>
</div>
<p>A configuration example of <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/SynchronousFileLogWriter.html" title="nablarch.core.log.basic.SynchronousFileLogWriter">SynchronousFileLogWriter</a> is shown below.</p>
<div class="highlight-properties"><div class="highlight"><pre><span></span><span class="na">writerNames</span><span class="o">=</span><span class="s">monitorLog</span>

<span class="c"># Specifies the SynchronousFileLogWriter class</span>
<span class="na">writer.monitorLog.className</span><span class="o">=</span><span class="s">nablarch.core.log.basic.SynchronousFileLogWriter</span>
<span class="c"># Specifies the write destination file path.</span>
<span class="na">writer.monitorLog.filePath</span><span class="o">=</span><span class="s">/var/log/app/monitor.log</span>
<span class="c"># Specifies the character encoding to be used when writing.</span>
<span class="na">writer.monitorLog.encoding</span><span class="o">=</span><span class="s">UTF-8</span>
<span class="c"># Specifies the size of the output buffer.(Unit is kilobytes.Calculate 1000 bytes as 1 kilobyte. 8KB if not specified )</span>
<span class="na">writer.monitorLog.outputBufferSize</span><span class="o">=</span><span class="s">8</span>
<span class="c"># Specifies the class name of log formatter.</span>
<span class="na">writer.monitorLog.formatter.className</span><span class="o">=</span><span class="s">nablarch.core.log.basic.BasicLogFormatter</span>
<span class="c"># Specifies the name of the LogLevel enumeration type. All the logs that are above the level specified here will be output.</span>
<span class="na">writer.monitorLog.level</span><span class="o">=</span><span class="s">ERROR</span>
<span class="c"># Specifies the file name of the lock file.</span>
<span class="na">writer.monitorLog.lockFilePath</span><span class="o">=</span><span class="s">/var/log/lock/monitor.lock</span>
<span class="c"># Specifies the lock acquisition retrial interval (milliseconds)</span>
<span class="na">writer.monitorLog.lockRetryInterval</span><span class="o">=</span><span class="s">10</span>
<span class="c"># Specifies the wait time (milliseconds) to acquire the lock.</span>
<span class="na">writer.monitorLog.lockWaitTime</span><span class="o">=</span><span class="s">3000</span>
<span class="c"># Specifies the failure notification code when lock file cannot be generated.</span>
<span class="na">writer.monitorLog.failureCodeCreateLockFile</span><span class="o">=</span><span class="s">MSG00101</span>
<span class="c"># Specifies the failure notification code when the generated lock file cannot be released (deleted)</span>
<span class="na">writer.monitorLog.failureCodeReleaseLockFile</span><span class="o">=</span><span class="s">MSG00102</span>
<span class="c"># Specifies the failure notification code when the unreleased lock file cannot be forcibly deleted.</span>
<span class="na">writer.monitorLog.failureCodeForceDeleteLockFile</span><span class="o">=</span><span class="s">MSG00103</span>
<span class="c"># Specifies the failure notification code when an interruption occurs while the thread is sleeping waiting for the lock.</span>
<span class="na">writer.monitorLog.failureCodeInterruptLockWait</span><span class="o">=</span><span class="s">MSG00104</span>
</pre></div>
</div>
<div class="admonition important">
<p class="first admonition-title">Important</p>
<p class="last">Do not specify the maxFileSize property because log rotation may occur and log may not be output.</p>
</div>
</div>
<div class="section" id="how-to-use-logpublisher">
<span id="log-publisher-usage"></span><h2><a class="toc-backref" href="#id29">7.1.6. How to use LogPublisher</a><a class="headerlink" href="#how-to-use-logpublisher" title="Permalink to this headline">¶</a></h2>
<p><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/LogPublisher.html" title="nablarch.core.log.basic.LogPublisher">LogPublisher</a> provides a function to send the output log information (<a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/LogContext.html" title="nablarch.core.log.basic.LogContext">LogContext</a>) to the registered <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/LogListener.html" title="nablarch.core.log.basic.LogListener">LogListener</a>.
This function is useful to process the output log programmatically.</p>
<p>At first, define <code class="docutils literal"><span class="pre">LogPublisher</span></code> as <code class="docutils literal"><span class="pre">LogWriter</span></code>.</p>
<div class="highlight-properties"><div class="highlight"><pre><span></span><span class="c"># ...</span>

<span class="c"># Add the writer of LogPublisher to writerNames</span>
<span class="na">writerNames</span><span class="o">=</span><span class="s">monitorFile,appFile,stdout,logPublisher</span>

<span class="c"># Define the logPublisher</span>
<span class="na">writer.logPublisher.className</span><span class="o">=</span><span class="s">nablarch.core.log.basic.LogPublisher</span>
<span class="na">writer.logPublisher.formatter.className</span><span class="o">=</span><span class="s">nablarch.core.log.basic.BasicLogFormatter</span>
<span class="c"># ...</span>

<span class="c"># Add the writer of LogPublisher to the writerNames of the logger that you want to process the log information.</span>
<span class="c"># ROO</span>
<span class="na">loggers.ROO.nameRegex</span><span class="o">=</span><span class="s">.*</span>
<span class="na">loggers.ROO.level</span><span class="o">=</span><span class="s">INFO</span>
<span class="na">loggers.ROO.writerNames</span><span class="o">=</span><span class="s">appFile,stdout,logPublisher</span>

<span class="c"># MON</span>
<span class="na">loggers.MON.nameRegex</span><span class="o">=</span><span class="s">MONITOR</span>
<span class="na">loggers.MON.level</span><span class="o">=</span><span class="s">ERROR</span>
<span class="na">loggers.MON.writerNames</span><span class="o">=</span><span class="s">monitorFile,logPublisher</span>

<span class="c"># ...</span>
</pre></div>
</div>
<p>Next, create an implementation class of <code class="docutils literal"><span class="pre">LogListener</span></code> to register with <code class="docutils literal"><span class="pre">LogWriter</span></code>.</p>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="kn">package</span> <span class="nn">example.micrometer.log</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">nablarch.core.log.basic.LogContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">nablarch.core.log.basic.LogListener</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CustomLogListener</span> <span class="kd">implements</span> <span class="n">LogListener</span> <span class="o">{</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onWritten</span><span class="o">(</span><span class="n">LogContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// Implementing a process using LogContext.</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
<p>Finally, register the instance of <code class="docutils literal"><span class="pre">LogListener</span></code> to <code class="docutils literal"><span class="pre">LogPublisher</span></code>.
You can register <code class="docutils literal"><span class="pre">LogListener</span></code> with the static method of <code class="docutils literal"><span class="pre">LogPublisher</span></code>.</p>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="n">LogListener</span> <span class="n">listener</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CustomLogListener</span><span class="o">();</span>
<span class="n">LogPublisher</span><span class="o">.</span><span class="na">addListener</span><span class="o">(</span><span class="n">listener</span><span class="o">);</span>
</pre></div>
</div>
<p>Now the <code class="docutils literal"><span class="pre">LogPublisher</span></code> can send the output log information to the <code class="docutils literal"><span class="pre">CustomLogListener</span></code>.</p>
<p>You can remove the <code class="docutils literal"><span class="pre">LogListener</span></code> from the <code class="docutils literal"><span class="pre">LogPublisher</span></code> with <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/LogPublisher.html#removeListener-nablarch.core.log.basic.LogListener-" title="nablarch.core.log.basic.LogPublisher.removeListener(nablarch.core.log.basic.LogListener)">removeListener(LogListener)</a> or <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/log/basic/LogPublisher.html#removeAllListeners--" title="nablarch.core.log.basic.LogPublisher.removeAllListeners()">removeAllListeners()</a>.</p>
</div>
<div class="section" id="log-level-definition">
<span id="log-log-level"></span><h2><a class="toc-backref" href="#id30">7.1.7. Log level definition</a><a class="headerlink" href="#log-level-definition" title="Permalink to this headline">¶</a></h2>
<p>This function uses the following log levels.</p>
<table border="1" class="colwidths-given white-space-normal docutils" id="id10">
<caption><span class="caption-text">Log level definition</span><a class="headerlink" href="#id10" title="Permalink to this table">¶</a></caption>
<colgroup>
<col width="15%" />
<col width="85%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Log level</th>
<th class="head">Description</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>FATAL</td>
<td>Indicates that a serious problem has occurred that makes it impossible for the application to continue.
Monitoring is required and prompt notification and immediate response are necessary.</td>
</tr>
<tr class="row-odd"><td>ERROR</td>
<td>Indicates that a problem has occurred that interferes with the continuation of the application.
Although monitoring is required, notification and response are not as urgent as the FATAL level.</td>
</tr>
<tr class="row-even"><td>WARN</td>
<td>Though there is no immediate impact, it indicates that the event if not addressed could cause a problem that may interfere with the continuation of the application.
The event should be monitored if possible, but it is not as urgent as the ERROR level.</td>
</tr>
<tr class="row-odd"><td>INFO</td>
<td>Log level that outputs the application information during the production operation. Applicable to access and statistics logs.</td>
</tr>
<tr class="row-even"><td>DEBUG</td>
<td>Log level to output debug information during development. Applicable to SQL and performance logs.</td>
</tr>
<tr class="row-odd"><td>TRACE</td>
<td>Log level to be used when a more detailed information output is required over debug information during development.</td>
</tr>
</tbody>
</table>
<p>The log consists of 6 levels, and decrease from FATAL to TRACE.
The log output function outputs all logs of a level or higher, as specified by the setting.
For example, when WARN level is specified in the configuration, only the logs specified with the FATAL level, ERROR level and WARN level are output.</p>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">During production operation, logs are assumed to be output at the INFO level.
Specify the log output contents of each project so that the log file size does not become big.</p>
</div>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">Even this framework outputs log using the log output function.
For the log output by the framework, see  <a class="reference internal" href="#log-fw-log-policy"><span>Framework log output policy</span></a> .</p>
</div>
</div>
<div class="section" id="framework-log-output-policy">
<span id="log-fw-log-policy"></span><h2><a class="toc-backref" href="#id31">7.1.8. Framework log output policy</a><a class="headerlink" href="#framework-log-output-policy" title="Permalink to this headline">¶</a></h2>
<p>The framework outputs logs based on the below output policy.</p>
<table border="1" class="colwidths-given white-space-normal docutils" id="id11">
<caption><span class="caption-text">Framework log output policy</span><a class="headerlink" href="#id11" title="Permalink to this table">¶</a></caption>
<colgroup>
<col width="15%" />
<col width="85%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Log level</th>
<th class="head">Output policy</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>FATAL/ERROR</td>
<td><p class="first">Outputs at the FATAL/ERROR level when the failure log is output.</p>
<p>Since the failure log is the target of failure monitoring, it is the starting point for primary isolation during failure,
and the policy is to output one failure log for each failure.</p>
<p class="last">Therefore, the policy is to output an failure notification log from the runtime platform with a single handler (handler that processes exceptions).</p>
</td>
</tr>
<tr class="row-odd"><td>WARN</td>
<td><p class="first">When the exceptions are linked when an error occurs,
exceptions that cannot be output as failure logs are output at WARN level.</p>
<p class="last">For example, if an exception occurs in both the business process and end process of transaction,
the business process exception is output to the failure log, and the end process exception of transaction is output at the WARN level.</p>
</td>
</tr>
<tr class="row-even"><td>INFO</td>
<td><p class="first">When an error related to the application execution status is detected, output is at INFO level.</p>
<p class="last">For example, for errors of tampering URL parameters or permission check errors, output is at INFO level.</p>
</td>
</tr>
<tr class="row-odd"><td>DEBUG</td>
<td><p class="first">Outputs debug information used during application development.</p>
<p class="last">During application development, the information required for development is considered to be output by configuring at the DEBUG level.</p>
</td>
</tr>
<tr class="row-even"><td>TRACE</td>
<td>Outputs the debug information for use during framework development. Not intended for use in application development.</td>
</tr>
</tbody>
</table>
</div>
<div class="section" id="functional-comparison-with-log4j">
<span id="log-functional-comparison"></span><h2><a class="toc-backref" href="#id32">7.1.9. Functional comparison with log4j</a><a class="headerlink" href="#functional-comparison-with-log4j" title="Permalink to this headline">¶</a></h2>
<p>Function comparison between Nablrach and <a class="reference external" href="http://logging.apache.org/log4j/1.2/">log4j (external site)</a> are shown below.</p>
<table border="1" class="colwidths-given white-space-normal docutils" id="id12">
<caption><span class="caption-text">Function comparison (A: Provided B: Partially provided C: Not provided D: Not applicable)</span><a class="headerlink" href="#id12" title="Permalink to this table">¶</a></caption>
<colgroup>
<col width="50%" />
<col width="25%" />
<col width="25%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Function</th>
<th class="head">Nablarch</th>
<th class="head">log4j</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>Whether to output logs can be controlled at the log level</td>
<td>A
<br />
<a class="reference internal" href="#log-basic-setting"><span>To the manual</span></a></td>
<td>A</td>
</tr>
<tr class="row-odd"><td>Whether to output the log can be controlled by category (package unit, name, etc.)</td>
<td>A
<br />
<a class="reference internal" href="#log-basic-setting"><span>To the manual</span></a></td>
<td>A</td>
</tr>
<tr class="row-even"><td>One log can be output to multiple output destinations</td>
<td>A
<br />
<a class="reference internal" href="#log-basic-setting"><span>To the manual</span></a></td>
<td>A</td>
</tr>
<tr class="row-odd"><td>Log can be output to standard output</td>
<td>A
<br />
<a class="reference internal" href="#log-log-writers"><span>To the manual</span></a></td>
<td>A</td>
</tr>
<tr class="row-even"><td>Log can be output to a file</td>
<td>A
<br />
<a class="reference internal" href="#log-log-writers"><span>To the manual</span></a></td>
<td>A</td>
</tr>
<tr class="row-odd"><td>Log files can be rotated by file size</td>
<td>B <a class="footnote-reference" href="#logrolate" id="id1">[1]</a>
<br />
<a class="reference internal" href="#log-log-writers"><span>To the manual</span></a></td>
<td>A</td>
</tr>
<tr class="row-even"><td>Log files can be rotated by date and time</td>
<td>C <a class="footnote-reference" href="#extends-or-log4j" id="id2">[2]</a></td>
<td>A</td>
</tr>
<tr class="row-odd"><td>Log can be sent by email</td>
<td>C <a class="footnote-reference" href="#extends-or-log4j" id="id3">[2]</a></td>
<td>A</td>
</tr>
<tr class="row-even"><td>Logs can be sent by Telnet</td>
<td>C <a class="footnote-reference" href="#extends-or-log4j" id="id4">[2]</a></td>
<td>A</td>
</tr>
<tr class="row-odd"><td>Log can be sent by Syslog</td>
<td>C <a class="footnote-reference" href="#extends-or-log4j" id="id5">[2]</a></td>
<td>A</td>
</tr>
<tr class="row-even"><td>Logs can be added to the Windows NT event log</td>
<td>C <a class="footnote-reference" href="#extends-or-log4j" id="id6">[2]</a></td>
<td>A</td>
</tr>
<tr class="row-odd"><td>Can output logs to the database</td>
<td>C <a class="footnote-reference" href="#extends-or-log4j" id="id7">[2]</a></td>
<td>A</td>
</tr>
<tr class="row-even"><td>Log can be output asynchronously</td>
<td>C <a class="footnote-reference" href="#extends-or-log4j" id="id8">[2]</a></td>
<td>A</td>
</tr>
<tr class="row-odd"><td>Log format can be specified with a pattern string</td>
<td>A
<br />
<a class="reference internal" href="#log-log-format"><span>To the manual</span></a></td>
<td>A</td>
</tr>
<tr class="row-even"><td>Can output failure log</td>
<td>A
<br />
<a class="reference internal" href="log/failure_log.html#failure-log"><span>To the manual</span></a></td>
<td>D</td>
</tr>
<tr class="row-odd"><td>Can output HTTP access log</td>
<td>A
<br />
<a class="reference internal" href="log/http_access_log.html#http-access-log"><span>To the manual</span></a></td>
<td>D</td>
</tr>
<tr class="row-even"><td>Can output SQL log</td>
<td>A
<br />
<a class="reference internal" href="log/sql_log.html#sql-log"><span>To the manual</span></a></td>
<td>D</td>
</tr>
<tr class="row-odd"><td>Can output performance log</td>
<td>A
<br />
<a class="reference internal" href="log/performance_log.html#performance-log"><span>To the manual</span></a></td>
<td>D</td>
</tr>
<tr class="row-even"><td>Can output messaging log</td>
<td>A
<br />
<a class="reference internal" href="log/messaging_log.html#messaging-log"><span>To the manual</span></a></td>
<td>D</td>
</tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="logrolate" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id1">[1]</a></td><td>Nablarch log output does not provide file generation management, so it is partially provided.</td></tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="extends-or-log4j" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label">[2]</td><td><em>(<a class="fn-backref" href="#id2">1</a>, <a class="fn-backref" href="#id3">2</a>, <a class="fn-backref" href="#id4">3</a>, <a class="fn-backref" href="#id5">4</a>, <a class="fn-backref" href="#id6">5</a>, <a class="fn-backref" href="#id7">6</a>, <a class="fn-backref" href="#id8">7</a>)</em> Use <a class="reference internal" href="../../adaptors/log_adaptor.html#log-adaptor"><span>log Adapter</span></a> .
Or create it in the project. For the creation method, see <a class="reference internal" href="#log-add-log-writer"><span>Add LogWriter</span></a> .</td></tr>
</tbody>
</table>
</div>
</div>


           </div>
           <div class="articleComments">
            
           </div>
          </div>
          <footer>

    <hr/>

    <div role="contentinfo">
        <p>
            &copy; Copyright 2010-2021, TIS Inc.
        </p>
    </div>
    Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org">Read the Docs</a>.

</footer>

        </div>
      </div>

    </section>

  </div>
  


  

    <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'../../../',
            VERSION:'5u19',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true,
            SOURCELINK_SUFFIX: ''
        };
    </script>
      <script type="text/javascript" src="../../../_static/jquery.js"></script>
      <script type="text/javascript" src="../../../_static/underscore.js"></script>
      <script type="text/javascript" src="../../../_static/doctools.js"></script>
      <script type="text/javascript" src="../../../_static/custom.js"></script>

  

  
  
    <script type="text/javascript" src="../../../_static/js/theme.js"></script>
  

  
  
  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>
   

</body>
</html>