


<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->
<head>
  <meta charset="utf-8">
  <meta http-equiv='content-language' content='ja'>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>7.13. コード管理 &mdash; ∇Nablarch  5u19 ドキュメント</title>
  

  
  
  
  

  

  
  
    

  

  
  
    <link rel="stylesheet" href="../../../_static/custom.css" type="text/css" />
  

  

  
  <link rel="canonical" href="https://nablarch.github.io/docs/LATEST/doc/application_framework/application_framework/libraries/code.html" />
  
    <link rel="top" title="∇Nablarch  5u19 ドキュメント" href="../../../index.html"/>
        <link rel="up" title="7. Nablarchが提供するライブラリ" href="index.html"/>
        <link rel="next" title="7.14. 日付管理" href="date.html"/>
        <link rel="prev" title="7.12. 排他制御" href="exclusive_control.html"/>
 

  
  <script src="../../../_static/js/modernizr.min.js"></script>

</head>

<body class="wy-body-for-nav" role="document">

   
  <div class="wy-grid-for-nav">

    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search">
          
  
  <a href="../../../index.html" id="sidebar-title" class="icon"> ∇Nablarch 
  

  
    <div id="sidebar-version">Version: 5u19</div>
  </a>

  <div role="search">
    <form id="google-search-form" class="wy-form" method="get" action="https://www.google.co.jp/search">
      <input type="text" name="text" placeholder="Search docs on google" id="text"/>
      <input type="hidden" name="q" id="q"/>
    </form>
  </div>
    
    

        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
  
  
    <ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../../about_nablarch/index.html">Nablarchについて</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../about_nablarch/concept.html">Nablarchのコンセプト</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../about_nablarch/concept.html#robustness">Robustness</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../about_nablarch/concept.html#testability">Testability</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../about_nablarch/concept.html#ready-to-use">Ready-to-Use</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../about_nablarch/mvn_module.html">Nablarch のモジュール一覧</a></li>
<li class="toctree-l2"><a class="reference internal" href="../../../about_nablarch/license.html">Nablarchのライセンスについて</a></li>
</ul>
</li>
<li class="toctree-l1 current"><a class="reference internal" href="../../index.html">Nablarchアプリケーションフレームワーク</a><ul class="current">
<li class="toctree-l2 current"><a class="reference internal" href="../index.html">アプリケーションフレームワーク</a><ul class="current">
<li class="toctree-l3"><a class="reference internal" href="../nablarch/index.html">1. Nablarchアプリケーションフレームワークとは</a></li>
<li class="toctree-l3"><a class="reference internal" href="../web/index.html">2. ウェブアプリケーション編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../web_service/index.html">3. ウェブサービス編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../batch/index.html">4. バッチアプリケーション編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../messaging/index.html">5. メッセージング編</a></li>
<li class="toctree-l3"><a class="reference internal" href="../handlers/index.html">6. Nablarchの提供する標準ハンドラ</a></li>
<li class="toctree-l3 current"><a class="reference internal" href="index.html">7. Nablarchが提供するライブラリ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../blank_project/index.html">8. ブランクプロジェクト</a></li>
<li class="toctree-l3"><a class="reference internal" href="../setting_guide/index.html">9. Nablarchアプリケーションフレームワーク設定ガイド</a></li>
<li class="toctree-l3"><a class="reference internal" href="../configuration/index.html">10. デフォルト設定一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../cloud_native/index.html">11. Nablarchクラウドネイティブ対応</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../adaptors/index.html">アダプタ</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/log_adaptor.html">logアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/router_adaptor.html">ルーティングアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/webspheremq_adaptor.html">IBM WebSphere MQアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/jaxrs_adaptor.html">JAX-RSアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/doma_adaptor.html">Domaアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/jsr310_adaptor.html">JSR310(Date and Time API)アダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/mail_sender_freemarker_adaptor.html">E-mail FreeMarkerアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/mail_sender_thymeleaf_adaptor.html">E-mail Thymeleafアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/mail_sender_velocity_adaptor.html">E-mail Velocityアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/web_thymeleaf_adaptor.html">ウェブアプリケーション Thymeleafアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/lettuce_adaptor.html">Lettuceアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/slf4j_adaptor.html">SLF4Jアダプタ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../adaptors/micrometer_adaptor.html">Micrometerアダプタ</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../example/index.html">Example</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../example/index.html#id1">環境構築手順について</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../example/index.html#id2">アプリケーションの実行手順について</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../extension_components/index.html">Nablarch拡張コンポーネント</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../extension_components/report/index.html">1. 帳票ライブラリ</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/report/index.html#id2">1.1. 概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/report/index.html#id3">1.2. 要求</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/report/index.html#id7">1.3. 構造</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/report/index.html#report-template">1.4. 実装例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../extension_components/workflow/doc/index.html">2. ワークフローライブラリ</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/workflow/doc/index.html#id3">2.1. 機能概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/workflow/doc/index.html#id6">2.2. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/workflow/doc/index.html#id7">2.3. 使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/workflow/doc/index.html#xor">2.4. XORゲートウェイの進行先ノードの判定方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/workflow/doc/index.html#workflow-multi-completion">2.5. マルチインスタンスの完了条件の判定方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../extension_components/workflow/tool/index.html">3. ワークフロー定義データ生成ツール</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/workflow/tool/index.html#id3">3.1. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/workflow/tool/index.html#id4">3.2. 使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../extension_components/etl/index.html">4. ETL</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/etl/index.html#id3">4.1. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/etl/index.html#etl-phase">4.2. ETLの各フェーズの仕様</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/etl/index.html#id5">4.3. ETLを使用するバッチの設計ポイント</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/etl/index.html#id9">4.4. 使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/etl/index.html#id18">4.5. 拡張例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../extension_components/etl/etl_maven_plugin.html">5. ETL Mavenプラグイン</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/etl/etl_maven_plugin.html#id2">5.1. モジュール一覧</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../extension_components/etl/etl_maven_plugin.html#id3">5.2. 使用方法</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../development_tools/index.html">Nablarch開発ツール</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../development_tools/java_static_analysis/index.html">1. 効率的なJava静的チェック</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/java_static_analysis/index.html#code-analysis">1.1. 構文チェックを行う</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/java_static_analysis/index.html#code-format">1.2. フォーマットを統一する</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/java_static_analysis/index.html#api">1.3. 許可していないAPIが使用されていないかチェックする</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../development_tools/ui_dev/index.html">2. フロントエンド上級者向けのUI開発基盤</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/ui_dev/doc/index.html">2.1. Nablarch UI開発基盤 解説書</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/ui_dev/guide/index.html">2.2. JSP/HTML作成ガイド</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/ui_dev/guide/widget_usage/widget_list.html">2.3. UI部品の実装サンプルで提供しているウィジェットの一覧</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../development_tools/testing_framework/index.html">3. テスティングフレームワーク</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/testing_framework/guide/development_guide/05_UnitTestGuide/index.html">3.1. 単体テスト実施方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/testing_framework/guide/development_guide/06_TestFWGuide/index.html">3.2. 自動テストフレームワークの使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/testing_framework/guide/development_guide/08_TestTools/index.html">3.3. プログラミング工程で使用するツール</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../development_tools/toolbox/index.html">4. アプリケーション開発時に使える便利なツール</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/toolbox/JspStaticAnalysis/index.html">4.1. JSP静的解析ツール</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/toolbox/SqlExecutor/SqlExecutor.html">4.2. Nablarch SQL Executor</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../development_tools/toolbox/JspVerifier/JspVerifier.html">4.3. 業務画面JSP検証ツール</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../examples/index.html">Nablarch実装例集</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/01/index.html">データベースを用いたパスワード認証機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/01/0101_PBKDF2PasswordEncryptor.html">PBKDF2を用いたパスワード暗号化機能サンプル</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/01/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/01/index.html#id4">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/01/index.html#id6">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/01/index.html#id12">使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/02/index.html">バリデーション機能の拡張</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/02/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/02/index.html#extendedvalidation-mailaddressvalidator">メールアドレスバリデーション</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/02/index.html#extendedvalidation-japanesetelnumbervalidator">日本電話番号バリデーション</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/02/index.html#id12">コード値精査</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/03/index.html">検索結果の一覧表示</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#id4">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#id5">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#id8">使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#listsearchinfo">ListSearchInfoクラス</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#listsearchresult">listSearchResultタグ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#listsearchresult-sort">検索結果の並び替え</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#listsearchresult-nopaging">1画面にすべての検索結果を一覧表示する場合の実装方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#listsearchresult-defaultcondition">デフォルトの検索条件で検索した結果を初期表示する場合の実装方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#listsearchresult-setting">検索結果の一覧表示機能のデフォルト値設定</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#listsearchresult-customize">業務アプリケーションへのサンプル実装(タグファイル)の取り込み方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/03/index.html#listsearchresult-tagreference">タグリファレンス</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/04/index.html">フォーマッタ機能の拡張</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/04/0401_ExtendedDataFormatter.html">データフォーマッタの拡張</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/04/0402_ExtendedFieldType.html">データフォーマッタ機能におけるフィールドタイプの拡張</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/05/index.html">データベースを用いたファイル管理機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/05/index.html#id2">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/05/index.html#id6">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/05/index.html#id7">機能</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/05/index.html#id10">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/05/index.html#id15">使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/06/index.html">CAPTCHA機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/06/06_Captcha_guide.html">CAPTCHA機能の組み込み手順</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/06/index.html#id3">提供パッケージ</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/06/index.html#id4">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/06/index.html#id6">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/06/index.html#id21">使用方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/07/index.html">UserAgent情報取得機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/07/index.html#id1">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/07/index.html#id3">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/07/index.html#id8">設定の記述</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/07/index.html#id11">使用例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/08/index.html">HTMLメール送信機能サンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/08/index.html#id1">概要</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/08/index.html#id3">要求</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/08/index.html#id6">構成</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/08/index.html#id14">実装例</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/09/index.html">bouncycastleを使用した電子署名つきメールの送信サンプルの使用方法</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/09/index.html#id3">環境準備</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/09/index.html#id4">電子署名付きメール送信機能の構造</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/09/index.html#id5">設定ファイルの準備</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/09/index.html#id7">実行方法</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/10/index.html">ログ集計サンプルの使用方法</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/10/index.html#id3">提供サンプル一覧</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../../../examples/11/index.html">メッセージング基盤テストシミュレータサンプル</a><ul>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/11/index.html#id4">用途</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/11/index.html#id8">特徴</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/11/index.html#id12">要求</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/11/index.html#id15">使用方法</a></li>
<li class="toctree-l3"><a class="reference internal" href="../../../examples/11/index.html#id18">拡張例</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../../nablarch_api/index.html">Nablarch API</a></li>
</ul>

  

        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" role="navigation" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../../../index.html">∇Nablarch </a>
        
      </nav>


      
      <div class="wy-nav-content">
        <div class="rst-content">
          

 



<div role="navigation" aria-label="breadcrumbs navigation">
  <ul class="wy-breadcrumbs">
    <li><a href="../../../index.html">Docs</a> &raquo;</li>
      
          <li><a href="../../index.html">Nablarchアプリケーションフレームワーク</a> &raquo;</li>
      
          <li><a href="../index.html">アプリケーションフレームワーク</a> &raquo;</li>
      
          <li><a href="index.html">7. Nablarchが提供するライブラリ</a> &raquo;</li>
      
    <li>7.13. コード管理</li>
    <li class="wy-breadcrumbs-aside">
      <a href="https://github.com/nablarch" class="fa fa-github">GitHub</a>
    </li>
    <li class="wy-breadcrumbs-aside">
        <a href="https://nablarch.github.io/docs/LATEST/doc/en/index.html" class="en">English</a>
    </li>
  </ul>
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  <div class="section" id="code">
<span id="id1"></span><h1>7.13. コード管理<a class="headerlink" href="#code" title="このヘッドラインへのパーマリンク">¶</a></h1>
<div class="contents local topic" id="id2">
<p class="topic-title first">目次</p>
<ul class="simple">
<li><a class="reference internal" href="#id3" id="id14">機能概要</a><ul>
<li><a class="reference internal" href="#id4" id="id15">国際化に対応できる</a></li>
<li><a class="reference internal" href="#code-table" id="id16">コード情報はテーブルで管理する</a></li>
</ul>
</li>
<li><a class="reference internal" href="#id6" id="id17">モジュール一覧</a></li>
<li><a class="reference internal" href="#id7" id="id18">使用方法</a><ul>
<li><a class="reference internal" href="#code-setup-table" id="id19">コード管理機能を使用する為の初期設定を行う</a></li>
<li><a class="reference internal" href="#code-use-pattern" id="id20">機能毎に使用するコード情報を切り替える</a></li>
<li><a class="reference internal" href="#code-use-multilingualization" id="id21">名称の多言語化対応を行う</a></li>
<li><a class="reference internal" href="#code-use-sort-order" id="id22">画面などで表示する名称のソート順を定義する</a></li>
<li><a class="reference internal" href="#code-option-name" id="id23">名称、略称以外の名称を定義する</a></li>
<li><a class="reference internal" href="#code-validation" id="id24">入力値が有効なコード値かチェックする</a></li>
</ul>
</li>
</ul>
</div>
<p>アプリケーションで使用する値と名称とのマッピングを管理する機能を提供する。</p>
<p>例えば、以下の様な性別区分と表示名称のマッピング情報を管理する。</p>
<table border="1" class="docutils">
<colgroup>
<col width="25%" />
<col width="29%" />
<col width="46%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">値</th>
<th class="head">名称</th>
<th class="head">略称</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>male</td>
<td>男性</td>
<td>男</td>
</tr>
<tr class="row-odd"><td>female</td>
<td>女性</td>
<td>女</td>
</tr>
</tbody>
</table>
<div class="admonition important">
<p class="first admonition-title">重要</p>
<p class="last">この機能では、静的なコード情報(値と名称とのマッピング)を管理するものであり、「商品コード」や「企業コード」といった値に紐づく情報が動的に変化するものは管理対象外とする。
このような情報は、アプリケーションでマスタ用のテーブルを作成し、対処すること。</p>
</div>
<div class="admonition important">
<p class="first admonition-title">重要</p>
<p class="last">この機能を使用すると、コードの名称を持つテーブルとコード値を持つテーブルにRDBMSの参照整合性制約を設定できない。
このような制約のチェックには <a class="reference internal" href="#code-validation"><span>入力値が有効なコード値かチェックする</span></a> を使用すること。</p>
</div>
<div class="admonition tip">
<p class="first admonition-title">補足</p>
<p>静的なコード情報については、以下の理由によりenumで表現したほうが良い。</p>
<ul class="simple">
<li>値と名称の単純なマッピングを行いたいだけの場合、データベースを使用したコード定義は大掛かりであり、メンテナンスのコストが掛かる。</li>
<li>データベースを使ったコード定義の場合、Java上でコード値を扱うための数値型定数を定義することが多いため二重メンテナンスが発生する。</li>
</ul>
<p>しかし、Nablarchはenumの値とデータベースの値との相互変換の機能を持っておらず、enumの値をデータベースに登録できない。</p>
<p class="last">Domaを使用することで、enumの値をデータベース登録できる。
Domaを使用する際は、 <a class="reference internal" href="../../adaptors/doma_adaptor.html#doma-adaptor"><span>Domaアダプタ</span></a> を参照し設定を行うこと。</p>
</div>
<div class="section" id="id3">
<h2><a class="toc-backref" href="#id14">7.13.1. 機能概要</a><a class="headerlink" href="#id3" title="このヘッドラインへのパーマリンク">¶</a></h2>
<div class="section" id="id4">
<h3><a class="toc-backref" href="#id15">7.13.1.1. 国際化に対応できる</a><a class="headerlink" href="#id4" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p>この機能は、言語ごとに名称を管理することが出来る。</p>
<p>詳細は、 <a class="reference internal" href="#code-use-multilingualization"><span>名称の多言語化対応を行う</span></a> を参照。</p>
</div>
<div class="section" id="code-table">
<span id="id5"></span><h3><a class="toc-backref" href="#id16">7.13.1.2. コード情報はテーブルで管理する</a><a class="headerlink" href="#code-table" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p>この機能は、値及び名称の情報をデータベース上で管理する。
このため、事前にデータベースにテーブルを作成し、静的なコード情報をテーブル上に登録しておくこと。</p>
<p>詳細は、 <a class="reference internal" href="#code-setup-table"><span>コード管理機能を使用する為の初期設定を行う</span></a> を参照。</p>
</div>
</div>
<div class="section" id="id6">
<h2><a class="toc-backref" href="#id17">7.13.2. モジュール一覧</a><a class="headerlink" href="#id6" title="このヘッドラインへのパーマリンク">¶</a></h2>
<div class="highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>com.nablarch.framework<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>nablarch-common-code<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
<span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>com.nablarch.framework<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>nablarch-common-code-jdbc<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</pre></div>
</div>
</div>
<div class="section" id="id7">
<h2><a class="toc-backref" href="#id18">7.13.3. 使用方法</a><a class="headerlink" href="#id7" title="このヘッドラインへのパーマリンク">¶</a></h2>
<div class="section" id="code-setup-table">
<span id="id8"></span><h3><a class="toc-backref" href="#id19">7.13.3.1. コード管理機能を使用する為の初期設定を行う</a><a class="headerlink" href="#code-setup-table" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p>この機能を使用するためには、コードを管理するためのテーブルを作成し、その情報を設定ファイルに設定する必要がある。</p>
<p>以下にテーブルの構造及び設定例を示す。</p>
<dl class="docutils">
<dt>テーブルの構造</dt>
<dd><p class="first">コード情報は、 <code class="docutils literal"><span class="pre">コードパターンテーブル</span></code> と <code class="docutils literal"><span class="pre">コード名称テーブル</span></code> の2つのテーブルを使用する。
2テーブルの関係は、以下のとおり。</p>
<img alt="../../../_images/code_table.png" src="../../../_images/code_table.png" />
<div class="line-block">
<div class="line"><br /></div>
<div class="line"><br /></div>
</div>
<p>各カラムの用途などは、以下の通り。</p>
<table class="last docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">ID:</th><td class="field-body"><p class="first">コード情報を一意に識別するためのID</p>
<p>性別区分や住所区分毎に一意のIDを設定する。</p>
</td>
</tr>
<tr class="field-even field"><th class="field-name">VALUE:</th><td class="field-body"><p class="first">コード情報内の名称を識別する値</p>
<p>性別区分であれば、 <code class="docutils literal"><span class="pre">male</span></code> や <code class="docutils literal"><span class="pre">female</span></code> といった値になる。</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">PATTERN:</th><td class="field-body"><p class="first">値を使用するか否かのフラグ( <code class="docutils literal"><span class="pre">0</span></code> または <code class="docutils literal"><span class="pre">1</span></code> を設定する)</p>
<p>有効な値を切り替えたい場合に使用する。不要な場合は省略可能。</p>
<p>詳細は <a class="reference internal" href="#code-use-pattern"><span>機能毎に使用するコード情報を切り替える</span></a> を参照。</p>
</td>
</tr>
<tr class="field-even field"><th class="field-name">LANG:</th><td class="field-body"><p class="first">言語</p>
<p>多言語化対応を行う場合に、サポートする言語の <em>Local#getLanguage()</em> を格納する。</p>
<p>日本語のみをサポートする場合は、 <code class="docutils literal"><span class="pre">ja</span></code> を設定する。</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">SORT_ORDER:</th><td class="field-body"><p class="first">ソート順</p>
<p>IDに紐づく一覧情報を取得すると、このカラムに設定された値の昇順で結果が返される。</p>
<p>詳細は <a class="reference internal" href="#code-use-sort-order"><span>画面などで表示する名称のソート順を定義する</span></a> を参照。</p>
</td>
</tr>
<tr class="field-even field"><th class="field-name">NAME:</th><td class="field-body"><p class="first">名称</p>
<p>VALUEに対応した名称を設定する。</p>
</td>
</tr>
<tr class="field-odd field"><th class="field-name">SHORT_NAME:</th><td class="field-body"><p class="first">略称</p>
<p>VALUEに対応した略称を設定する。</p>
</td>
</tr>
<tr class="field-even field"><th class="field-name">OPTIONAL_NAME:</th><td class="field-body"><p class="first">オプション名称</p>
<p>名称と略称だけでは、表示する文言の値を管理しきれない場合に使用する。
カラム名やカラム数は必要数定義することが出来る。</p>
<p class="last">詳細は、 <a class="reference internal" href="#code-option-name"><span>名称、略称以外の名称を定義する</span></a> を参照。</p>
</td>
</tr>
</tbody>
</table>
</dd>
<dt>設定ファイル例</dt>
<dd><p class="first">コード管理を使用する為の設定ファイル例を以下に示す。</p>
<dl class="docutils">
<dt>ポイント</dt>
<dd><ul class="first last simple">
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/code/BasicCodeManager.html" title="nablarch.common.code.BasicCodeManager">BasicCodeManager</a> のコンポーネント名は、 <strong>codeManager</strong> とすること。</li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/cache/BasicStaticDataCache.html" title="nablarch.core.cache.BasicStaticDataCache">BasicStaticDataCache</a> の <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/cache/BasicStaticDataCache.html#setLoadOnStartup-boolean-" title="nablarch.core.cache.BasicStaticDataCache.setLoadOnStartup(boolean)">loadOnStartup</a> に対する設定値は、 <a class="reference internal" href="static_data_cache.html#static-data-cache-cache-timing"><span>データのキャッシュタイミングを制御する</span></a> を参照すること。</li>
<li><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/core/cache/BasicStaticDataCache.html" title="nablarch.core.cache.BasicStaticDataCache">BasicStaticDataCache</a> は、初期化が必要なので初期化対象のリストに設定すること。</li>
</ul>
</dd>
</dl>
<div class="last highlight-xml"><div class="highlight"><pre><span></span><span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;codeLoader&quot;</span> <span class="na">class=</span><span class="s">&quot;nablarch.common.code.BasicCodeLoader&quot;</span><span class="nt">&gt;</span>

  <span class="c">&lt;!-- コードパターンテーブルのスキーマ情報 --&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;codePatternSchema&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.common.code.schema.CodePatternSchema&quot;</span><span class="nt">&gt;</span>
      <span class="c">&lt;!-- CodePatternSchemaのプロパティにテーブル名及びカラム名を設定する。 --&gt;</span>
    <span class="nt">&lt;/component&gt;</span>
  <span class="nt">&lt;/property&gt;</span>

  <span class="c">&lt;!-- コード名称テーブルのスキーマ情報 --&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;codeNameSchema&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;component</span> <span class="na">class=</span><span class="s">&quot;nablarch.common.code.schema.CodeNameSchema&quot;</span><span class="nt">&gt;</span>
      <span class="c">&lt;!-- CodeNameSchemaのプロパティにテーブル名及びカラム名を設定する。 --&gt;</span>
    <span class="nt">&lt;/component&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/component&gt;</span>

<span class="c">&lt;!-- データベースから取得した情報をキャッシュするための設定 --&gt;</span>
<span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;codeCache&quot;</span> <span class="na">class=</span><span class="s">&quot;nablarch.core.cache.BasicStaticDataCache&quot;</span> <span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;loader&quot;</span> <span class="na">ref=</span><span class="s">&quot;codeLoader&quot;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;loadOnStartup&quot;</span> <span class="na">value=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/component&gt;</span>

<span class="c">&lt;!-- データベースから取得した情報をキャッシュするクラスをBasicCodeManagerに設定する --&gt;</span>
<span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;codeManager&quot;</span> <span class="na">class=</span><span class="s">&quot;nablarch.common.code.BasicCodeManager&quot;</span> <span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;codeDefinitionCache&quot;</span> <span class="na">ref=</span><span class="s">&quot;codeCache&quot;</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/component&gt;</span>

<span class="c">&lt;!-- BasicStaticDataCacheは初期化が必要なため初期化リストに設定する --&gt;</span>
<span class="nt">&lt;component</span> <span class="na">name=</span><span class="s">&quot;initializer&quot;</span>
    <span class="na">class=</span><span class="s">&quot;nablarch.core.repository.initialization.BasicApplicationInitializer&quot;</span><span class="nt">&gt;</span>
  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;initializeList&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;list&gt;</span>
      <span class="nt">&lt;component-ref</span> <span class="na">name=</span><span class="s">&quot;codeCache&quot;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;/list&gt;</span>
  <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/component&gt;</span>
</pre></div>
</div>
</dd>
</dl>
</div>
<div class="section" id="code-use-pattern">
<span id="id9"></span><h3><a class="toc-backref" href="#id20">7.13.3.2. 機能毎に使用するコード情報を切り替える</a><a class="headerlink" href="#code-use-pattern" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p>コード情報をリスト表示する際に、機能毎に表示・非表示を切り替えたい場合がある。
このような場合は、コードパターンテーブルのパターンを用いて、機能毎にどのパターンの情報を表示するか否かを切り替える。</p>
<p>以下に例を示す。</p>
<dl class="docutils">
<dt>コードパターンテーブルにパターンカラムを定義する</dt>
<dd><p class="first">コードパターンテーブルに表示パターンを持つパターン列を定義する。</p>
<p>パターン列は、 <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/code/schema/CodePatternSchema.html#setPatternColumnNames-java.lang.String:A-" title="nablarch.common.code.schema.CodePatternSchema.setPatternColumnNames(java.lang.String:A)">CodePatternSchema.patternColumnNames</a> に設定することで利用可能となる。
設定ファイルへの設定方法は、 <a class="reference internal" href="#code-setup-table"><span>コード管理機能を使用する為の初期設定を行う</span></a> を参照。</p>
<p>この例では、 <code class="docutils literal"><span class="pre">PATTERN1</span></code> と <code class="docutils literal"><span class="pre">PATTERN2</span></code> の2つのパターンを定義し、
<code class="docutils literal"><span class="pre">PATTERN2</span></code> ではOTHERを非表示としている。</p>
<dl class="last docutils">
<dt>コードパターンテーブル</dt>
<dd><table border="1" class="first last docutils">
<colgroup>
<col width="20%" />
<col width="26%" />
<col width="23%" />
<col width="31%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">ID</th>
<th class="head">VALUE</th>
<th class="head">PATTERN1</th>
<th class="head">PATTERN2</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>GENDER</td>
<td>MALE</td>
<td>1</td>
<td>1</td>
</tr>
<tr class="row-odd"><td>GENDER</td>
<td>FEMALE</td>
<td>1</td>
<td>1</td>
</tr>
<tr class="row-even"><td>GENDER</td>
<td>OTHER</td>
<td>1</td>
<td>0</td>
</tr>
</tbody>
</table>
</dd>
<dt>コード名称テーブル</dt>
<dd><table border="1" class="first last docutils">
<colgroup>
<col width="14%" />
<col width="18%" />
<col width="8%" />
<col width="20%" />
<col width="20%" />
<col width="22%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">ID</th>
<th class="head">VALUE</th>
<th class="head">LANG</th>
<th class="head">SORT_ORDER</th>
<th class="head">NAME</th>
<th class="head">SHORT_NAME</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>GENDER</td>
<td>MALE</td>
<td>ja</td>
<td>1</td>
<td>男性</td>
<td>男</td>
</tr>
<tr class="row-odd"><td>GENDER</td>
<td>FEMALE</td>
<td>ja</td>
<td>2</td>
<td>女性</td>
<td>女</td>
</tr>
<tr class="row-even"><td>GENDER</td>
<td>OTHER</td>
<td>ja</td>
<td>3</td>
<td>その他</td>
<td>他</td>
</tr>
</tbody>
</table>
</dd>
</dl>
</dd>
<dt>パターンを指定してコード情報を取得する</dt>
<dd><p class="first">コード情報は、 <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/code/CodeUtil.html" title="nablarch.common.code.CodeUtil">CodeUtil</a> を使用して取得する。</p>
<p>パターンを使用する場合、どのパターンを使用するかは文字列で指定する。
この値は、 <a class="reference internal" href="#code-setup-table"><span>コード管理機能を使用する為の初期設定を行う</span></a> で設定ファイルに設定したカラム名と厳密に一致させる必要がある。</p>
<div class="last highlight-java"><div class="highlight"><pre><span></span><span class="c1">// PATTER1のリストを取得する。</span>
<span class="c1">// [MALE, FEMALE, OTHER]が取得できる。</span>
<span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">pattern1</span> <span class="o">=</span> <span class="n">CodeUtil</span><span class="o">.</span><span class="na">getValues</span><span class="o">(</span><span class="s">&quot;GENDER&quot;</span><span class="o">,</span> <span class="s">&quot;PATTERN1&quot;</span><span class="o">);</span>

<span class="c1">// PATTER2のリストを取得する。</span>
<span class="c1">// [MALE, FEMALE]が取得できる。</span>
<span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">pattern2</span> <span class="o">=</span> <span class="n">CodeUtil</span><span class="o">.</span><span class="na">getValues</span><span class="o">(</span><span class="s">&quot;GENDER&quot;</span><span class="o">,</span> <span class="s">&quot;PATTERN2&quot;</span><span class="o">);</span>
</pre></div>
</div>
</dd>
<dt>画面(JSP)でパターンを指定してコード情報を取得する</dt>
<dd><p class="first">コード情報を取得するカスタムタグライブラリを使用する際に、パターンを指定することでそのパターンの情報のみが表示される。</p>
<p>カスタムタグライブラリの詳細な使用方法は、以下を参照。</p>
<ul class="simple">
<li><a class="reference internal" href="tag.html#tag-code-input-output"><span>コード値を表示する</span></a></li>
</ul>
<p>PATTERN2を指定する場合は、以下のように <cite>pattern</cite> 属性に指定する。</p>
<div class="highlight-jsp"><div class="highlight"><pre><span></span><span class="nt">&lt;n:codeSelect</span> <span class="na">name=</span><span class="s">&quot;form.gender&quot;</span> <span class="na">codeId=</span><span class="s">&quot;GENDER&quot;</span> <span class="na">pattern=</span><span class="s">&quot;PATTERN2&quot;</span> <span class="na">cssClass=</span><span class="s">&quot;form-control&quot;</span> <span class="nt">/&gt;</span>
</pre></div>
</div>
<p>PATTERN2で対象となっている、 <code class="docutils literal"><span class="pre">男性</span></code> と <code class="docutils literal"><span class="pre">女性</span></code> が出力される。</p>
<img alt="../../../_images/code_pattern.png" class="last" src="../../../_images/code_pattern.png" />
</dd>
</dl>
</div>
<div class="section" id="code-use-multilingualization">
<span id="id10"></span><h3><a class="toc-backref" href="#id21">7.13.3.3. 名称の多言語化対応を行う</a><a class="headerlink" href="#code-use-multilingualization" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p>名称の多言語化対応を行うには、コード名称テーブルにサポートする言語ごとのデータを準備する。</p>
<p>以下に例を示す。</p>
<dl class="docutils">
<dt>コード名称テーブルのデータ</dt>
<dd><p class="first">この例の場合、 <code class="docutils literal"><span class="pre">ja</span></code> と <code class="docutils literal"><span class="pre">en</span></code> の２つの言語がサポートされる。</p>
<table border="1" class="last docutils">
<colgroup>
<col width="14%" />
<col width="18%" />
<col width="8%" />
<col width="20%" />
<col width="20%" />
<col width="22%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">ID</th>
<th class="head">VALUE</th>
<th class="head">LANG</th>
<th class="head">SORT_ORDER</th>
<th class="head">NAME</th>
<th class="head">SHORT_NAME</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>GENDER</td>
<td>MALE</td>
<td>ja</td>
<td>1</td>
<td>男性</td>
<td>男</td>
</tr>
<tr class="row-odd"><td>GENDER</td>
<td>FEMALE</td>
<td>ja</td>
<td>2</td>
<td>女性</td>
<td>女</td>
</tr>
<tr class="row-even"><td>GENDER</td>
<td>OTHER</td>
<td>ja</td>
<td>3</td>
<td>その他</td>
<td>他</td>
</tr>
<tr class="row-odd"><td>GENDER</td>
<td>MALE</td>
<td>en</td>
<td>1</td>
<td>Male</td>
<td>M</td>
</tr>
<tr class="row-even"><td>GENDER</td>
<td>FEMALE</td>
<td>en</td>
<td>2</td>
<td>Female</td>
<td>F</td>
</tr>
<tr class="row-odd"><td>GENDER</td>
<td>OTHER</td>
<td>en</td>
<td>3</td>
<td>Unknown</td>
<td>-</td>
</tr>
</tbody>
</table>
</dd>
<dt>言語を指定してコード情報を取得する</dt>
<dd><p class="first"><a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/code/CodeUtil.html" title="nablarch.common.code.CodeUtil">CodeUtil</a> を使用して、言語に対応した名称を取得出来る。</p>
<div class="last highlight-java"><div class="highlight"><pre><span></span><span class="c1">// 名称</span>
<span class="n">CodeUtil</span><span class="o">.</span><span class="na">getName</span><span class="o">(</span><span class="s">&quot;GENDER&quot;</span><span class="o">,</span> <span class="s">&quot;MALE&quot;</span><span class="o">,</span> <span class="n">Locale</span><span class="o">.</span><span class="na">JAPANESE</span><span class="o">);</span>    <span class="c1">// -&gt; 男性</span>
<span class="n">CodeUtil</span><span class="o">.</span><span class="na">getName</span><span class="o">(</span><span class="s">&quot;GENDER&quot;</span><span class="o">,</span> <span class="s">&quot;MALE&quot;</span><span class="o">,</span> <span class="n">Locale</span><span class="o">.</span><span class="na">ENGLISH</span><span class="o">);</span>     <span class="c1">// -&gt; Male</span>

<span class="c1">// 略称</span>
<span class="n">CodeUtil</span><span class="o">.</span><span class="na">getShortName</span><span class="o">(</span><span class="s">&quot;GENDER&quot;</span><span class="o">,</span> <span class="s">&quot;MALE&quot;</span><span class="o">,</span> <span class="n">Locale</span><span class="o">.</span><span class="na">JAPANESE</span><span class="o">)</span> <span class="c1">// -&gt; 男</span>
<span class="n">CodeUtil</span><span class="o">.</span><span class="na">getShortName</span><span class="o">(</span><span class="s">&quot;GENDER&quot;</span><span class="o">,</span> <span class="s">&quot;MALE&quot;</span><span class="o">,</span> <span class="n">Locale</span><span class="o">.</span><span class="na">ENGLISH</span><span class="o">)</span> <span class="c1">// -&gt; M</span>
</pre></div>
</div>
</dd>
</dl>
<div class="admonition important">
<p class="first admonition-title">重要</p>
<p class="last">JSP用に提供されているカスタムタグライブラリでは、言語指定による値の取得はできないので注意すること。
カスタムタグライブラリが使用する言語情報の詳細は、 <a class="reference internal" href="tag.html#tag-code-input-output"><span>コード値を表示する</span></a> を参照。</p>
</div>
</div>
<div class="section" id="code-use-sort-order">
<span id="id11"></span><h3><a class="toc-backref" href="#id22">7.13.3.4. 画面などで表示する名称のソート順を定義する</a><a class="headerlink" href="#code-use-sort-order" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p>画面のリストボックやチェックボックスにコード情報を表示する際のソート順を定義出来る。
ソート順は、国ごとに異なる可能性があるため、言語ごとに設定することが出来る。</p>
<p>以下に例を示す。</p>
<dl class="docutils">
<dt>コード名称テーブルのSORT_ORDERにソート順を設定する</dt>
<dd><p class="first">ソート順は、コード名称テーブルのSORT_ORDERカラムに設定する。</p>
<p>この例では、 <code class="docutils literal"><span class="pre">MALE</span></code> -&gt; <code class="docutils literal"><span class="pre">FEMALE</span></code> -&gt; <code class="docutils literal"><span class="pre">OTHER</span></code> の順に表示される。</p>
<table border="1" class="last docutils">
<colgroup>
<col width="14%" />
<col width="18%" />
<col width="8%" />
<col width="20%" />
<col width="20%" />
<col width="22%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">ID</th>
<th class="head">VALUE</th>
<th class="head">LANG</th>
<th class="head">SORT_ORDER</th>
<th class="head">NAME</th>
<th class="head">SHORT_NAME</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>GENDER</td>
<td>MALE</td>
<td>ja</td>
<td>1</td>
<td>男性</td>
<td>男</td>
</tr>
<tr class="row-odd"><td>GENDER</td>
<td>FEMALE</td>
<td>ja</td>
<td>2</td>
<td>女性</td>
<td>女</td>
</tr>
<tr class="row-even"><td>GENDER</td>
<td>OTHER</td>
<td>ja</td>
<td>3</td>
<td>その他</td>
<td>他</td>
</tr>
</tbody>
</table>
</dd>
<dt>画面表示例</dt>
<dd><p class="first">カスタムタグライブラリの <cite>codeSelect</cite> を使用した場合は、
以下のように  <code class="docutils literal"><span class="pre">MALE(男性)</span></code> -&gt; <code class="docutils literal"><span class="pre">FEMALE(女性)</span></code> -&gt; <code class="docutils literal"><span class="pre">OTHER(その他)</span></code> の順に表示される。</p>
<img alt="../../../_images/code_sort.png" class="last" src="../../../_images/code_sort.png" />
</dd>
</dl>
</div>
<div class="section" id="code-option-name">
<span id="id12"></span><h3><a class="toc-backref" href="#id23">7.13.3.5. 名称、略称以外の名称を定義する</a><a class="headerlink" href="#code-option-name" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p>デフォルトの動作では名称と略称の2種類の名称を使用できる。</p>
<p>要件によっては、これら以外の表示名称を定義したい場合がある。
この場合は、オプション名称領域を使用して対応する。</p>
<p>以下に例を示す。</p>
<dl class="docutils">
<dt>コード名称テーブルにオプション名称カラムを定義する</dt>
<dd><p class="first">コード名称テーブルに、オプションの名称を持つカラムを定義する。</p>
<p>パターン列は、 <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/code/schema/CodePatternSchema.html#setPatternColumnNames-java.lang.String:A-" title="nablarch.common.code.schema.CodePatternSchema.setPatternColumnNames(java.lang.String:A)">CodePatternSchema.patternColumnNames</a> に設定することで利用可能となる。
設定ファイルへの設定方法は、 <a class="reference internal" href="#code-setup-table"><span>コード管理機能を使用する為の初期設定を行う</span></a> を参照。</p>
<p>この例では、オプション名称のカラムとして、 <code class="docutils literal"><span class="pre">FORM_NAME</span></code> と <code class="docutils literal"><span class="pre">KANA_NAME</span></code> の2つを定義している。</p>
<table border="1" class="last docutils">
<colgroup>
<col width="10%" />
<col width="12%" />
<col width="5%" />
<col width="14%" />
<col width="14%" />
<col width="15%" />
<col width="15%" />
<col width="15%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">ID</th>
<th class="head">VALUE</th>
<th class="head">LANG</th>
<th class="head">SORT_ORDER</th>
<th class="head">NAME</th>
<th class="head">SHORT_NAME</th>
<th class="head">FORM_NAME</th>
<th class="head">KANA_NAME</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>GENDER</td>
<td>MALE</td>
<td>ja</td>
<td>1</td>
<td>男性</td>
<td>男</td>
<td>Male</td>
<td>おとこ</td>
</tr>
<tr class="row-odd"><td>GENDER</td>
<td>FEMALE</td>
<td>ja</td>
<td>2</td>
<td>女性</td>
<td>女</td>
<td>Female</td>
<td>おんな</td>
</tr>
<tr class="row-even"><td>GENDER</td>
<td>OTHER</td>
<td>ja</td>
<td>3</td>
<td>その他</td>
<td>他</td>
<td>Other</td>
<td>そのた</td>
</tr>
</tbody>
</table>
</dd>
<dt>オプションの名称を取得する</dt>
<dd><p class="first">オプション名称は、  <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/code/CodeUtil.html" title="nablarch.common.code.CodeUtil">CodeUtil</a> を使用して取得する。</p>
<p>オプション名称を取得する場合、どのオプション名称を取得するかを文字列で指定する。
この値は、 <a class="reference internal" href="#code-setup-table"><span>コード管理機能を使用する為の初期設定を行う</span></a> で設定ファイルに設定したカラム名と厳密に一致させる必要がある。</p>
<div class="last highlight-java"><div class="highlight"><pre><span></span><span class="n">CodeUtil</span><span class="o">.</span><span class="na">getOptionalName</span><span class="o">(</span><span class="s">&quot;GENDER&quot;</span><span class="o">,</span> <span class="s">&quot;MALE&quot;</span><span class="o">,</span> <span class="s">&quot;KANA_NAME&quot;</span><span class="o">)</span> <span class="c1">// -&gt; おとこ</span>
<span class="n">CodeUtil</span><span class="o">.</span><span class="na">getOptionalName</span><span class="o">(</span><span class="s">&quot;GENDER&quot;</span><span class="o">,</span> <span class="s">&quot;FEMALE&quot;</span><span class="o">,</span> <span class="s">&quot;FORM_NAME&quot;</span><span class="o">,</span> <span class="n">Locale</span><span class="o">.</span><span class="na">JAPANESE</span><span class="o">)</span> <span class="c1">// -&gt; Female</span>
</pre></div>
</div>
</dd>
<dt>画面(JSP)でオプショナル名称を表示する</dt>
<dd><p class="first">カスタムタグライブラリを使用する際に、オプショナル名称を指定することでその名称を表示できる。</p>
<p>カスタムタグライブラリの詳細な使用方法は以下を参照。</p>
<ul class="simple">
<li>code_select</li>
<li>code</li>
</ul>
<p>KANA_NAMEの名称を表示する場合は、以下のように <cite>optionColumnName</cite> を指定し、 <cite>labelPattern</cite> に <strong>$OPTIONALNAME$</strong> を指定する。</p>
<div class="highlight-jsp"><div class="highlight"><pre><span></span><span class="nt">&lt;n:codeSelect</span> <span class="na">name=</span><span class="s">&quot;form.gender&quot;</span> <span class="na">codeId=</span><span class="s">&quot;GENDER&quot;</span> <span class="na">optionColumnName=</span><span class="s">&quot;KANA_NAME&quot;</span> <span class="na">cssClass=</span><span class="s">&quot;form-control&quot;</span> <span class="na">labelPattern=</span><span class="s">&quot;$OPTIONALNAME$&quot;</span><span class="nt">/&gt;</span>
</pre></div>
</div>
<p>オプション名称のKANA_NAMEの値が表示される。</p>
<img alt="../../../_images/code_option_name.png" class="last" src="../../../_images/code_option_name.png" />
</dd>
</dl>
</div>
<div class="section" id="code-validation">
<span id="id13"></span><h3><a class="toc-backref" href="#id24">7.13.3.6. 入力値が有効なコード値かチェックする</a><a class="headerlink" href="#code-validation" title="このヘッドラインへのパーマリンク">¶</a></h3>
<p>入力値(画面の場合はクライアントから送信されるリクエストパラメータ)が、コードの有効範囲内かをチェック出来る機能を提供する。
この機能を使用すると、アノテーションの設定のみで入力値のチェックを行える。</p>
<p>以下に例を示す。</p>
<dl class="docutils">
<dt><a class="reference internal" href="validation/bean_validation.html#bean-validation"><span>Bean Validation</span></a></dt>
<dd><p class="first"><a class="reference internal" href="validation/bean_validation.html#bean-validation"><span>Bean Validation</span></a> を使用する場合は、 <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/code/validator/ee/CodeValue.html" title="nablarch.common.code.validator.ee.CodeValue">nablarch.common.code.validator.ee.CodeValue</a> アノテーションを使用する。</p>
<div class="last highlight-java"><div class="highlight"><pre><span></span><span class="nd">@CodeValue</span><span class="o">(</span><span class="n">codeId</span> <span class="o">=</span> <span class="s">&quot;GENDER&quot;</span><span class="o">)</span>
<span class="kd">private</span> <span class="n">String</span> <span class="n">gender</span><span class="o">;</span>
</pre></div>
</div>
</dd>
<dt><a class="reference internal" href="validation/nablarch_validation.html#nablarch-validation"><span>Nablarch Validation</span></a></dt>
<dd><p class="first"><a class="reference internal" href="validation/nablarch_validation.html#nablarch-validation"><span>Nablarch Validation</span></a> を使用する場合は、 <a class="reference external" href="https://nablarch.github.io/docs/LATEST/javadoc/nablarch/common/code/validator/CodeValue.html" title="nablarch.common.code.validator.CodeValue">nablarch.common.code.validator.CodeValue</a> アノテーションを使用する。</p>
<div class="last highlight-java"><div class="highlight"><pre><span></span><span class="nd">@CodeValue</span><span class="o">(</span><span class="n">codeId</span> <span class="o">=</span> <span class="s">&quot;GENDER&quot;</span><span class="o">)</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setGender</span><span class="o">(</span><span class="n">String</span> <span class="n">gender</span><span class="o">)</span> <span class="o">{</span>
  <span class="k">this</span><span class="o">.</span><span class="na">gender</span> <span class="o">=</span> <span class="n">gender</span><span class="o">;</span>
<span class="o">}</span>
</pre></div>
</div>
</dd>
</dl>
<p>入力画面などで、 <a class="reference internal" href="#code-use-pattern"><span>パターン</span></a> を使用して、選択できる値を制限した場合、
バリデーション時にもそのパターン内で有効な値かをチェックする必要がある。</p>
<p>バリデーション用のアノテーションの <cite>pattern</cite> 属性にパターン名を指定することで、
そのパターンで有効な値かをチェックする事ができる。</p>
<p>以下に例を示す。</p>
<div class="highlight-java"><div class="highlight"><pre><span></span><span class="nd">@CodeValue</span><span class="o">(</span><span class="n">codeId</span> <span class="o">=</span> <span class="s">&quot;GENDER&quot;</span><span class="o">,</span> <span class="n">pattern</span> <span class="o">=</span> <span class="s">&quot;PATTERN2&quot;</span><span class="o">)</span>
<span class="kd">private</span> <span class="n">String</span> <span class="n">gender</span><span class="o">;</span>
</pre></div>
</div>
<div class="admonition tip">
<p class="first admonition-title">補足</p>
<p><a class="reference internal" href="validation/bean_validation.html#bean-validation-domain-validation"><span>ドメインバリデーション</span></a> を使用した場合、1つのドメインに対して1つのパターンしか指定できない。
このため、複数のパターンに対応するためには、パターンに対応したドメインを定義する必要がある。</p>
<p>ただし、全てのパターンに対応したドメインを定義する必要はなく、バリデーションで必要なドメインのみ定義すればよい。</p>
<p>以下に例を示す。</p>
<div class="last highlight-java"><div class="highlight"><pre><span></span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SampleDomainBean</span> <span class="o">{</span>

  <span class="c1">// PATTERN1用のドメイン</span>
  <span class="nd">@CodeValue</span><span class="o">(</span><span class="n">codeId</span> <span class="o">=</span> <span class="s">&quot;FLOW_STATUS&quot;</span><span class="o">,</span> <span class="n">pattern</span> <span class="o">=</span> <span class="s">&quot;PATTERN1&quot;</span><span class="o">)</span>
  <span class="n">String</span> <span class="n">flowStatusGeneral</span><span class="o">;</span>

  <span class="c1">// PATTERN2用のドメイン</span>
  <span class="nd">@CodeValue</span><span class="o">(</span><span class="n">codeId</span> <span class="o">=</span> <span class="s">&quot;FLOW_STATUS&quot;</span><span class="o">,</span> <span class="n">pattern</span> <span class="o">=</span> <span class="s">&quot;PATTERN2&quot;</span><span class="o">)</span>
  <span class="n">String</span> <span class="n">flowStatusGuest</span><span class="o">;</span>

<span class="o">}</span>
</pre></div>
</div>
</div>
</div>
</div>
</div>


           </div>
           <div class="articleComments">
            
           </div>
          </div>
          <footer>

    <hr/>

    <div role="contentinfo">
        <p>
            &copy; Copyright 2010-2021, TIS Inc.
        </p>
    </div>
    Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org">Read the Docs</a>.

</footer>

        </div>
      </div>

    </section>

  </div>
  


  

    <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'../../../',
            VERSION:'5u19',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true,
            SOURCELINK_SUFFIX: ''
        };
    </script>
      <script type="text/javascript" src="../../../_static/jquery.js"></script>
      <script type="text/javascript" src="../../../_static/underscore.js"></script>
      <script type="text/javascript" src="../../../_static/doctools.js"></script>
      <script type="text/javascript" src="../../../_static/custom.js"></script>
      <script type="text/javascript" src="../../../_static/translations.js"></script>

  

  
  
    <script type="text/javascript" src="../../../_static/js/theme.js"></script>
  

  
  
  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>
   

</body>
</html>